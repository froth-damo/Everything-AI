id_desc,datasource
"3cx_supply_chain_attack_network_indicators:The analytic provided below employs the Network_Resolution datamodel to detect domain indicators associated with the 3CX supply chain attack. By leveraging this query, you can efficiently conduct retrospective analysis of your data to uncover potential compromises.",DNS
7zip_commandline_to_smb_share_path:This search is to detect a suspicious 7z process with commandline pointing to SMB network share. This technique was seen in CONTI LEAK tools where it use 7z to archive a sensitive files and place it in network share tmp folder. This search is a good hunting query that may give analyst a hint why specific user try to archive a file pointing to SMB user which is un usual.,Endpoint Detection and Response
abnormally_high_aws_instances_launched_by_user:This search looks for AWS CloudTrail events where a user successfully launches an abnormally high number of instances. This search is deprecated and have been translated to use the latest Change Datamodel,AWS
abnormally_high_aws_instances_terminated_by_user:This search looks for AWS CloudTrail events where an abnormally high number of instances were successfully terminated by a user in a 10-minute window. This search is deprecated and have been translated to use the latest Change Datamodel.,AWS
abnormally_high_number_of_cloud_infrastructure_api_calls:This search will detect a spike in the number of API calls made to your cloud infrastructure environment by a user.,Change Events Data
abnormally_high_number_of_cloud_instances_destroyed:This search finds for the number successfully destroyed cloud instances for every 4 hour block. This is split up between weekdays and the weekend. It then applies the probability densitiy model previously created and alerts on any outliers.,Change Events Data
abnormally_high_number_of_cloud_instances_launched:This search finds for the number successfully created cloud instances for every 4 hour block. This is split up between weekdays and the weekend. It then applies the probability densitiy model previously created and alerts on any outliers.,Change Events Data
abnormally_high_number_of_cloud_security_group_api_calls:This search will detect a spike in the number of API calls made to your cloud infrastructure environment about security groups by a user.,Change Events Data
"abnormally_high_number_of_endpoint_changes_by_user:Detects an abnormally high number of endpoint changes by user account, as they relate to restarts, audits, filesystem, user, and registry modifications.",Endpoint Detection and Response
abnormally_high_number_of_http_method_events_by_src:Alerts when a host has an abnormally high number of HTTP requests by http method.,Web Proxy
access_inscope_resources:Visibility into who is accessing in-scope resources is key to your GDPR efforts. Splunk allows easy analysis of that information.,Web Proxy
"access_inscope_resources_unencrypted:Unencrypted communications leaves you vulnerable to a data breach -- when users access PII data, ensure that all connections are encrypted.",Web Proxy
access_lsass_memory_for_dump_creation:Detect memory dumping of the LSASS process.,Microsoft Sysmon Logs
account_deleted:Detects user and computer account deletion,User Activity Audit
"account_discovery_with_net_app:This search is to detect a potential account discovery series of command used by several malware or attack to recon the target machine. This technique is also seen in some note worthy malware like trickbot where it runs a cmd process, or even drop its module that will execute the said series of net command. This series of command are good correlation search and indicator of attacker recon if seen in the machines within a none technical user or department (HR, finance, ceo and etc) network.",Endpoint Detection and Response
"active_directory_lateral_movement_identified:The primary objective of this correlation rule is to detect and alert on potential lateral movement activities within an organization's Active Directory (AD) environment. By identifying multiple analytics associated with the Active Directory Lateral Movement analytic story, security analysts can gain better insight into possible threats and respond accordingly to mitigate risks. The correlation rule will trigger an alert when multiple analytics from the Active Directory Lateral Movement analytic story are detected within a specified time frame. The rule will generate an alert if a predetermined threshold of correlated analytics is reached within the specified time frame. This threshold can be customized to suit the needs and risk appetite of the organization.",Risk Modifiers
"active_directory_privilege_escalation_identified:The primary objective of this correlation rule is to detect and alert on potential privilege escalation activities within an organization's Active Directory (AD) environment. By identifying multiple analytics associated with the Active Directory Privilege Escalation analytic story, security analysts can gain better insight into possible threats and respond accordingly to mitigate risks. The correlation rule will trigger an alert when multiple analytics from the Active Directory Privilege Escalation analytic story are detected within a specified time frame. The rule will generate an alert if a predetermined threshold of correlated analytics is reached within the specified time frame. This threshold can be customized to suit the needs and risk appetite of the organization.",Risk Modifiers
"active_setup_registry_autostart:This analytic is to detect a suspicious modification of the active setup registry for persistence and privilege escalation. This technique was seen in several malware (poisonIvy), adware and APT to gain persistence to the compromised machine upon boot up. This TTP is a good indicator to further check the process id that do the modification since modification of this registry is not commonly done. check the legitimacy of the file and process involve in this rules to check if it is a valid setup installer that creating or modifying this registry.",Endpoint Detection and Response
"activity_from_expired_user_identity:Alerts when an event is discovered from a user associated with identity that is now expired (that is, the end date of the identity has been passed).",Authentication
add_defaultuser_and_password_in_registry:this search is to detect a suspicious registry modification to implement auto admin logon to a host. This technique was seen in BlackMatter ransomware to automatically logon to the compromise host after  triggering a safemode boot to continue encrypting the whole network. This behavior is not a common practice and really a suspicious TTP or alert need to be consider if found within then network premise.,Endpoint Detection and Response
"add_or_set_windows_defender_exclusion:This analytic will identify a suspicious process command-line related to Windows Defender exclusion feature. This command is abused by adversaries, malware authors and red teams to bypass Windows Defender Antivirus products by excluding folder path, file path, process and extensions. From its real time or schedule scan to execute their malicious code. This is a good indicator for defense evasion and to look further for events after this behavior.",Endpoint Detection and Response
adsisearcher_account_discovery:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the `[Adsisearcher]` type accelerator being used to query Active Directory for domain groups. Red Teams and adversaries may leverage `[Adsisearcher]` to enumerate domain users for situational awareness and Active Directory Discovery.,Windows Security
aggregated_risk:Detect low and slow activities and complex insider threat patterns by finding users with concentrations of risky activities.,Ticket Management
allow_file_and_printing_sharing_in_firewall:This search is to detect a suspicious modification of firewall to allow file and printer sharing. This technique was seen in ransomware to be able to discover more machine connected to the compromised host to encrypt more files,Endpoint Detection and Response
allow_inbound_traffic_by_firewall_rule_registry:This analytic detects a potential suspicious modification of firewall rule registry allowing inbound traffic in specific port with public profile. This technique was identified when an adversary wants to grant remote access to a machine by allowing the traffic in a firewall rule.,Endpoint Detection and Response
allow_inbound_traffic_in_firewall_rule:The following analytic identifies suspicious PowerShell command to allow inbound traffic inbound to a specific local port within the public profile. This technique was seen in some attacker want to have a remote access to a machine by allowing the traffic in firewall rule.,Windows Security
"allow_network_discovery_in_firewall:This search is to detect a suspicious modification to the firewall to allow network discovery on a machine. This technique was seen in couple of ransomware (revil, reddot) to discover other machine connected to the compromised host to encrypt more files.",Endpoint Detection and Response
allow_operation_with_consent_admin:This analytic identifies a potential privilege escalation attempt to perform malicious task. This registry modification is designed to allow the `Consent Admin` to perform an operation that requires elevation without consent or credentials. We also found this in some attacker to gain privilege escalation to the compromise machine.,Endpoint Detection and Response
"amazon_eks_kubernetes_cluster_scan_detection:This search provides information of unauthenticated requests via user agent, and authentication data against Kubernetes cluster in AWS",AWS
amazon_eks_kubernetes_pod_scan_detection:This search provides detection information on unauthenticated requests against Kubernetes' Pods API,AWS
"anomalous_audit_trail_activity_detected:Discovers anomalous activity such as the deletion of or clearing of log files. Attackers oftentimes clear the log files in order to hide their actions, therefore, this may indicate that the system has been compromised.",Windows Security
anomalous_new_listening_port:Alerts a series of hosts begin listening on a new port within 24 hours. This may be an indication that the devices have been compromised or have had new (and potentially vulnerable) software installed.,Endpoint Detection and Response
anomalous_new_process:Alerts when an anomalous number hosts are detected with a new process.,Endpoint Detection and Response
anomalous_new_service:Alerts when an anomalous number hosts are detected with a new service.,Endpoint Detection and Response
"anomalous_usage_of_7zip:The following detection identifies a 7z.exe spawned from `Rundll32.exe` or `Dllhost.exe`. It is assumed that the adversary has brought in `7z.exe` and `7z.dll`. It has been observed where an adversary will rename `7z.exe`. Additional coverage may be required to identify the behavior of renamed instances of `7z.exe`. During triage, identify the source of injection into `Rundll32.exe` or `Dllhost.exe`. Capture any files written to disk and analyze as needed. Review parallel processes for additional behaviors. Typically, archiving files will result in exfiltration.",Endpoint Detection and Response
"any_powershell_downloadfile:The following analytic identifies the use of PowerShell downloading a file using `DownloadFile` method. This particular method is utilized in many different PowerShell frameworks to download files and output to disk. Identify the source (IP/domain) and destination file and triage appropriately. If AMSI logging or PowerShell transaction logs are available, review for further details of the implant.",Endpoint Detection and Response
"any_powershell_downloadstring:The following analytic identifies the use of PowerShell downloading a file using `DownloadString` method. This particular method is utilized in many different PowerShell frameworks to download files and output to disk. Identify the source (IP/domain) and destination file and triage appropriately. If AMSI logging or PowerShell transaction logs are available, review for further details of the implant.",Endpoint Detection and Response
"asl_aws_concurrent_sessions_from_different_ips:The following analytic identifies an AWS IAM account with concurrent sessions coming from more than one unique IP address within the span of 5 minutes. This behavior could represent a session hijacking attack whereby an adversary has extracted cookies from a victims browser and is using them from a different location to access corporate online resources. When a user navigates the AWS Console after authentication, the API call with the event name `DescribeEventAggregates` is registered in the AWS CloudTrail logs. The Splunk Threat Research team leveraged this event name to identify 2 concurrent sessions. The presence of this event occurring from two different IP addresses is highly unlikely. As users may behave differently across organizations, security teams should test and customize this detection to fit their environments.",AWS
"asl_aws_createaccesskey:This search looks for AWS CloudTrail events where a user A who has already permission to create access keys, makes an API call to create access keys for another user B. Attackers have been know to use this technique for Privilege Escalation in case new victim(user B) has more permissions than old victim(user B)",AWS
"asl_aws_defense_evasion_delete_cloudtrail:This analytic identifies AWS `DeleteTrail` events within CloudTrail logs. Adversaries often try to impair their target's defenses by stopping their malicious activity from being logged, so that they may operate with stealth and avoid detection. When the adversary has the right type of permissions in the compromised AWS environment, they may delete the the entire cloudtrail that is logging activities in the environment.",AWS
"asl_aws_defense_evasion_delete_cloudwatch_log_group:This analytic identifies AWS `DeleteLogGroup` events in CloudTrail logs. Attackers may evade the logging capability by deleting the log group in CloudWatch. This will stop sending the logs and metrics to CloudWatch. When the adversary has the right type of permissions within the compromised AWS environment, they may delete the CloudWatch log group that is logging activities in the environment.",AWS
"asl_aws_defense_evasion_impair_security_services:This analytic looks for several delete specific API calls made to AWS Security Services like CloudWatch, GuardDuty and Web Application Firewalls. These API calls are often leveraged by adversaries to weaken existing security defenses by deleting logging configurations in the CloudWatch alarm, delete a set of detectors from your Guardduty environment or simply delete a bunch of CloudWatch alarms to remain stealthy and avoid detection.",AWS
asl_aws_excessive_security_scanning:This search looks for AWS CloudTrail events and analyse the amount of eventNames which starts with Describe by a single user. This indicates that this user scans the configuration of your AWS cloud environment.,AWS
"asl_aws_iam_delete_policy:The following detection identifes when a policy is deleted on AWS. This does not identify whether successful or failed, but the error messages tell a story of suspicious attempts. There is a specific process to follow when deleting a policy. First, detach the policy from all users, groups, and roles that the policy is attached to, using DetachUserPolicy , DetachGroupPolicy , or DetachRolePolicy.",AWS
asl_aws_new_mfa_method_registered_for_user:The following analytic identifies the registration of a new Multi Factor authentication method for an AWS account logged through Amazon Secruity Lake (ASL). Adversaries who have obtained unauthorized access to an AWS account may register a new MFA method to maintain persistence.,AWS
"asl_aws_password_policy_changes:This search looks for AWS CloudTrail events from Amazon Security Lake where a user is making successful API calls to view/update/delete the existing password policy in an AWS organization. It is unlikely for a regular user to conduct this operation. These events may potentially be malicious, adversaries often use this information to gain more understanding of the password defenses in place and exploit them to increase their attack surface when a user account is compromised.",AWS
asset_ownership_unspecified:Alerts when there are assets that define a specific priority and category but do not have an assigned owner.,Configuration Management
at01:Triggered when an application is executed on an endpoint or server. Blacklisted applications are pre-defined in UBA and updated on a regular basis.,"Endpoint Detection and Response
Windows Security"
"at02:Triggered off of DNS and/or HTTP data, this anomaly compares domains that are visted against the internal UBA blacklist. If sites match, the anomaly is created.",Web Proxy
"at03:Trigerred off of core network traffic, this anomaly compares IP addresses that are visted agains the internal UBA IP Address blacklist. If IPs match, the anomaly is created.",Network Communication
at04:Triggered off of authentication attempts and/or number of devices a user has access to over time. Identifies possible brute force attacks inside of an environment.,"Windows Security
Authentication"
at05:Triggered off of accounting information from firewall data (bytes in/out) to determine an unusually high volume of downloaded data per user from UBA defined internal servers.,Network Communication
at06:Triggered when there is more than expected data transfer for a user or device. This anomaly will often be included in a data exfiltration attempt.,Network Communication
"at07:This is a generic catch all anomaly that can hold alarms generated by 3rd party systems like firewall, IDS/IPS, Enterprise Security, etc.","DLP
IDS or IPS
Anti-Virus or Anti-Malware
Host-based IDS"
"at08:This anomaly detects malicious incoming traffic on websites (e.g., SQL injection).",Web Server
at09:Trigged when acess to a badge panel (door or otherwise) is denied because the badge is disabled. Disabled doe not neceissarly mean terminated.,Physical Security
at10:Triggered by multiple failed access attempts at multiple physical locations.,Physical Security
at11:Triggered when a user exhibits behavior that indicates that the user may be a flight risk (risk to leave the company).,"Web Proxy
Email"
at12:Triggered by users logging into VPN session from multiple locations within a short amount of time.,Authentication
at13:Triggered when an account is created on a workstation or endpoint. This is a local Windows account when the machine is joined to a domain.,Windows Security
at14:Triggered by devices that have recurring machine generated traffic. Looking at both web and network traffic.,Network Communication
"at15:This anomaly contains multiple detection methods that look at Windows Event Logs for malicious activity (e.g., clearning audit logs). Check associated detection methods for an exhastive list of what triggers this anomaly.","Windows Security
Authentication"
at16:Triggered when a user fails authentication multiple times. This anomaly is only  triggered when the number of authentication failures exceeds the enterprise average.,"Windows Security
Authentication"
at17:Triggered on outliers of number of successes and failures per user authenticating against services or machines.,"Windows Security
Authentication"
at18:Triggered by number of badge accesses per user per day based on historical baseline.,Physical Security
"at19:Triggered by multiple login errors against Box authentication. This is for failed logins only. Similar to the ""Multiple Box Logins"" anomaly.",Box
at20:Triggered by the total number of  Box logins per user per day based on historical baseline. These are successful logins only.,Box
at21:Triggered by a high volume of box operations by user. The number of operations  is compared to the enterprise average.,Box
"at22:Triggered when the number of external alarms from external tools (IDS, IPS, DLP) is higher for a specific user when compared to the enterprise average.","DLP
IDS or IPS
Host-based IDS"
at23:Triggered when multiple users fail to badge in at a single badge-in access point. This could be used to detect both a physical brute force attack or faulty hardware.,Physical Security
"at24:Triggered when the number of successful logins by a user is higher than the enterprise average. This anomaly could point to a number of things, including lateral movement, account takeover, or just general suspicious behavior.","Windows Security
Authentication"
at25:Triggered when there is more than expected traffic destined for a single device. Most typically this anomaly is seen with DDOS behavior or something similar.,Network Communication
at26:Triggered when Windows events occur outside of the normal baseline for a user. ,Windows Security
at27:Triggered by external email monitoring tools when a specific user or group is a possible target of a spear phishing campaign.,Email
at28:Triggered when an internal webserver is accessed from an outside source.,Web Server
at29:Triggers when a device exhibits either horizontal/vertical scanning patterns or appears to be sending data to a large number of ports per destination device.,Network Communication
"at30:This anomaly contains multiple detection methods that look at account events for suspcious activity (e.g., activity by an expired user). Check the associated detection methods for an exhaustive list of what triggers this anomaly.","Email
Windows Security
Authentication"
"at31:Triggered when an account lockout occurs without any corresponding cause (e.g., password change, password reset, etc.) ",Windows Security
"at32:This anomaly contains a number of detection methods surrounding box usage and malicious intent (e.g., file relay through box). Check the associated detection methods for a comprehensive list of what triggers this anomaly.","Anti-Virus or Anti-Malware
IDS or IPS
DLP
Box
Host-based IDS"
"at33:This anomaly contains multiple detection methods surrounding suspicious data movement (e.g., sending email to self, external DLP alarms, etc.)","Endpoint Detection and Response
Network Communication
DLP
Web Proxy
Email"
at34:Triggered when a user visits a malicious or suspicious site. This classification is determined by NGFW categories.,Web Proxy
at35:Triggered when a user visits a suspicious domain name that appears to be algorithmically generated. ,"Web Proxy
DNS"
at36:Triggered by detecting sequences in HTTP requests that signify a possible exploit.,Web Proxy
"at37:This anomaly contains multiple detections that inspect network traffic and look for suspicious activity (e.g., DNS data exfiltration). Check the associated detection methods for a comprehensive list of possible triggers for this anomaly.",Network Communication
at38:Triggered when a user accesses a number of systems and that number increases systematically over time. This is a lead indicator of a possible lateral movement threat.,"Windows Security
Authentication"
at39:Triggered when a user accesses a box resource for the first time. This anomaly is based on an individual user's baseline. ,Box
"at40:Triggered when a possible malicious powershell command is executed. This anomaly contains detection methods that inspect endpoint and Windows event logs looking for suspicious commands (e.g., base64 encoded powershell commands).",Windows Security
at41:Triggered when an account with administrator privledges logs in (event code 4672) and is associated with another user logging in within the same time period.,Windows Security
at42:Triggered when a user has an abnormal login time of day or day of week. This is based on the user's rolling baseline.,"Windows Security
Authentication"
at43:Triggered when a badge attempts to access a badge reader that it has historically not accessed. This is based on location and the badge (or user) baseline history.,Physical Security
at44:Triggered on a large number of deletes from a cloud file storage system. This anomaly looks at the enterprise average for a historical baseline.,Box
at45:Triggered on a large number of file/directory downloads from a cloud file storage system. This is specifically the number of downloads not the size of the downloads. This anomaly looks at the enterprise afverage for a historical baseline.,Box
"at46:This is a catch all anomaly for any external alarm that is created by a third party system (e.g., IDS, IPS, DLP, NGFW). These anomalies are useful for increasing the users risk profile and add context to threats inside of UBA.","DLP
IDS or IPS
Anti-Virus or Anti-Malware
Host-based IDS"
at47:Triggered when a user accesses a new file type or extension. This is based on a user's previous history and/or peer group activity.,Endpoint Detection and Response
"at48:Triggered when an organziation, user, device, or peer group generates network traffic destined for a rare or unique Country destination. This anomaly requires destinationCountry (or similar) to be populated.",Network Communication
at49:This anomaly contains a large number of detections for rare or unusual machine access.,Windows Security
at50:This anomaly contains a large number of detections for rare or unusual network interaction.,Network Communication
"at51:This anomaly looks at different aspects of print jobs from a peer group or user baseline, as well as looking at the extensions of the files that are printed.",Application Data
at52:Triggered by badge access that is outside the normal user's baseline. This can be either failed or successful badge-in attempts outside of the normal baseline.,Physical Security
at53:This anomaly contains a number of detection methods surrounding USB usage in the enterprise.,Endpoint Detection and Response
at54:Triggered when a user uses a USB device (plugging into a computer) for the first time. This anomaly is based on the user's historical information.,Endpoint Detection and Response
"at55:Triggered when traffic is destined from a rare sourceCountry for an organziation, user, device, or peer group. This anomaly requires sourceCountry (or similar) to be populated.",Network Communication
"at56:Triggered when either a user or device exhibits a rare browser user agent string (e.g., iexplorer.exe instead of iexplore.exe).",Web Proxy
"at57:This is a catch all anomaly for unusal Windows Security Events. This can contain things like: rare process, rare resource, or even a rare process name for a given process. This anomaly is based on user baseline and enterprise baseline.",Windows Security
at58:Triggered when a VPN session extends past the normal time period. This time period is determined by both the user's individual baseline as well as the enterprise average.,Network Communication
at59:Triggered when the number of physical USB attach and detach actions exceed the idividual's historical baseline.,Endpoint Detection and Response
at60:Triggered when an excessive amount of data is uploaded or stored onto an internal server or cloud storage system. This anomaly is often a pre-cursor to a flight risk threat or data exfiltration threat. ,"Web Proxy
Network Communication"
"at61:Triggered when the number of failed logins by a user is higher than the enterprise average. This anomaly could point to a number of things, including a brute force attack, password spraying, or just general suspicious behavior.","Windows Security
Authentication"
at62:Triggered when a user has a higher than normal number of downloads from a Box data source,Box
at63:Triggered when a user visits a malicious or suspicious site by IP directly.,"Web Proxy
Network Communication"
"at64:This is a subset of the Unusual Printer Usage anomaly that looks only at number of print jobs, increased number of print jobs, or volume of data printed. It's based on individual user baseline as well as the enterprise average.","DLP
Application Data"
at65:This is a subset of the Excessive Data Transmission anomaly that looks only at volume of downloaded data while on VPN.,Network Communication
at66:Triggered when the number of outgoing connections is greater than the user's historical baseline or the enterprise average.,Network Communication
at67:Triggered when a service account either logs in via VPN or interactively on a device. Does not trigger for normal service account activity.,"Windows Security
Authentication"
attacker_tools_on_endpoint:This search looks for execution of commonly used attacker tools on an endpoint.,Endpoint Detection and Response
attempt_to_add_certificate_to_untrusted_store:Attempt To Add Certificate To Untrusted Store,Endpoint Detection and Response
attempt_to_stop_security_service:This search looks for attempts to stop security-related services on the endpoint.,Endpoint Detection and Response
attempted_credential_dump_from_registry_via_reg_exe:Monitor for execution of reg.exe with parameters specifying an export of keys that contain hashed credentials that attackers may try to crack offline.,Endpoint Detection and Response
auto_admin_logon_registry_entry:this search is to detect a suspicious registry modification to implement auto admin logon to a host. This technique was seen in BlackMatter ransomware to automatically logon to the compromise host after  triggering a safemode boot to continue encrypting the whole network. This behavior is not a common practice and really a suspicious TTP or alert need to be consider if found within then network premise.,Endpoint Detection and Response
"aws_ami_atttribute_modification_for_exfiltration:This search looks for suspicious AWS AMI attribute modifications, such as sharing it with another AWS account or making the full AMI image public. Adversaries are known to abuse these APIs to exfiltrate sensitive organization information stored in the AWS Resources, there by its very important to monitor these seemingly benign API activity in Cloudtrail logs.",AWS
"aws_apis_called_more_often_than_usual_per_account:Builds a per-user baseline for how many API calls is normal, and then alerts for deviations.","AWS
GCP
Azure"
"aws_cloud_provisioning_activity_from_unusual_country:Looks for IaaS Provisioning activities that occur from new IPs, using GeoIP to resolve the Country.","AWS
GCP
Azure"
aws_cloud_provisioning_activity_from_unusual_ip:Looks for Cloud Provisioning activities that occur from new IPs (for organizations with strict IP controls).,"AWS
GCP
Azure"
"aws_cloud_provisioning_from_previously_unseen_city:This search looks for AWS provisioning activities from previously unseen cities.  Provisioning activities are defined broadly as any event that begins with ""Run"" or ""Create."" This search is deprecated and have been translated to use the latest Change Datamodel. ",AWS
"aws_cloud_provisioning_from_previously_unseen_country:This search looks for AWS provisioning activities from previously unseen countries. Provisioning activities are defined broadly as any event that begins with ""Run"" or ""Create."" This search is deprecated and have been translated to use the latest Change Datamodel. ",AWS
"aws_cloud_provisioning_from_previously_unseen_ip_address:This search looks for AWS provisioning activities from previously unseen IP addresses. Provisioning activities are defined broadly as any event that begins with ""Run"" or ""Create."" This search is deprecated and have been translated to use the latest Change Datamodel. ",AWS
"aws_cloud_provisioning_from_previously_unseen_region:This search looks for AWS provisioning activities from previously unseen regions. Region in this context is similar to a state in the United States. Provisioning activities are defined broadly as any event that begins with ""Run"" or ""Create."" This search is deprecated and have been translated to use the latest Change Datamodel.",AWS
"aws_concurrent_sessions_from_different_ips:The following analytic identifies an AWS IAM account with concurrent sessions coming from more than one unique IP address within the span of 5 minutes. This behavior could represent a session hijacking attack whereby an adversary has extracted cookies from a victims browser and is using them from a different location to access corporate online resources. When a user navigates the AWS Console after authentication, the API call with the event name `DescribeEventAggregates` is registered in the AWS CloudTrail logs. The Splunk Threat Research team leveraged this event name to identify 2 concurrent sessions. The presence of this event occurring from two different IP addresses is highly unlikely. As users may behave differently across organizations, security teams should test and customize this detection to fit their environments.",AWS
aws_console_login_failed_during_mfa_challenge:The following analytic identifies an authentication attempt event against an AWS Console that fails during the Multi Factor Authentication challenge. AWS Cloudtrail logs provide a a very useful field called `additionalEventData` that logs information regarding usage of MFA. This behavior may represent an adversary trying to authenticate with compromised credentials for an account that has multi-factor authentication enabled.,AWS
aws_create_policy_version_to_allow_all_resources:This search looks for AWS CloudTrail events where a user created a policy version that allows them to access any resource in their account.,AWS
"aws_createaccesskey:This search looks for AWS CloudTrail events where a user A who has already permission to create access keys, makes an API call to create access keys for another user B. Attackers have been know to use this technique for Privilege Escalation in case new victim(user B) has more permissions than old victim(user B)",AWS
"aws_createloginprofile:This search looks for AWS CloudTrail events where a user A(victim A) creates a login profile for user B, followed by a AWS Console login event from user B from the same src_ip as user B. This correlated event can be indicative of privilege escalation since both events happened from the same src_ip",AWS
"aws_credential_access_failed_login:It shows that there have been an unsuccessful attempt to log in using the user identity to the AWS management console. Since the user identity has access to AWS account services and resources, an attacker might try to brute force the password for that identity.",Authentication
aws_credential_access_getpassworddata:This detection analytic identifies more than 10 GetPasswordData API calls made to your AWS account with a time window of 5 minutes. Attackers can retrieve the encrypted administrator password for a running Windows instance.,AWS
"aws_credential_access_rds_password_reset:The master user password for Amazon RDS DB instance can be reset using the Amazon RDS console. Using this technique, the attacker can get access to the sensitive data from the DB. Usually, the production databases may have sensitive data like Credit card information, PII, Health care Data. This event should be investigated further.",AWS
aws_cross_account_activity_from_previously_unseen_account:This search looks for AssumeRole events where an IAM role in a different account is requested for the first time.,Authentication
"aws_defense_evasion_delete_cloudtrail:This analytic identifies AWS `DeleteTrail` events within CloudTrail logs. Adversaries often try to impair their target's defenses by stopping their malicious activity from being logged, so that they may operate with stealth and avoid detection. When the adversary has the right type of permissions in the compromised AWS environment, they may delete the the entire cloudtrail that is logging activities in the environment.",AWS
"aws_defense_evasion_delete_cloudwatch_log_group:This analytic identifies AWS `DeleteLogGroup` events in CloudTrail logs. Attackers may evade the logging capability by deleting the log group in CloudWatch. This will stop sending the logs and metrics to CloudWatch. When the adversary has the right type of permissions within the compromised AWS environment, they may delete the CloudWatch log group that is logging activities in the environment.",AWS
"aws_defense_evasion_impair_security_services:This analytic looks for several delete specific API calls made to AWS Security Services like CloudWatch, GuardDuty and Web Application Firewalls. These API calls are often leveraged by adversaries to weaken existing security defenses by deleting logging configurations in the CloudWatch alarm, delete a set of detectors from your Guardduty environment or simply delete a bunch of CloudWatch alarms to remain stealthy and avoid detection.",AWS
"aws_defense_evasion_putbucketlifecycle:This analytic identifies `PutBucketLifecycle` events in CloudTrail logs where a user has created a new lifecycle rule for an S3 bucket with a short expiration period. Attackers may use this API call to impair the CloudTrail logging by removing logs from the S3 bucket by changing the object expiration day to 1 day, in which case the CloudTrail logs will be deleted.",AWS
"aws_defense_evasion_stop_logging_cloudtrail:This analytic identifies `StopLogging` events in CloudTrail logs. Adversaries often try to impair their target's defenses by stopping their macliious activity from being logged, so that they may operate with stealth and avoid detection. When the adversary has the right type of permissions in the compromised AWS environment, they may easily stop logging.",AWS
"aws_defense_evasion_update_cloudtrail:This analytic identifies `UpdateTrail` events in CloudTrail logs. Attackers may evade the logging capability by updating the settings and impairing them with wrong parameters. For example, Attackers may change the multi-regional log into a single region logs, which evades the logging for other regions. When the adversary has the right type of permissions in the compromised AWS environment, they may update the CloudTrail settings that is logging activities in your environment.",AWS
aws_detect_attach_to_role_policy:This search provides detection of an user attaching itself to a different role trust policy. This can be used for lateral movement and escalation of privileges.,AWS
aws_detect_permanent_key_creation:This search provides detection of accounts creating permanent keys. Permanent keys are not created by default and they are only needed for programmatic calls. Creation of Permanent key is an important event to monitor.,AWS
aws_detect_role_creation:This search provides detection of role creation by IAM users. Role creation is an event by itself if user is creating a new role with trust policies different than the available in AWS and it can be used for lateral movement and escalation of privileges.,AWS
aws_detect_sts_assume_role_abuse:This search provides detection of suspicious use of sts:AssumeRole. These tokens can be created on the go and used by attackers to move laterally and escalate privileges.,AWS
aws_detect_sts_get_session_token_abuse:This search provides detection of suspicious use of sts:GetSessionToken. These tokens can be created on the go and used by attackers to move laterally and escalate privileges.,AWS
aws_detect_users_creating_keys_with_encrypt_policy_without_mfa:This search provides detection of KMS keys where action kms:Encrypt is accessible for everyone (also outside of your organization). This is an indicator that your account is compromised and the attacker uses the encryption key to compromise another company.,AWS
aws_detect_users_with_kms_keys_performing_encryption_s3:This search provides detection of users with KMS keys performing encryption specifically against S3 buckets.,AWS
aws_disable_bucket_versioning:The following analytic detects AWS cloudtrail events where bucket versioning is suspended by a user. Versioning allows the AWS Administrators to maintain different version of the S3 bucket which can be used to recover deleted data. Adversaries have leveraged this technique in the wild during a ransomware incident to disable versioning so the client cannot recover the data.,AWS
aws_ec2_snapshot_shared_externally:The following analytic utilizes AWS CloudTrail events to identify when an EC2 snapshot permissions are modified to be shared with a different AWS account. This method is used by adversaries to exfiltrate the EC2 snapshot.,AWS
aws_ecr_container_scanning_findings_high:This search looks for AWS CloudTrail events from AWS Elastic Container Service (ECR). You need to activate image scanning in order to get the event DescribeImageScanFindings with the results.,AWS
aws_ecr_container_scanning_findings_low_informational_unknown:This search looks for AWS CloudTrail events from AWS Elastic Container Service (ECR). You need to activate image scanning in order to get the event DescribeImageScanFindings with the results.,AWS
aws_ecr_container_scanning_findings_medium:This search looks for AWS CloudTrail events from AWS Elastic Container Service (ECR). You need to activate image scanning in order to get the event DescribeImageScanFindings with the results.,AWS
"aws_ecr_container_upload_outside_business_hours:This search looks for AWS CloudTrail events from AWS Elastic Container Service (ECR). A upload of a new container is normally done during business hours. When done outside business hours, we want to take a look into it.",AWS
"aws_ecr_container_upload_unknown_user:This search looks for AWS CloudTrail events from AWS Elastic Container Service (ECR). A upload of a new container is normally done from only a few known users. When the user was never seen before, we should have a closer look into the event.",AWS
aws_eks_kubernetes_cluster_sensitive_object_access:This search provides information on Kubernetes accounts accessing sensitve objects such as configmaps or secrets,AWS
aws_excessive_security_scanning:This search looks for AWS CloudTrail events and analyse the amount of eventNames which starts with Describe by a single user. This indicates that this user scans the configuration of your AWS cloud environment.,AWS
"aws_exfiltration_via_anomalous_getobject_api_activity:This search uses built in  Splunk command `| anomalydetection` to detect anomalies with respect to users making high number of GetObject API calls to download objects from S3 in a 10 minute time window. The field `probable_cause` is the name of the field that best explains why the event is anomalous. This command identifies anomalous events by computing a probability for each GetObject event by ""count"" ""user_type"" ""user_arn"" and detects anomaly based on the frequencies.",AWS
aws_exfiltration_via_batch_service:This search looks for events where AWS Batch Service is used for creating a job that could potentially abuse the AWS Bucket Replication feature on S3 buckets. This AWS service can used to transfer data between different AWS S3 buckets and an attacker can leverage this to exfiltrate data by creating a malicious batch job.,AWS
"aws_exfiltration_via_bucket_replication:The following analytic detects API calls made to an S3 bucket when bucket replication services are enabled. S3 bucket replication is a feature offered by Amazon Web Services (AWS) that allows you to automatically and asynchronously copy data from one S3 bucket to another in the same or different region.\S3 bucket replication can also be used for cross-account replication, where data is replicated from a source bucket owned by one AWS account to a destination bucket owned by a different AWS account.",AWS
"aws_exfiltration_via_datasync_task:This search looks for potential misuse of an AWS service known as DataSync. This AWS service is used to transfer data between different AWS cloud storage services, such as Amazon S3, Amazon EFS, and Amazon FSx for Windows File Server. Attackers can create a task in AWS to periodically copy data from a private AWS location to a public location resulting in the compromise of the data.",AWS
"aws_exfiltration_via_ec2_snapshot:This search detects a series of AWS API calls, made in a short time window, related to EC2 snapshots that can detect a potential exfiltration via EC2 Snapshot modifications. In this attack, the attacker typically proceeds by listing and creating EC2 snapshots of the available EC2 instances followed by modifying snapshot attributes such that it can be shared externally. Once this is done, the attacker can then load that EC2 snapshot and access all the sensitive information.",AWS
"aws_high_number_of_failed_authentications_for_user:The following analytic identifies an AWS account with more than 20 failed authentication events in the span of 5 minutes. This behavior could represent a brute force attack against the account. As environments differ across organizations, security teams should customize the threshold of this detection.",AWS
"aws_high_number_of_failed_authentications_from_ip:The following analytic identifies an IP address failing to authenticate 20 or more times to the AWS Web Console in the span of 5 minutes. This behavior could represent a brute force attack against an AWS tenant to obtain initial access or elevate privileges. As environments differ across organizations, security teams should customize the threshold of this detection.",AWS
"aws_iam_accessdenied_discovery_events:The following detection identifies excessive AccessDenied events within an hour timeframe. It is possible that an access key to AWS may have been stolen and is being misused to perform discovery events. In these instances, the access is not available with the key stolen therefore these events will be generated.",AWS
"aws_iam_assume_role_policy_brute_force:The following detection identifies any malformed policy document exceptions with a status of `failure`. A malformed policy document exception occurs in instances where roles are attempted to be assumed, or brute forced. In a brute force attempt, using a tool like CloudSploit or Pacu, an attempt will look like `arn:aws:iam::111111111111:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS`.  Meaning, when an adversary is attempting to identify a role name, multiple failures will occur. This detection focuses on the errors of a remote attempt that is failing.",AWS
"aws_iam_delete_policy:The following detection identifes when a policy is deleted on AWS. This does not identify whether successful or failed, but the error messages tell a story of suspicious attempts. There is a specific process to follow when deleting a policy. First, detach the policy from all users, groups, and roles that the policy is attached to, using DetachUserPolicy , DetachGroupPolicy , or DetachRolePolicy.",AWS
"aws_iam_failure_group_deletion:This detection identifies failure attempts to delete groups. We want to identify when a group is attempting to be deleted, but either access is denied, there is a conflict or there is no group. This is indicative of administrators performing an action, but also could be suspicious behavior occurring. Review parallel IAM events - recently added users, new groups and so forth.",AWS
"aws_iam_successful_group_deletion:The following query uses IAM events to track the success of a group being deleted on AWS. This is typically not indicative of malicious behavior, but a precurser to additional events thay may unfold. Review parallel IAM events - recently added users, new groups and so forth. Inversely, review failed attempts in a similar manner.",AWS
aws_instance_created_by_unusual_user:Detects the first time a user creates a new instance.,"AWS
GCP
Azure"
aws_instance_modified_by_unusual_user:Detects the first time a user modifies an existing instance.,"AWS
GCP
Azure"
"aws_lambda_updatefunctioncode:This analytic is designed to detect IAM users attempting to update/modify AWS lambda code via the AWS CLI to gain persistence, futher access into your AWS environment and to facilitate planting backdoors. In this instance, an attacker may upload malicious code/binary to a lambda function which will be executed automatically when the funnction is triggered.",AWS
"aws_multiple_failed_mfa_requests_for_user:The following analytic identifies multiple failed multi-factor authentication requests to an AWS Console for a single user. AWS Cloudtrail logs provide a a very useful field called `additionalEventData` that logs information regarding usage of MFA. Specifically, the analytic triggers when more than 10 MFA user prompts fail within 10 minutes. AWS Environments can be very different depending on the organization, Security teams should test this detection and customize these arbitrary thresholds. The detected behavior may represent an adversary who has obtained legitimate credentials for a user and continuously repeats login attempts in order to bombard users with MFA push notifications, SMS messages, and phone calls potentially resulting in the user finally accepting the authentication request. Threat actors like the Lapsus team and APT29 have leveraged this technique to bypass multi-factor authentication controls as reported by Mandiant and others.",AWS
aws_multiple_users_failing_to_authenticate_from_ip:The following analytic identifies one source Ip failing to authenticate into the AWS Console with 30 unique valid users within 10 minutes. This behavior could represent an adversary performing a Password Spraying attack against an AWS environment tenant to obtain initial access or elevate privileges.,AWS
aws_network_access_control_list_created_with_all_open_ports:The search looks for AWS CloudTrail events to detect if any network ACLs were created with all the ports open to a specified CIDR.,AWS
"aws_network_access_control_list_deleted:Enforcing network-access controls is one of the defensive mechanisms used by cloud administrators to restrict access to a cloud instance. After the attacker has gained control of the AWS console by compromising an admin account, they can delete a network ACL and gain access to the instance from anywhere. This search will query the AWS CloudTrail logs to detect users deleting network ACLs.",AWS
"aws_new_api_call_per_peer_group:Looks for users that are using APIs that neither they, nor their team has ever used before.","AWS
GCP
Azure"
aws_new_api_call_per_user:Looks for users that are using IaaS APIs that they've never used before.,"AWS
GCP
Azure"
aws_new_mfa_method_registered_for_user:The following analytic identifies the registration of a new Multi Factor authentication method for an AWS account. Adversaries who have obtained unauthorized access to an AWS account may register a new MFA method to maintain persistence.,AWS
"aws_password_policy_changes:This search looks for AWS CloudTrail events where a user is making successful API calls to view/update/delete the existing password policy in an AWS organization. It is unlikely for a regular user to conduct this operation. These events may potentially be malicious, adversaries often use this information to gain more understanding of the password defenses in place and exploit them to increase their attack surface when a user account is compromised.",AWS
"aws_public_bucket:Detects when new or existing public storage (e.g., an S3 Bucket) is set to public.","AWS
GCP
Azure"
"aws_s3_exfiltration_behavior_identified:This correlation search looks at the risk events created by the detection analytics related Collection and Exfiltration techniques used by adversaries. The rule is designed to identify instances where 2 or more analytics unique AWS analytics and 2 or more distinct mitre IDs has triggered for a particular risk object. This alert when triggered may indicate a potential exfiltration in progress. By aggregating these analytics, security teams can swiftly respond to and investigate any suspicious activities, enhancing their ability to protect critical assets and prevent unauthorized access to sensitive information.",Risk Modifiers
"aws_saml_access_by_provider_user_and_principal:This search provides specific SAML access from specific Service Provider, user and targeted principal at AWS. This search provides specific information to detect abnormal access or potential credential hijack or forgery, specially in federated environments using SAML protocol inside the perimeter or cloud provider.",AWS
"aws_saml_update_identity_provider:This search provides detection of updates to SAML provider in AWS. Updates to SAML provider need to be monitored closely as they may indicate possible perimeter compromise of federated credentials, or backdoor access from another cloud provider set by attacker.",AWS
aws_setdefaultpolicyversion:This search looks for AWS CloudTrail events where a user has set a default policy versions. Attackers have been know to use this technique for Privilege Escalation in case the previous versions of the policy had permissions to access more resources than the current version of the policy,AWS
"aws_successful_console_authentication_from_multiple_ips:The following analytic identifies an AWS account successfully authenticating from more than one unique Ip address in the span of 5 minutes. This behavior could represent an adversary who has stolen credentials via a phishing attack or some other method and using them to access corporate online resources around the same time as a legitimate user. As users may behave differently across organizations, security teams should test and customize this detection to fit their environments.",AWS
aws_unusual_amount_of_modifications_to_acls:Looks for a large number of Security Group ACL changes in a short period of time for a user.,"AWS
GCP
Azure"
"aws_unusual_number_of_failed_authentications_from_ip:The following analytic identifies one source IP failing to authenticate into the AWS Console with multiple valid users. This behavior could represent an adversary performing a Password Spraying attack against an AWS environment to obtain initial access or elevate privileges. The detection calculates the standard deviation for source IP and leverages the 3-sigma statistical rule to identify an unusual number of failed authentication attempts. To customize this analytic, users can try different combinations of the bucket span time and the calculation of the upperBound field. This logic can be used for real time security monitoring as well as threat hunting exercises. While looking for anomalies using statistical methods like the standard deviation can have benefits, we also recommend using threshold-based detections to complement coverage. A similar analytic following the threshold model is `AWS Multiple Users Failing To Authenticate From Ip`.",AWS
"aws_updateloginprofile:This search looks for AWS CloudTrail events where a user A who has already permission to update login profile, makes an API call to update login profile for another user B . Attackers have been know to use this technique for Privilege Escalation in case new victim(user B) has more permissions than old victim(user B)",AWS
"azure_ad_application_administrator_role_assigned:The following analytic identifies the assignment of the Application Administrator role to an Azure AD user. Users in this role can create and manage all aspects of enterprise applications, application registrations, and application proxy settings. This role also grants the ability to manage application credentials. Users assigned this role can add credentials to an application, and use those credentials to impersonate the applications identity. If the applications identity has been granted access to a resource, such as the ability to create or update User or other objects, then a user assigned to this role could perform those actions while impersonating the application. This ability to impersonate the applications identity may be an elevation of privilege over what the user can do via their role assignments. Red teams and adversaries alike may abuse this role to escalate their privileges in an Azure AD tenant.",IDS or IPS
azure_ad_authentication_failed_during_mfa_challenge:The following analytic identifies an authentication attempt event against an Azure AD tenant that fails during the Multi Factor Authentication challenge. Error Code 500121 represents a failed attempt to authenticate using a second factor. This behavior may represent an adversary trying to authenticate with compromised credentials for an account that has multi-factor authentication enabled. ,IDS or IPS
"azure_ad_concurrent_sessions_from_different_ips:The following analytic identifies an Azure AD account with concurrent sessions coming from more than one unique Ip address within the span of 5 minutes. This behavior could represent a session hijacking attack whereby an adversary has extracted cookies from a victims browser and is using them from a different location to access corporate online resources. As users may behave differently across organizations, security teams should test and customize this detection to fit their environments.",IDS or IPS
"azure_ad_external_guest_user_invited:The following analytic identifies the invitation of an external guest user within Azure AD. With Azure AD B2B collaboration, users and administrators can invite external users to collaborate with internal users. External guest account invitations should be monitored by security teams as they could potentially lead to unauthorized access. An example of this attack vector was described at BlackHat 2022 by security researcher Dirk-Jan during his tall `Backdooring and Hijacking Azure AD Accounts by Abusing External Identities`",IDS or IPS
"azure_ad_global_administrator_role_assigned:The following analytic identifies the assignment of the Azure AD Global Administrator role to an Azure AD user. The Global Administrator role is the most powerful administrator role in Azure AD and provides almost unlimited access to data, resources and settings. It is equivalent to the Domain Administrator group in an Active Directory environment. While Azure AD roles do not grant access to Azure services and resources, it is possible for a Global Administrator account to gain control of Azure resources. Adversaries and red teams alike may assign this role to a compromised account to establish Persistence or escalate their privileges in an Azure AD environment.",IDS or IPS
"azure_ad_high_number_of_failed_authentications_for_user:The following analytic identifies an Azure AD account with more than 20 failed authentication events in the span of 5 minutes. This behavior could represent a brute force attack against the account. As environments differ across organizations, security teams should customize the threshold of this detection.",IDS or IPS
"azure_ad_high_number_of_failed_authentications_from_ip:The following analytic identifies an Ip address failing to authenticate 20 or more times to an Azure AD tenant in the span of 5 minutes. This behavior could represent a brute force attack againstan Azure AD to obtain initial access or elevate privileges. As environments differ across organizations, security teams should customize the threshold of this detection.",IDS or IPS
"azure_ad_multiple_failed_mfa_requests_for_user:The following analytic identifies multiple failed multi-factor authentication requests for a single user within an Azure AD tenant. Error Code 500121 represents a failed attempt to authenticate using a second factor. Specifically, the analytic triggers when more than 10 MFA user prompts fail within 10 minutes. Azure AD tenants can be very different depending on the organization, Security teams should test this detection and customize these arbitrary thresholds. The detected behavior may represent an adversary who has obtained legitimate credentials for a user and continuously repeats login attempts in order to bombard users with MFA push notifications, SMS messages, and phone calls potentially resulting in the user finally accepting the authentication request. Threat actors like the Lapsus team and APT29 have leveraged this technique to bypass multi-factor authentication controls as reported by Mandiant and others.",IDS or IPS
"azure_ad_multiple_users_failing_to_authenticate_from_ip:The following analytic identifies one source Ip failing to authenticate with 30 unique valid users within 5 minutes. This behavior could represent an adversary performing a Password Spraying attack against an Azure Active Directory tenant to obtain initial access or elevate privileges. Error Code 50126 represents an invalid password. This logic can be used for real time security monitoring as well as threat hunting exercises.\Azure AD tenants can be very different depending on the organization. Users should test this detection and customize the arbitrary threshold if needed.",IDS or IPS
"azure_ad_new_custom_domain_added:The following analytic identifies the addition of a new custom domain within an Azure Active Directory tenant. Adding a custom domain is a step required to set up the Azure Active Directory identity federation backdoor technique discovered by security researcher Nestori Syynimaa. Similar to Active Directory, Azure AD uses the concept of domains to manage directories of identities. A new Azure AD tenant will initially contain a single domain that is commonly called the `cloud-only` onmicrosoft.com domain. Organizations can also add their registered custom domains to Azure AD for email addresses to match the organizations domain name. If the organization intends to use a third-party identity provider such as ADFS for authentication, the added custom domains can be configured as federated. An adversary who has obtained privileged access to an Azure AD tenant may leverage this technique to establish persistence and be able to authenticate to Azure AD impersonating any user and bypassing the requirement to have a valid password and/or perform MFA.",IDS or IPS
"azure_ad_new_federated_domain_added:The following analytic identifies the addition of a new federated domain within an Azure Active Directory tenant. This event could represent the execution of the Azure Active Directory identity federation backdoor technique discovered by security researcher Nestori Syynimaa. Similar to Active Directory, Azure AD uses the concept of domains to manage directories of identities. A new Azure AD tenant will initially contain a single domain that is commonly called the `cloud-only` onmicrosoft.com domain. Organizations can also add their registered custom domains to Azure AD for email addresses to match the organizations domain name. If the organization intends to use a third-party identity provider such as ADFS for authentication, the added custom domains can be configured as federated. An adversary who has obtained privileged access to an Azure AD tenant may leverage this technique to establish persistence and be able to authenticate to Azure AD impersonating any user and bypassing the requirement to have a valid password and/or perform MFA.",IDS or IPS
azure_ad_new_mfa_method_registered_for_user:The following analytic identifies the registration of a new Multi Factor authentication method for an Azure AD account. Adversaries who have obtained unauthorized access to an Azure AD account may register a new MFA method to maintain persistence.,IDS or IPS
"azure_ad_pim_role_assigned:The following analytic identifies the assignment of the Azure AD PIM role. Privileged Identity Management (PIM) is a service within Azure Azure AD that enables administrators to manage, control, and monitor access to sensitive resources. PIM provides time-based and approval-based role activation to mitigate the risks of excessive, unnecessary, or misused access permissions on resources. Once a user has been made eligible for an administrative role, she must activate this role assignment to perform the privileged actions. When a role is activated, Azure AD PIM temporarily adds active assignment for the role. While PIM can be leveraged as a powerful security control, it may also abused by adversaries to obtain privileged access. Security teams should monitor for the assignment and activation of PIM roles and validate their legitimacy.",IDS or IPS
"azure_ad_pim_role_assignment_activated:The following analytic identifies the assignment of the Azure AD PIM role. Privileged Identity Management (PIM) is a service within Azure Azure AD that enables administrators to manage, control, and monitor access to sensitive resources. PIM provides time-based and approval-based role activation to mitigate the risks of excessive, unnecessary, or misused access permissions on resources. Once a user has been made eligible for an administrative role, she must activate this role assignment to perform the privileged actions. When a role is activated, Azure AD PIM temporarily adds active assignment for the role. While PIM can be leveraged as a powerful security control, it may also abused by adversaries to obtain privileged access. Security teams should monitor for the assignment and activation of PIM roles and validate their legitimacy.",IDS or IPS
"azure_ad_privileged_authentication_administrator_role_assigned:The following analytic identifies the assignment of the Privileged Authentication Administrato role to an Azure AD user. Users in this role can set or reset authentication methods for any user in Azure Active Directory, including privileged roles like Global Administrators. Users with this role can change credentials for people who may have access to sensitive or private information or critical configuration inside and outside of Azure Active Directory. Changing the credentials of a user may mean the ability to assume that users identity and permissions. Red teams and adversaries alike may abuse this role to escalate their privileges.",IDS or IPS
azure_ad_privileged_role_assigned:The following analytic identifies the assignment of sensitive and privileged Azure Active Directory roles to an Azure AD user. Adversaries and red teams alike may assign these roles to a compromised account to establish Persistence in an Azure AD environment.,IDS or IPS
azure_ad_privileged_role_assigned_to_service_principal:The following analytic,IDS or IPS
"azure_ad_service_principal_created:The following analytic identifies the creation of a Service Principal in an Azure AD environment. An Azure Service Principal is an identity designed to be used with applications, services, and automated tools to access resources. It is similar to a service account within an Active Directory environment. Service Principal authentication does not support multi-factor authentication nor conditional access policies. Adversaries and red teams alike who have obtained administrative access may create a Service Principal to establish Persistence and obtain single-factor access to an Azure AD environment.",IDS or IPS
"azure_ad_service_principal_new_client_credentials:The following analytic identifies the addition of new credentials for Service Principals and Applications in addition to existing legitimate credentials in Azure AD. These credentials include both x509 certificates and passwords. With sufficient permissions, there are a variety of ways to add credentials including the Azure Portal, Azure command line interface, and Azure or Az PowerShell modules. Adversaries and red teams alike who have obtained privileged access to Azure AD may add credentials to Service Principals to maintain persistent access to victim accounts and other instances within the Azure environment. By compromising an account who is an Owner of an application with privileged access, attackers may also escalate their privileges in an Azure AD environment by adding new credentials and logging in as the service principal.",IDS or IPS
"azure_ad_service_principal_owner_added:The following analytic identifies the addition of a new owner for a Service Principal within an Azure AD tenant. An Azure Service Principal is an identity designed to be used with applications, services, and automated tools to access resources. It is similar to a service account within an Active Directory environment. Service Principal authentication does not support multi-factor authentication nor conditional access policies. Adversaries and red teams alike who have obtained administrative access may add a new owner for an existing Service Principal to establish Persistence and obtain single-factor access to an Azure AD environment. Attackers who are looking to escalate their privileges by leveraging a Service Principals permissions may also add a new owner.",IDS or IPS
"azure_ad_successful_authentication_from_different_ips:The following analytic identifies an Azure AD account successfully authenticating from more than one unique Ip address in the span of 5 minutes. This behavior could represent an adversary who has stolen credentials via a phishing attack or some other method and using them to access corporate online resources around the same time as a legitimate user. As users may behave differently across organizations, security teams should test and customize this detection to fit their environments.",IDS or IPS
"azure_ad_successful_powershell_authentication:The following analytic identifies a successful authentication event against an Azure AD tenant using PowerShell commandlets. This behavior is not common for regular, non administrative users. After compromising an account in Azure AD, attackers and red teams  alike will perform enumeration and discovery techniques. One method of executing these techniques is leveraging the native PowerShell modules.",IDS or IPS
"azure_ad_unusual_number_of_failed_authentications_from_ip:The following analytic identifies one source Ip failing to authenticate with multiple valid users. This behavior could represent an adversary performing a Password Spraying attack against an Azure Active Directory tenant to obtain initial access or elevate privileges. Error Code 50126 represents an invalid password.\The detection calculates the standard deviation for source Ip and leverages the 3-sigma statistical rule to identify an unusual number of failed authentication attempts. To customize this analytic, users can try different combinations of the `bucket` span time and the calculation of the `upperBound` field. This logic can be used for real time security monitoring as well as threat hunting exercises.\While looking for anomalies using statistical methods like the standard deviation can have benefits, we also recommend using threshold-based detections to complement coverage. A similar analytic following the threshold model is `Azure AD Multiple Users Failing To Authenticate From Ip`.",IDS or IPS
azure_ad_user_enabled_and_password_reset:The following analytic identifies an Azure AD user enabling a previously disabled account and resetting its password within 2 minutes. This behavior could represent an adversary who has obtained administrative access and is trying to establish a backdoor identity within an Azure AD tenant.,IDS or IPS
"azure_ad_user_immutableid_attribute_updated:The following analytic identifies the modification of the SourceAnchor (also called ImmutableId) attribute for an Azure Active Directory user. Updating this attribute is a step required to set up the Azure Active Directory identity federation backdoor technique discovered by security researcher Nestori Syynimaa. Similar to Active Directory, Azure AD uses the concept of domains to manage directories of identities. A new Azure AD tenant will initially contain a single domain that is commonly called the `cloud-only` onmicrosoft.com domain. Organizations can also add their registered custom domains to Azure AD for email addresses to match the organizations domain name. If the organization intends to use a third-party identity provider such as ADFS for authentication, the added custom domains can be configured as federated. An adversary who has obtained privileged access to an Azure AD tenant may leverage this technique to establish persistence and be able to authenticate to Azure AD impersonating any user and bypassing the requirement to have a valid password and/or perform MFA.",IDS or IPS
"azure_automation_account_created:The following analytic identifies the creation of a new Azure Automation account within an Azure tenant. Azure Automation is a cloud-based automation platform that allows administrators to automate Azure management tasks and orchestrate actions across external systems within Azure using PowerShell and Python. Azure Automation can also be configured to automate tasks on on premise infrastructure using a component called a Hybrid Runbook Worker. Automation accounts serve as a container to isolate Automation resources, runbooks, assets, and configurations from the resources of other accounts. They allow administrators to separate resources into logical environments or delegated responsibilities. Adversaries or red teams who have obtained privileged access to an Azure tenant may create an Azure Automation account with elevated privileges to maintain persistence in the Azure tenant. A malicious Automation Runbook can be created to create Global Administrators in Azure AD, execute code on VMs, etc.",Azure
"azure_automation_runbook_created:The following analytic identifies the creation of a new Azure Automation Runbook within an Azure tenant. Azure Automation is a cloud-based automation platform that allows administrators to automate Azure management tasks and orchestrate actions across external systems within Azure. Azure Automation script files called Runbooks that can be written in PowerShell or Python. Adversaries or red teams who have obtained privileged access to an Azure tenant may create an Azure Automation Runbook that runs with elevated privileges to maintain persistence in the Azure tenant. A malicious Automation Runbook can be created to create Global Administrators in Azure AD, execute code on VMs, etc.",Azure
azure_runbook_webhook_created:The following analytic identifies the creation of a new Automation Runbook Webhook within an Azure tenant. Azure Automation is a cloud-based automation platform that allows administrators to automate Azure management tasks and orchestrate actions across external systems within Azure. Azure Automation script files called Runbooks that can be written in PowerShell or Python. One of the ways administrators can configure a Runbook to be executed is through HTTP Webhooks. Webhooks leverage custom unauthenticated URLs that are exposed to the Internet. An adversary who has obtained privileged access to an Azure tenant may create a Webhook to trigger the execution of an Automation Runbook with malicious code that can create users or execute code on a VM. This provides a persistent foothold on the environment.,Azure
"basic_brute_force:Uses a simple threshold for Windows Security Logs to alert if there are a large number of failed logins, and at least one successful login from the same source.","Windows Security
Authentication"
basic_expired_account:You shouldn't see any successful authentication activity on the accounts of former employees. Track this easily in Splunk.,"Windows Security
Authentication"
"basic_gdpr_login_role_check:Follow your GDPR requirement and action your data mapping exercise by tracking employee/vendor/supplier access to systems, to ensure that they are authorized to view the data present on any systems they log into.","Windows Security
Authentication"
basic_malware_outbreak:Looks for the same malware occurring on multiple systems in a short period of time.,Anti-Virus or Anti-Malware
"basic_scanning:Looks for hosts that reach out to more than 500 hosts, or more than 500 ports in a short period of time, indicating scanning.",Network Communication
batch_file_write_to_system32:The search looks for a batch file (.bat) written to the Windows system directory tree.,Endpoint Detection and Response
bcdedit_command_back_to_normal_mode_boot:This search is to detect a suspicious bcdedit commandline to configure the host from safe mode back to normal boot configuration. This technique was seen in blackMatter ransomware where it force the compromised host to boot in safe mode to continue its encryption and bring back to normal boot using bcdedit deletevalue command. This TTP can be a good alert for host that booted from safe mode forcefully since it need to modify the boot configuration to bring it back to normal.,Endpoint Detection and Response
bcdedit_failure_recovery_modification:This search looks for flags passed to bcdedit.exe modifications to the built-in Windows error recovery boot configurations. This is typically used by ransomware to prevent recovery.,Endpoint Detection and Response
"bits_job_persistence:The following query identifies Microsoft Background Intelligent Transfer Service utility `bitsadmin.exe` scheduling a BITS job to persist on an endpoint. The query identifies the parameters used to create, resume or add a file to a BITS job. Typically seen combined in a oneliner or ran in sequence. If identified, review the BITS job created and capture any files written to disk. It is possible for BITS to be used to upload files and this may require further network data analysis to identify. You can use `bitsadmin /list /verbose` to list out the jobs during investigation.",Endpoint Detection and Response
"bitsadmin_download_file:The following query identifies Microsoft Background Intelligent Transfer Service utility `bitsadmin.exe` using the `transfer` parameter to download a remote object. In addition, look for `download` or `upload` on the command-line, the switches are not required to perform a transfer. Capture any files downloaded. Review the reputation of the IP or domain used. Typically once executed, a follow on command will be used to execute the dropped file. Note that the network connection or file modification events related will not spawn or create from `bitsadmin.exe`, but the artifacts will appear in a parallel process of `svchost.exe` with a command-line similar to `svchost.exe -k netsvcs -s BITS`. It's important to review all parallel and child processes to capture any behaviors and artifacts. In some suspicious and malicious instances, BITS jobs will be created. You can use `bitsadmin /list /verbose` to list out the jobs during investigation.",Endpoint Detection and Response
brute_force_access_behavior_detected:Detects excessive number of failed login attempts along with a successful attempt (this could indicate a successful brute force attack),Authentication
"brute_force_access_behavior_detected_over_one_day:Detects an excessive number of failed login attempts, along with a successful attempt, over a one day period (this could indicate a successful brute force attack)",Authentication
building_departmental_peer_group:<p>Build a departmental peer group that can be used by the detections in Splunk Security Essentials.</p>,Windows Security
"certutil_download_with_urlcache_and_split_arguments:Certutil.exe may download a file from a remote destination using `-urlcache`. This behavior does require a URL to be passed on the command-line. In addition, `-f` (force) and `-split` (Split embedded ASN.1 elements, and save to files) will be used. It is not entirely common for `certutil.exe` to contact public IP space. However, it is uncommon for `certutil.exe` to write files to world writeable paths.\ During triage, capture any files on disk and review. Review the reputation of the remote IP or domain in question.",Endpoint Detection and Response
"certutil_download_with_verifyctl_and_split_arguments:Certutil.exe may download a file from a remote destination using `-VerifyCtl`. This behavior does require a URL to be passed on the command-line. In addition, `-f` (force) and `-split` (Split embedded ASN.1 elements, and save to files) will be used. It is not entirely common for `certutil.exe` to contact public IP space. \ During triage, capture any files on disk and review. Review the reputation of the remote IP or domain in question. Using `-VerifyCtl`, the file will either be written to the current working directory or `%APPDATA%\..\LocalLow\Microsoft\CryptnetUrlCache\Content\<hash>`. ",Endpoint Detection and Response
certutil_exe_certificate_extraction:This search looks for arguments to certutil.exe indicating the manipulation or extraction of Certificate. This certificate can then be used to sign new authentication tokens specially inside Federated environments such as Windows ADFS.,Endpoint Detection and Response
"certutil_with_decode_argument:CertUtil.exe may be used to `encode` and `decode` a file, including PE and script code. Encoding will convert a file to base64 with `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----` tags. Malicious usage will include decoding a encoded file that was downloaded. Once decoded, it will be loaded by a parallel process. Note that there are two additional command switches that may be used - `encodehex` and `decodehex`. Similarly, the file will be encoded in HEX and later decoded for further execution. During triage, identify the source of the file being decoded. Review its contents or execution behavior for further analysis.",Endpoint Detection and Response
"change_default_file_association:This analytic is developed to detect suspicious registry modification to change the default file association of windows to malicious payload. This technique was seen in some APT where it modify the default process to run file association, like .txt to notepad.exe. Instead notepad.exe it will point to a Script or other payload that will load malicious commands to the compromised host.",Endpoint Detection and Response
change_to_safe_mode_with_network_config:This search is to detect a suspicious bcdedit commandline to configure the host to boot in safe mode with network config. This technique was seen in blackMatter ransomware where it force the compromised host to boot in safe mode to continue its encryption and bring back to normal boot using bcdedit deletevalue command. This TTP can be a good alert for host that booted from safe mode forcefully since it need to modify the boot configuration to bring it back to normal.,Endpoint Detection and Response
chcp_command_execution:This search is to detect execution of chcp.exe application. this utility is used to change the active code page of the console. This technique was seen in icedid malware to know the locale region/language/country of the compromise host.,Endpoint Detection and Response
check_elevated_cmd_using_whoami:This search is to detect a suspicious whoami execution to check if the cmd or shell instance process is with elevated privileges. This technique was seen in FIN7 js implant where it execute this as part of its data collection to the infected machine to check if the running shell cmd process is elevated or not. This TTP is really a good alert for known attacker that recon on the targetted host. This command is not so commonly executed by a normal user or even an admin to check if a process is elevated.,Endpoint Detection and Response
child_processes_of_spoolsv_exe:This search looks for child processes of spoolsv.exe. This activity is associated with a POC privilege-escalation exploit associated with CVE-2018-8440. Spoolsv.exe is the process associated with the Print Spooler service in Windows and typically runs as SYSTEM.,Endpoint Detection and Response
circle_ci_disable_security_job:This search looks for disable security job in CircleCI pipeline.,CircleCI
circle_ci_disable_security_step:This search looks for disable security step in CircleCI pipeline.,CircleCI
clear_unallocated_sector_using_cipher_app:this search is to detect execution of `cipher.exe` to clear the unallocated sectors of a specific disk. This technique was seen in some ransomware to make it impossible to forensically recover deleted files.,Endpoint Detection and Response
cleartext_password_at_rest_detected:Detects cleartext passwords being stored at rest (such as in the Unix passwd file),Configuration Management
clients_connecting_to_multiple_dns_servers:This search allows you to identify the endpoints that have connected to more than five DNS servers and made DNS Queries over the time frame of the search.,DNS
"clop_common_exec_parameter:The following analytics are designed to identifies some CLOP ransomware variant that using arguments to execute its main code or feature of its code. In this variant if the parameter is ""runrun"", CLOP ransomware will try to encrypt files in network shares and if it is ""temp.dat"", it will try to read from some stream pipe or file start encrypting files within the infected local machines. This technique can be also identified as an anti-sandbox technique to make its code non-responsive since it is waiting for some parameter to execute properly.",Endpoint Detection and Response
clop_ransomware_known_service_name:This detection is to identify the common service name created by the CLOP ransomware as part of its persistence and high privilege code execution in the infected machine. Ussually CLOP ransomware use StartServiceCtrlDispatcherW API in creating this service entry.,Microsoft System EventLog
cloud_api_calls_from_previously_unseen_user_roles:This search looks for new commands from each user role.,Change Events Data
cloud_compute_instance_created_by_previously_unseen_user:This search looks for cloud compute instances created by users who have not created them before.,Change Events Data
cloud_compute_instance_created_in_previously_unused_region:This search looks at cloud-infrastructure events where an instance is created in any region within the last hour and then compares it to a lookup file of previously seen regions where instances have been created.,Change Events Data
cloud_compute_instance_created_with_previously_unseen_image:This search looks for cloud compute instances being created with previously unseen image IDs.,Change Events Data
cloud_compute_instance_created_with_previously_unseen_instance_type:Find EC2 instances being created with previously unseen instance types.,Change Events Data
cloud_instance_modified_by_previously_unseen_user:This search looks for cloud instances being modified by users who have not previously modified them.,Change Events Data
"cloud_network_access_control_list_deleted:Enforcing network-access controls is one of the defensive mechanisms used by cloud administrators to restrict access to a cloud instance. After the attacker has gained control of the console by compromising an admin account, they can delete a network ACL and gain access to the instance from anywhere. This search will query the Change datamodel to detect users deleting network ACLs. Deprecated because it's a duplicate",AWS
cloud_provisioning_activity_from_previously_unseen_city:This search looks for cloud provisioning activities from previously unseen cities. Provisioning activities are defined broadly as any event that runs or creates something.,Change Events Data
cloud_provisioning_activity_from_previously_unseen_country:This search looks for cloud provisioning activities from previously unseen countries. Provisioning activities are defined broadly as any event that runs or creates something.,Change Events Data
cloud_provisioning_activity_from_previously_unseen_ip_address:This search looks for cloud provisioning activities from previously unseen IP addresses. Provisioning activities are defined broadly as any event that runs or creates something.,Change Events Data
cloud_provisioning_activity_from_previously_unseen_region:This search looks for cloud provisioning activities from previously unseen regions. Provisioning activities are defined broadly as any event that runs or creates something.,Change Events Data
cmd_carry_out_string_command_parameter:The following analytic identifies command-line arguments where `cmd.exe /c` is used to execute a program. `cmd /c` is used to run commands in MS-DOS and terminate after command or process completion. This technique is commonly seen in adversaries and malware to execute batch command using different shell like PowerShell or different process other than `cmd.exe`. This is a good hunting query for suspicious command-line made by a script or relative process execute it.,Endpoint Detection and Response
"cmdline_tool_not_executed_in_cmd_shell:The following analytic identifies a non-standard parent process (not matching CMD, PowerShell, or Explorer) spawning `ipconfig.exe` or `systeminfo.exe`. This particular behavior was seen in FIN7's JSSLoader .NET payload. This is also typically seen when an adversary is injected into another process performing different discovery techniques. This event stands out as a TTP since these tools are commonly executed with a shell application or Explorer parent, and not by another application. This TTP is a good indicator for an adversary gathering host information, but one possible false positive might be an automated tool used by a system administator.",Endpoint Detection and Response
cmlua_or_cmstplua_uac_bypass:This analytic detects a potential process using COM Object like CMLUA or CMSTPLUA to bypass UAC. This technique has been used by ransomware adversaries to gain administrative privileges to its running process.,Microsoft Sysmon Logs
"cobalt_strike_named_pipes:The following analytic identifies the use of default or publicly known named pipes used with Cobalt Strike. A named pipe is a named, one-way or duplex pipe for communication between the pipe server and one or more pipe clients. Cobalt Strike uses named pipes in many ways and has default values used with the Artifact Kit and Malleable C2 Profiles. The following query assists with identifying these default named pipes. Each EDR product presents named pipes a little different. Consider taking the values and generating a query based on the product of choice. \Upon triage, review the process performing the named pipe. If it is explorer.exe, It is possible it was injected into by another process. Review recent parallel processes to identify suspicious patterns or behaviors. A parallel process may have a network connection, review and follow the connection back to identify any file modifications.",Microsoft Sysmon Logs
codeword_threshold_departments:<p>Find users trying to collect and analyze internal projects from across multiple departments by analyzing their search logs on company wiki software.</p>,Web Server
common_ransomware_extensions:The search looks for file modifications with extensions commonly used by Ransomware,Endpoint Detection and Response
common_ransomware_notes:The search looks for files created with names matching those typically used in ransomware notes that tell the victim how to get their data back.,Endpoint Detection and Response
completely_inactive_account:Discovers accounts that are no longer used. Unused accounts should be disabled and are oftentimes used by attackers to gain unauthorized access.,Authentication
concurrent_login_attempts_detected:Alerts on concurrent access attempts to an app from different hosts. These are good indicators of shared passwords and potential misuse.,Authentication
conti_common_exec_parameter:This search detects the suspicious commandline argument of revil ransomware to encrypt specific or all local drive and network shares of the compromised machine or host.,Endpoint Detection and Response
"control_loading_from_world_writable_directory:The following detection identifies control.exe loading either a .cpl or .inf from a writable directory. This is related to CVE-2021-40444. During triage, review parallel processes, parent and child, for further suspicious behaviors. In addition, capture file modifications and analyze.",Endpoint Detection and Response
correlation_by_repository_and_risk:This search correlations detections by repository and risk_score,None
correlation_by_user_and_risk:This search correlations detections by user and risk_score,None
create_local_admin_accounts_using_net_exe:This search looks for the creation of local administrator accounts using net.exe .,Endpoint Detection and Response
create_or_delete_windows_shares_using_net_exe:This search looks for the creation or deletion of hidden shares using net.exe.,Endpoint Detection and Response
create_remote_thread_in_shell_application:This search is to detect suspicious process injection in command shell. This technique was seen in IcedID where it execute cmd.exe process to inject its shellcode as part of its execution as banking trojan. It is really uncommon to have a create remote thread execution in the following application.,Microsoft Sysmon Logs
create_remote_thread_into_lsass:Detect remote thread creation into LSASS consistent with credential dumping.,Microsoft Sysmon Logs
"creation_of_lsass_dump_with_taskmgr:Detect the hands on keyboard behavior of Windows Task Manager creating a process dump of lsass.exe. Upon this behavior occurring, a file write/modification will occur in the users profile under \AppData\Local\Temp. The dump file, lsass.dmp, cannot be renamed, however if the dump occurs more than once, it will be named lsass (2).dmp.",Microsoft Sysmon Logs
creation_of_shadow_copy:Monitor for signs that Vssadmin or Wmic has been used to create a shadow copy.,Endpoint Detection and Response
creation_of_shadow_copy_with_wmic_and_powershell:This search detects the use of wmic and Powershell to create a shadow copy.,Endpoint Detection and Response
credential_dumping_via_copy_command_from_shadow_copy:This search detects credential dumping using copy command from a shadow copy.,Endpoint Detection and Response
credential_dumping_via_symlink_to_shadow_copy:This search detects the creation of a symlink to a shadow copy.,Endpoint Detection and Response
credentials_in_file_detected:<p>Detect known ceredential patterns inside data indexed in Splunk.</p>,Any Splunk Logs
"csc_net_on_the_fly_compilation:this analytic is to detect a suspicious compile before delivery approach of .net compiler csc.exe. This technique was seen in several adversaries, malware and even in red teams to take advantage the csc.exe .net compiler tool to compile on the fly a malicious .net code to evade detection from security product. This is a good hunting query to check further the file or process created after this event and check the file path that passed to csc.exe which is the .net code. Aside from that, powershell is capable of using this compiler in executing .net code in a powershell script so filter on that case is needed.",Endpoint Detection and Response
"curl_download_and_bash_execution:The following analytic identifies the use of curl on Linux or MacOS attempting to download a file from a remote source and pipe it to bash. This is typically found with coinminers and most recently with CVE-2021-44228, a vulnerability in Log4j.",Endpoint Detection and Response
"default_account_activity_detected:Discovers use of default accounts (such as admin, administrator, etc.). Default accounts have default passwords and are therefore commonly targeted by attackers using brute force attack tools.",Authentication
default_account_at_rest_detected:Discovers the presence of default accounts even if they are not being used. Default accounts should be disabled in order to prevent an attacker from using them to gain unauthorized access to remote hosts.,Configuration Management
delete_shadowcopy_with_powershell:This following analytic detects PowerShell command to delete shadow copy using the WMIC PowerShell module. This technique was seen used by a recent adversary to deploy DarkSide Ransomware where it executed a child process of PowerShell to execute a hex encoded command to delete shadow copy. This hex encoded command was able to be decrypted by PowerShell log.,Windows Security
"deleting_of_net_users:This analytic will detect a suspicious net.exe/net1.exe command-line to delete a user on a system. This technique may be use by an administrator for legitimate purposes, however this behavior has been used in the wild to impair some user or deleting adversaries tracks created during its lateral movement additional systems. During triage, review parallel processes for additional behavior. Identify any other user accounts created before or after.",Endpoint Detection and Response
deleting_shadow_copies:The vssadmin.exe utility is used to interact with the Volume Shadow Copy Service.  Wmic is an interface to the Windows Management Instrumentation.  This search looks for either of these tools being used to delete shadow copies.,Endpoint Detection and Response
"detect_activity_related_to_pass_the_hash_attacks:This search looks for specific authentication events from the Windows Security Event logs to detect potential attempts at using the Pass-the-Hash technique. This search is DEPRECATED as it is possible for event code 4624 to generate a high level of noise, as legitimate logon events may also trigger this event code. This can be especially true in environments with high levels of user activity, such as those with many concurrent logons or frequent logon attempts.",Windows Security
"detect_api_activity_from_users_without_mfa:This search looks for AWS CloudTrail events where a user logged into the AWS account, is making API calls and has not enabled Multi Factor authentication. Multi factor authentication adds a layer of security by forcing the users to type a unique authentication code from an approved authentication device when they access AWS websites or services. AWS Best Practices recommend that you enable MFA for privileged IAM users.",AWS
"detect_arp_poisoning:By enabling Dynamic ARP Inspection as a Layer 2 Security measure on the organization's network devices, we will be able to detect ARP Poisoning attacks in the Infrastructure.",Cisco IOS
detect_attackers_scanning_for_vulnerable_jboss_servers:This search looks for specific GET or HEAD requests to web servers that are indicative of reconnaissance attempts to identify vulnerable JBoss servers. JexBoss is described as the exploit tool of choice for this malicious activity.,"Web Server
Web Proxy"
"detect_aws_api_activities_from_unapproved_accounts:This search looks for successful AWS CloudTrail activity by user accounts that are not listed in the identity table or `aws_service_accounts.csv`. It returns event names and count, as well as the first and last time a specific user or service is detected, grouped by users. Deprecated because managing this list can be quite hard.",AWS
"detect_aws_console_login_by_new_user:This search looks for AWS CloudTrail events wherein a console login event by a user was recorded within the last hour, then compares the event to a lookup file of previously seen users (by ARN values) who have logged into the console. The alert is fired if the user has logged into the console for the first time within the last hour",Authentication
"detect_aws_console_login_by_user_from_new_city:This search looks for AWS CloudTrail events wherein a console login event by a user was recorded within the last hour, then compares the event to a lookup file of previously seen users (by ARN values) who have logged into the console. The alert is fired if the user has logged into the console for the first time within the last hour",Authentication
"detect_aws_console_login_by_user_from_new_country:This search looks for AWS CloudTrail events wherein a console login event by a user was recorded within the last hour, then compares the event to a lookup file of previously seen users (by ARN values) who have logged into the console. The alert is fired if the user has logged into the console for the first time within the last hour",Authentication
"detect_aws_console_login_by_user_from_new_region:This search looks for AWS CloudTrail events wherein a console login event by a user was recorded within the last hour, then compares the event to a lookup file of previously seen users (by ARN values) who have logged into the console. The alert is fired if the user has logged into the console for the first time within the last hour",Authentication
"detect_azurehound_file_modifications:The following analytic is similar to SharpHound file modifications, but this instance covers the use of Invoke-AzureHound. AzureHound is the SharpHound equivilent but for Azure. It's possible this may never be seen in an environment as most attackers may execute this tool remotely. Once execution is complete, a zip file with a similar name will drop `20210601090751-azurecollection.zip`. In addition to the zip, multiple .json files will be written to disk, which are in the zip.",Endpoint Detection and Response
detect_computer_changed_with_anonymous_account:This search looks for Event Code 4742 (Computer Change) or EventCode 4624 (An account was successfully logged on) with an anonymous account.,Windows Security
"detect_copy_of_shadowcopy_with_script_block_logging:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable on critical endpoints or all. \This analytic identifies `copy` or `[System.IO.File]::Copy` being used to capture the SAM, SYSTEM or SECURITY hives identified in script block. This will catch the most basic use cases for credentials being taken for offline cracking. \During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",Windows Security
detect_credential_dumping_through_lsass_access:This search looks for reading lsass memory consistent with credential dumping.,Microsoft Sysmon Logs
detect_credit_card_numbers_using_luhn_algorithm:Detect if any log file in Splunk contains Credit Card numbers.,"App Server
Application Data
Any Splunk Logs
Backup"
"detect_dga_domains_using_pretrained_model_in_dsdl:The following analytic uses a pre trained deep learning model to detect Domain Generation Algorithm (DGA) generated domains. The model is trained independently and is then made available for download. One of the prominent indicators of a domain being DGA generated is if the domain name consists of unusual character sequences or concatenated dictionary words. Adversaries often use clever techniques to obfuscate machine generated domain names as human generated. Predicting DGA generated domain names requires analysis and building a model based on carefully chosen features. The deep learning model we have developed uses the domain name to analyze patterns of character sequences along with carefully chosen custom features to predict if a domain is DGA generated. The model takes a domain name consisting of second-level and top-level domain names as input and outputs a dga_score. Higher the dga_score, the more likely the input domain is a DGA domain. The threshold for flagging a domain as DGA is set at 0.5.",DNS
"detect_dns_data_exfiltration_using_pretrained_model_in_dsdl:The following analytic uses a pre trained deep learning model to detect DNS data exfiltration. The model is trained on the data we collected and is inferred on live data. This detection detects low throughput DNS Tunneling (data exfiltration) using features computed from past events between the same src and domain. The search uses macros from URL ToolBox app to generate features used by the model. The model is a deep learning model that accepts DNS request as input along with a few custom features to generate a pred_is_exfiltration_proba score. The higher the pred_is_exfiltration_proba, the more likely the DNS request is data exfiltration. The threshold for flagging a request as DNS exfiltration is set at 0.5.",DNS
detect_dns_requests_to_phishing_sites_leveraging_evilginx2:This search looks for DNS requests for phishing domains that are leveraging EvilGinx tools to mimic websites.,"Web Proxy
DNS"
"detect_empire_with_powershell_script_block_logging:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable on critical endpoints or all. \This analytic identifies the common PowerShell stager used by PowerShell-Empire. Each stager that may use PowerShell all uses the same pattern. The initial HTTP will be base64 encoded and use `system.net.webclient`. Note that some obfuscation may evade the analytic. \During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",Windows Security
detect_excessive_account_lockouts_from_endpoint:This search identifies endpoints that have caused a relatively high number of account lockouts in a short period.,Change Events Data
detect_excessive_user_account_lockouts:This search detects user accounts that have been locked out a relatively high number of times in a short period.,Change Events Data
"detect_exchange_web_shell:The following query identifies suspicious .aspx created in 3 paths identified by Microsoft as known drop locations for Exchange exploitation related to HAFNIUM group and recently disclosed vulnerablity named ProxyShell and ProxyNotShell. Paths include: `\HttpProxy\owa\auth\`, `\inetpub\wwwroot\aspnet_client\`, and `\HttpProxy\OAB\`. Upon triage, the suspicious .aspx file will likely look obvious on the surface. inspect the contents for script code inside. Identify additional log sources, IIS included, to review source and other potential exploitation. It is often the case that a particular threat is only applicable to a specific subset of systems in your environment. Typically analytics to detect those threats are written without the benefit of being able to only target those systems as well. Writing analytics against all systems when those behaviors are limited to identifiable subsets of those systems is suboptimal. Consider the case ProxyShell vulnerability on Microsoft Exchange Servers. With asset information, a hunter can limit their analytics to systems that have been identified as Exchange servers. A hunter may start with the theory that the exchange server is communicating with new systems that it has not previously. If this theory is run against all publicly facing systems, the amount of noise it will generate will likely render this theory untenable. However, using the asset information to limit this analytic to just the Exchange servers will reduce the noise allowing the hunter to focus only on the systems where this behavioral change is relevant.",Endpoint Detection and Response
detect_gcp_storage_access_from_a_new_ip:This search looks at GCP Storage bucket-access logs and detects new or previously unseen remote IP addresses that have successfully accessed a GCP Storage bucket.,GCP
"detect_hosts_connecting_to_dynamic_domain_providers:Malicious actors often abuse legitimate Dynamic DNS services to host malicious payloads or interactive Command And Control nodes. Attackers will automate domain resolution changes by routing dynamic domains to countless IP addresses to circumvent firewall blocks, block lists as well as frustrate a network defenders analytic and investigative processes. This search will look for DNS queries made from within your infrastructure to suspicious dynamic domains.",DNS
"detect_html_help_renamed:The following analytic identifies a renamed instance of hh.exe (HTML Help) executing a Compiled HTML Help (CHM). This particular technique will load Windows script code from a compiled help file. CHM files may contain nearly any file type embedded, but only execute html/htm. Upon a successful execution, the following script engines may be used for execution - JScript, VBScript, VBScript.Encode, JScript.Encode, JScript.Compact. Analyst may identify vbscript.dll or jscript.dll loading into hh.exe upon execution. The ""htm"" and ""html"" file extensions were the only extensions observed to be supported for the execution of Shortcut commands or WSH script code. During investigation, identify script content origination. Validate it is the legitimate version of hh.exe by reviewing the PE metadata. hh.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",Endpoint Detection and Response
"detect_html_help_spawn_child_process:The following analytic identifies hh.exe (HTML Help) execution of a Compiled HTML Help (CHM) that spawns a child process. This particular technique will load Windows script code from a compiled help file. CHM files may contain nearly any file type embedded, but only execute html/htm. Upon a successful execution, the following script engines may be used for execution - JScript, VBScript, VBScript.Encode, JScript.Encode, JScript.Compact. Analyst may identify vbscript.dll or jscript.dll loading into hh.exe upon execution. The ""htm"" and ""html"" file extensions were the only extensions observed to be supported for the execution of Shortcut commands or WSH script code. During investigation, identify script content origination. Review child process events and investigate further. hh.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",Endpoint Detection and Response
"detect_html_help_url_in_command_line:The following analytic identifies hh.exe (HTML Help) execution of a Compiled HTML Help (CHM) file from a remote url. This particular technique will load Windows script code from a compiled help file. CHM files may  contain nearly any file type embedded, but only execute html/htm. Upon a successful execution, the following script engines may be used for execution - JScript, VBScript, VBScript.Encode, JScript.Encode, JScript.Compact. Analyst may identify vbscript.dll or jscript.dll loading into hh.exe upon execution. The ""htm"" and ""html"" file extensions were the only extensions observed to be supported for the execution of Shortcut commands or WSH script code. During investigation, identify script content origination. Review reputation of remote IP and domain. Some instances, it is worth decompiling the .chm file to review its original contents. hh.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",Endpoint Detection and Response
"detect_html_help_using_infotech_storage_handlers:The following analytic identifies hh.exe (HTML Help) execution of a Compiled HTML Help (CHM) file using InfoTech Storage Handlers. This particular technique will load Windows script code from a compiled help file, using InfoTech Storage Handlers. itss.dll will load upon execution. Three InfoTech Storage handlers are supported - ms-its, its, mk:@MSITStore. ITSS may be used to launch a specific html/htm file from within a CHM file. CHM files may contain nearly any file type embedded. Upon a successful execution, the following script engines may be used for execution - JScript, VBScript, VBScript.Encode, JScript.Encode, JScript.Compact. Analyst may identify vbscript.dll or jscript.dll loading into hh.exe upon execution. The ""htm"" and ""html"" file extensions were the only extensions observed to be supported for the execution of Shortcut commands or WSH script code. During investigation, identify script content origination. hh.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",Endpoint Detection and Response
"detect_ipv6_network_infrastructure_threats:By enabling IPv6 First Hop Security as a Layer 2 Security measure on the organization's network devices, we will be able to detect various attacks such as packet forging in the Infrastructure.",Cisco IOS
"detect_large_outbound_icmp_packets:This search looks for outbound ICMP packets with a packet size larger than 1,000 bytes. Various threat actors have been known to use ICMP as a command and control channel for their attack infrastructure. Large ICMP packets from an endpoint to a remote host may be indicative of this activity.",Network Communication
"detect_long_dns_txt_record_response:This search is used to detect attempts to use DNS tunneling, by calculating the length of responses to DNS TXT queries. Endpoints using DNS as a method of transmission for data exfiltration, Command And Control, or evasion of security controls can often be detected by noting unusually large volumes of DNS traffic. Deprecated because this detection should focus on DNS queries instead of DNS responses.",DNS
"detect_malicious_requests_to_exploit_jboss_servers:This search is used to detect malicious HTTP requests crafted to exploit jmx-console in JBoss servers. The malicious requests have a long URL length, as the payload is embedded in the URL.","Web Server
Web Proxy"
detect_mimikatz_using_loaded_images:This search looks for reading loaded Images unique to credential dumping with Mimikatz. Deprecated because mimikatz libraries changed and very noisy sysmon Event Code.,Microsoft Sysmon Logs
"detect_mimikatz_via_powershell_and_eventcode_4703:This search looks for PowerShell requesting privileges consistent with credential dumping. Deprecated, looks like things changed from a logging perspective.",Windows Security
"detect_mimikatz_with_powershell_script_block_logging:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable no critical endpoints or all. \This analytic identifies common Mimikatz functions that may be identified in the script block, including `mimikatz`. This will catch the most basic use cases for Pass the Ticket, Pass the Hash and `-DumprCreds`. \During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",Windows Security
"detect_mshta_inline_hta_execution:The following analytic identifies ""mshta.exe"" execution with inline protocol handlers. ""JavaScript"", ""VBScript"", and ""About"" are the only supported options when invoking HTA content directly on the command-line. The search will return the first time and last time these command-line arguments were used for these executions, as well as the target system, the user, process ""mshta.exe"" and its parent process.",Endpoint Detection and Response
detect_mshta_renamed:The following analytic identifies renamed instances of mshta.exe executing. Mshta.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64. This analytic utilizes the internal name of the PE to identify if is the legitimate mshta binary. Further analysis should be performed to review the executed content and validation it is the real mshta.,Endpoint Detection and Response
"detect_mshta_url_in_command_line:This analytic identifies when Microsoft HTML Application Host (mshta.exe) utility is used to make remote http connections. Adversaries may use mshta.exe to proxy the download and execution of remote .hta files. The analytic identifies command line arguments of http and https being used. This technique is commonly used by malicious software to bypass preventative controls. The search will return the first time and last time these command-line arguments were used for these executions, as well as the target system, the user, process ""rundll32.exe"" and its parent process.",Endpoint Detection and Response
"detect_new_api_calls_from_user_roles:This search detects new API calls that have either never been seen before or that have not been seen in the previous hour, where the identity type is `AssumedRole`.",AWS
detect_new_local_admin_account:This search looks for newly created accounts that have been elevated to local administrators.,Windows Security
"detect_new_login_attempts_to_routers:The search queries the authentication logs for assets that are categorized as routers in the ES Assets and Identity Framework, to identify connections that have not been seen before in the last 30 days.",Authentication
detect_new_open_gcp_storage_buckets:This search looks for GCP PubSub events where a user has created an open/public GCP Storage bucket.,GCP
detect_new_open_s3_buckets:This search looks for AWS CloudTrail events where a user has created an open/public S3 bucket.,AWS
detect_new_open_s3_buckets_over_aws_cli:This search looks for AWS CloudTrail events where a user has created an open/public S3 bucket over the aws cli.,AWS
"detect_new_user_aws_console_login:This search looks for AWS CloudTrail events wherein a console login event by a user was recorded within the last hour, then compares the event to a lookup file of previously seen users (by ARN values) who have logged into the console. The alert is fired if the user has logged into the console for the first time within the last hour. Deprecated now this search is updated to use the Authentication datamodel.",AWS
detect_outbound_ldap_traffic:Malicious actors often abuse misconfigured LDAP servers or applications that use the LDAP servers in organizations. Outbound LDAP traffic should not be allowed outbound through your perimeter firewall.  This search will help determine if you have any LDAP connections to IP addresses outside of private (RFC1918) address space.,"DNS Global Load Balancer
Application Load Balancer
Network Communication"
detect_outbound_smb_traffic:This search looks for outbound SMB connections made by hosts within your network to the Internet. SMB traffic is used for Windows file-sharing activity. One of the techniques often used by attackers involves retrieving the credential hash using an SMB request made to a compromised server controlled by the threat actor.,Network Communication
detect_outlook_exe_writing_a_zip_file:This search looks for execution of process `outlook.exe` where the process is writing a `.zip` file to the disk.,Endpoint Detection and Response
"detect_path_interception_by_creation_of_program_exe:The detection Detect Path Interception By Creation Of program exe is detecting the abuse of unquoted service paths, which is a popular technique for privilege escalation. ",Endpoint Detection and Response
"detect_port_security_violation:By enabling Port Security on a Cisco switch you can restrict input to an interface by limiting and identifying MAC addresses of the workstations that are allowed to access the port. When you assign secure MAC addresses to a secure port, the port does not forward packets with source addresses outside the group of defined addresses. If you limit the number of secure MAC addresses to one and assign a single secure MAC address, the workstation attached to that port is assured the full bandwidth of the port. If a port is configured as a secure port and the maximum number of secure MAC addresses is reached, when the MAC address of a workstation attempting to access the port is different from any of the identified secure MAC addresses, a security violation occurs.",Cisco IOS
detect_processes_used_for_system_network_configuration_discovery:This search looks for fast execution of processes used for system network configuration discovery on the endpoint.,Endpoint Detection and Response
detect_prohibited_applications_spawning_cmd_exe:This search looks for executions of cmd.exe spawned by a process that is often abused by attackers and that does not typically launch cmd.exe.,Endpoint Detection and Response
"detect_psexec_with_accepteula_flag:This search looks for events where `PsExec.exe` is run with the `accepteula` flag in the command line. PsExec is a built-in Windows utility that enables you to execute processes on other systems. It is fully interactive for console applications. This tool is widely used for launching interactive command prompts on remote systems. Threat actors leverage this extensively for executing code on compromised systems. If an attacker is running PsExec for the first time, they will be prompted to accept the end-user license agreement (EULA), which can be passed as the argument `accepteula` within the command line.",Endpoint Detection and Response
"detect_rare_executables:This search will return a table of processes in the a given window, remove process names which are in the allowed list and list out the top 30 rare processes discovered on different hosts.",Endpoint Detection and Response
"detect_regasm_spawning_a_process:The following analytic identifies regasm.exe spawning a process. This particular technique has been used in the wild to bypass application control products. Regasm.exe and Regsvcs.exe are signed by Microsoft. Spawning of a child process is rare from either process and should be investigated further. During investigation, identify and retrieve the content being loaded. Review parallel processes for additional suspicious behavior. Gather any other file modifications and review accordingly. regsvcs.exe and regasm.exe are natively found in C:\Windows\Microsoft.NET\Framework\v*\regasm|regsvcs.exe and C:\Windows\Microsoft.NET\Framework64\v*\regasm|regsvcs.exe.",Endpoint Detection and Response
"detect_regasm_with_network_connection:The following analytic identifies regasm.exe with a network connection to a public IP address, exluding private IP space. This particular technique has been used in the wild to bypass application control products. Regasm.exe and Regsvcs.exe are signed by Microsoft. By contacting a remote Command And Control server, the adversary will have the ability to escalate privileges and complete the objectives. During investigation, identify and retrieve the content being loaded. Review parallel processes for additional suspicious behavior. Gather any other file modifications and review accordingly. Review the reputation of the remote IP or domain and block as needed. regsvcs.exe and regasm.exe are natively found in C:\Windows\Microsoft.NET\Framework\v*\regasm|regsvcs.exe and C:\Windows\Microsoft.NET\Framework64\v*\regasm|regsvcs.exe.",Microsoft Sysmon Logs
"detect_regasm_with_no_command_line_arguments:The following analytic identifies regasm.exe with no command line arguments. This particular behavior occurs when another process injects into regasm.exe, no command line arguments will be present. During investigation, identify any network connections and parallel processes. Identify any suspicious module loads related to credential dumping or file writes. Regasm.exe are natively found in `C:\Windows\Microsoft.NET\Framework\v*\regasm|regsvcs.exe` and `C:\Windows\Microsoft.NET\Framework64\v*\regasm|regsvcs.exe`.",Endpoint Detection and Response
"detect_regsvcs_spawning_a_process:The following analytic identifies regsvcs.exe spawning a process. This particular technique has been used in the wild to bypass application control products. Regasm.exe and Regsvcs.exe are signed by Microsoft. Spawning of a child process is rare from either process and should be investigated further. During investigation, identify and retrieve the content being loaded. Review parallel processes for additional suspicious behavior. Gather any other file modifications and review accordingly. regsvcs.exe and regasm.exe are natively found in C:\Windows\Microsoft.NET\Framework\v*\regasm|regsvcs.exe and C:\Windows\Microsoft.NET\Framework64\v*\regasm|regsvcs.exe.",Endpoint Detection and Response
"detect_regsvcs_with_network_connection:The following analytic identifies Regsvcs.exe with a network connection to a public IP address, exluding private IP space. This particular technique has been used in the wild to bypass application control products. Regasm.exe and Regsvcs.exe are signed by Microsoft. By contacting a remote Command And Control server, the adversary will have the ability to escalate privileges and complete the objectives. During investigation, identify and retrieve the content being loaded. Review parallel processes for additional suspicious behavior. Gather any other file modifications and review accordingly. Review the reputation of the remote IP or domain and block as needed. regsvcs.exe and regasm.exe are natively found in C:\Windows\Microsoft.NET\Framework\v*\regasm|regsvcs.exe and C:\Windows\Microsoft.NET\Framework64\v*\regasm|regsvcs.exe.",Microsoft Sysmon Logs
"detect_regsvcs_with_no_command_line_arguments:The following analytic identifies regsvcs.exe with no command line arguments. This particular behavior occurs when another process injects into regsvcs.exe, no command line arguments will be present. During investigation, identify any network connections and parallel processes. Identify any suspicious module loads related to credential dumping or file writes. Regasm.exe are natively found in C:\Windows\Microsoft.NET\Framework\v*\regasm|regsvcs.exe and C:\Windows\Microsoft.NET\Framework64\v*\regasm|regsvcs.exe.",Endpoint Detection and Response
"detect_regsvr32_application_control_bypass:Adversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. Regsvr32.exe is also a Microsoft signed binary.This variation of the technique is often referred to as a ""Squiblydoo"" attack. \Upon investigating, look for network connections to remote destinations (internal or external). Be cautious to modify the query to look for ""scrobj.dll"", the "".dll"" is not required to load scrobj. ""scrobj.dll"" will be loaded by ""regsvr32.exe"" upon execution. ",Endpoint Detection and Response
"detect_renamed_psexec:The following analytic identifies renamed instances of `PsExec.exe` being utilized on an endpoint. Most instances, it is highly probable to capture `Psexec.exe` or other SysInternal utility usage with the command-line argument of `-accepteula`. During triage, validate this is the legitimate version of `PsExec` by reviewing the PE metadata. In addition, review parallel processes for further suspicious behavior.",Endpoint Detection and Response
"detect_renamed_rclone:The following analytic identifies the usage of `rclone.exe`, renamed, being used to exfiltrate data to a remote destination. RClone has been used by multiple ransomware groups to exfiltrate data. In many instances, it will be downloaded from the legitimate site and executed accordingly. During triage, isolate the endpoint and begin to review parallel processes for additional behavior. At this stage, the adversary may have staged data to be exfiltrated.",Endpoint Detection and Response
"detect_renamed_winrar:The following analtyic identifies renamed instances of `WinRAR.exe`. In most cases, it is not common for WinRAR to be used renamed, however it is common to be installed by a third party application and executed from a non-standard path. During triage, validate additional metadata from the binary that this is `WinRAR`. Review parallel processes and file modifications.",Endpoint Detection and Response
"detect_risky_spl_using_pretrained_ml_model:The following analytic uses a pretrained machine learning text classifier to detect potentially risky commands. The model is trained independently and then the model file is packaged within ESCU for usage. A command is deemed risky based on the presence of certain trigger keywords, along with the context and the role of the user (please see references). The model uses custom features to predict whether a SPL is risky using text classification. The model takes as input the command text, user and search type and outputs a risk score between [0,1]. A high score indicates higher likelihood of a command being risky. This model is on-prem only.",Splunk Search Activity Logs
"detect_rogue_dhcp_server:By enabling DHCP Snooping as a Layer 2 Security measure on the organization's network devices, we will be able to detect unauthorized DHCP servers handing out DHCP leases to devices on the network (Man in the Middle attack).",Cisco IOS
detect_rtlo_in_file_name:This search is used to detect the abuse of the right-to-left override (RTLO or RLO) character (U+202E) RTLO. This technique is used by adversaries to disguise a string and/or file name to make it appear benign. The RTLO character is a non-printing Unicode character that causes the text that follows it to be displayed in reverse.,Endpoint Detection and Response
detect_rtlo_in_process:This search is used to detect the abuse of the right-to-left override (RTLO or RLO) character (U+202E) RTLO. This technique is used by adversaries to disguise a string and/or file name to make it appear benign. The RTLO character is a non-printing Unicode character that causes the text that follows it to be displayed in reverse.,Endpoint Detection and Response
"detect_rundll32_inline_hta_execution:The following analytic identifies ""rundll32.exe"" execution with inline protocol handlers. ""JavaScript"", ""VBScript"", and ""About"" are the only supported options when invoking HTA content directly on the command-line. This type of behavior is commonly observed with fileless malware or application whitelisting bypass techniques. The search will return the first time and last time these command-line arguments were used for these executions, as well as the target system, the user, process ""rundll32.exe"" and its parent process.",Endpoint Detection and Response
detect_s3_access_from_a_new_ip:This search looks at S3 bucket-access logs and detects new or previously unseen remote IP addresses that have successfully accessed an S3 bucket.,AWS
"detect_sharphound_file_modifications:SharpHound is used as a reconnaissance collector, ingestor, for BloodHound. SharpHound will query the domain controller and begin gathering all the data related to the domain and trusts. For output, it will drop a .zip file upon completion following a typical pattern that is often not changed. This analytic focuses on the default file name scheme. Note that this may be evaded with different parameters within SharpHound, but that depends on the operator. `-randomizefilenames` and `-encryptzip` are two examples. In addition, executing SharpHound via .exe or .ps1 without any command-line arguments will still perform activity and dump output to the default filename. Example default filename `20210601181553_BloodHound.zip`. SharpHound creates multiple temp files following the same pattern `20210601182121_computers.json`, `domains.json`, `gpos.json`, `ous.json` and `users.json`. Tuning may be required, or remove these json's entirely if it is too noisy. During traige, review parallel processes for further suspicious behavior. Typically, the process executing the `.ps1` ingestor will be PowerShell.",Endpoint Detection and Response
"detect_sharphound_usage:The following analytic identifies SharpHound binary usage by using the original filena,e. In addition to renaming the PE, other coverage is available to detect command-line arguments. This particular analytic looks for the original_file_name of `SharpHound.exe` and the process name. It is possible older instances of SharpHound.exe have different original filenames. Dependent upon the operator, the code may be re-compiled and the attributes removed or changed to anything else. During triage, review the metadata of the binary in question. Review parallel processes for suspicious behavior. Identify the source of this binary.",Endpoint Detection and Response
detect_snicat_sni_exfiltration:This search looks for commands that the SNICat tool uses in the TLS SNI field.,Zeek
"detect_software_download_to_network_device:Adversaries may abuse netbooting to load an unauthorized network device operating system from a Trivial File Transfer Protocol (TFTP) server. TFTP boot (netbooting) is commonly used by network administrators to load configuration-controlled network device images from a centralized management server. Netbooting is one option in the boot sequence and can be used to centralize, manage, and control device images.",Network Communication
detect_spike_in_aws_api_activity:This search will detect users creating spikes of API activity in your AWS environment.  It will also update the cache file that factors in the latest data. This search is deprecated and have been translated to use the latest Change Datamodel.,AWS
detect_spike_in_aws_security_hub_alerts_for_ec2_instance:This search looks for a spike in number of of AWS security Hub alerts for an EC2 instance in 4 hours intervals,AWS
detect_spike_in_aws_security_hub_alerts_for_user:This search looks for a spike in number of of AWS security Hub alerts for an AWS IAM User in 4 hours intervals.,AWS
detect_spike_in_blocked_outbound_traffic_from_your_aws:This search will detect spike in blocked outbound network connections originating from within your AWS environment.  It will also update the cache file that factors in the latest data.,AWS
detect_spike_in_network_acl_activity:This search will detect users creating spikes in API activity related to network access-control lists (ACLs)in your AWS environment. This search is deprecated and have been translated to use the latest Change Datamodel.,AWS
detect_spike_in_s3_bucket_deletion:This search detects users creating spikes in API activity related to deletion of S3 buckets in your AWS environment. It will also update the cache file that factors in the latest data.,AWS
detect_spike_in_security_group_activity:This search will detect users creating spikes in API activity related to security groups in your AWS environment.  It will also update the cache file that factors in the latest data.  This search is deprecated and have been translated to use the latest Change Datamodel.,AWS
"detect_suspicious_dns_txt_records_using_pretrained_model_in_dsdl:The following analytic uses a pre trained deep learning model to detect suspicious DNS TXT records. The model is trained independently and is then made available for download. The DNS TXT records are categorized into commonly identified types like email, verification, http using regular expressions https://www.tide-project.nl/blog/wtmc2020/. The TXT records that do not match regular expressions for well known types are labeled as 1 for ""unknown/suspicious"" and otherwise 0 for ""not suspicious"". The deep learning model we have developed uses DNS TXT responses to analyze patterns of character sequences to predict if a DNS TXT is suspicious or not. The higher the pred_is_unknown_proba, the more likely the DNS TXT record is suspicious. The threshold for flagging a domain as suspicious is set at 0.5.",DNS
"detect_suspicious_processnames_using_pretrained_model_in_dsdl:The following analytic uses a pre-trained Deep Learning model to predict whether a processname is suspicious or not. Malwares and malicious programs such as ransomware often use tactics, techniques, and procedures (TTPs) such as copying malicious files to the local machine to propagate themselves across the network. A key indicator of compromise is that after a successful execution of the malware, it copies itself as an executable file with a randomly generated filename and places this file in one of the directories. Such techniques are seen in several malwares such as TrickBot. We develop machine learning model that uses a Recurrent Neural Network (RNN) to distinguish between malicious and benign processnames. The model is trained independently and is then made available for download. We use a character level RNN to classify malicious vs. benign processnames. The higher is_malicious_prob, the more likely is the processname to be suspicious (between [0,1]). The threshold for flagging a processname as suspicious is set as 0.5.",Endpoint Detection and Response
detect_traffic_mirroring:Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised network infrastructure. Traffic mirroring is a native feature for some network devices and used for network analysis and may be configured to duplicate traffic and forward to one or more destinations for analysis by a network analyzer or other monitoring device.,Cisco IOS
"detect_unauthorized_assets_by_mac_address:By populating the organization's assets within the assets_by_str.csv, we will be able to detect unauthorized devices that are trying to connect with the organization's network by inspecting DHCP request packets, which are issued by devices when they attempt to obtain an IP address from the DHCP server. The MAC address associated with the source of the DHCP request is checked against the list of known devices, and reports on those that are not found.",IP Address Assignment
"detect_usb_device_insertion:The search is used to detect hosts that generate Windows Event ID 4663 for successful attempts to write to or read from a removable storage and Event ID 4656 for failures, which occurs when a USB drive is plugged in. In this scenario we are querying the Change_Analysis data model to look for Windows Event ID 4656 or 4663 where the priority of the affected host is marked as high in the ES Assets and Identity Framework.",Endpoint Detection and Response
"detect_use_of_cmd_exe_to_launch_script_interpreters:This search looks for the execution of the cscript.exe or wscript.exe processes, with a parent of cmd.exe. The search will return the count, the first and last time this execution was seen on a machine, the user, and the destination of the machine",Endpoint Detection and Response
detect_web_traffic_to_dynamic_domain_providers:This search looks for web connections to dynamic DNS providers.,"Web Server
Web Proxy"
detect_webshell_exploit_behavior:This search is used to detect the abuse of web applications by adversaries. Adversaries may install a backdoor or script onto web servers by exploiting known vulnerabilities or misconfigruations. Web shells are used to establish persistent access to systems and provide a set of executable functions or a command-line interface on the system hosting the Web server.,Endpoint Detection and Response
detect_windows_dns_sigred_via_splunk_stream:This search detects SIGRed via Splunk Stream.,DNS
detect_windows_dns_sigred_via_zeek:This search detects SIGRed via Zeek DNS and Zeek Conn data.,"DNS
Network Communication"
"detect_wmi_event_subscription_persistence:The following analytic identifies the use of WMI Event Subscription to establish persistence or perform privilege escalation.  WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. WMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges. This analytic is restricted by commonly added process execution and a path. If the volume is low enough, remove the values and flag on any new subscriptions.\All event subscriptions have three components \1. Filter - WQL Query for the events we want. EventID equals 19 \1. Consumer - An action to take upon triggering the filter. EventID equals 20 \1. Binding - Registers a filter to a consumer. EventID equals 21 \Monitor for the creation of new WMI EventFilter, EventConsumer, and FilterToConsumerBinding. It may be pertinent to review all 3 to identify the flow of execution. In addition, EventCode 4104 may assist with any other PowerShell script usage that registered the subscription.",Microsoft Sysmon Logs
detect_zerologon_via_zeek:This search detects attempts to run exploits for the Zerologon CVE-2020-1472 vulnerability via Zeek RPC,Zeek
"detection_of_dns_tunnels:This search is used to detect DNS tunneling, by calculating the sum of the length of DNS queries and DNS answers. The search also filters out potential false positives by filtering out queries made to internal systems and the queries originating from internal DNS, Web, and Email servers. Endpoints using DNS as a method of transmission for data exfiltration, Command And Control, or evasion of security controls can often be detected by noting an unusually large volume of DNS traffic. \NOTE:Deprecated because existing detection is doing the same. This detection is replaced with two other variations, if you are using MLTK then you can use this search `ESCU - DNS Query Length Outliers - MLTK - Rule` or use the standard deviation version `ESCU - DNS Query Length With High Standard Deviation - Rule`, as an alternantive.",DNS
"detection_of_tools_built_by_nirsoft:This search looks for specific command-line arguments that may indicate the execution of tools made by Nirsoft, which are legitimate, but may be abused by attackers.",Endpoint Detection and Response
"detection_uba_email_anomaly:This detection looks for emails that are suspicious because of their sender, domain rareness, or behavior differences. This is an anomaly generated by Splunk User Behavior Analytics (UBA).",Email
"disable_amsi_through_registry:this search is to identify modification in registry to disable AMSI windows feature to evade detections. This technique was seen in several ransomware, RAT and even APT to impaire defenses of the compromise machine and to be able to execute payload with minimal alert as much as possible.",Endpoint Detection and Response
"disable_defender_antivirus_registry:This particular behavior is typically executed when an adversary or malware gains access to an endpoint and begins to perform execution and to evade detections. Usually, a batch (.bat) file will be executed and multiple registry and scheduled task modifications will occur. During triage, review parallel processes and identify any further file modifications. Endpoint should be isolated.",Endpoint Detection and Response
"disable_defender_blockatfirstseen_feature:This analytic is intended to detect a suspicious modification of the Windows registry to disable a Windows Defender feature. This technique is intended to bypass or evade detection from Windows Defender AV, specifically the BlockAtFirstSeen feature where it blocks suspicious files the first time seen on the host.",Endpoint Detection and Response
"disable_defender_enhanced_notification:This analytic is intended to detect a suspicious modification of registry to disable windows defender features. This technique attempts to bypass or evade detection from Windows Defender AV, specifically the Enhanced Notification feature where a user or admin would receive alerts.",Endpoint Detection and Response
"disable_defender_mpengine_registry:This particular behavior is typically executed when an adversary or malware gains access to an endpoint and begins to perform execution and to evade detections. Usually, a batch (.bat) file will be executed and multiple registry and scheduled task modifications will occur. During triage, review parallel processes and identify any further file modifications. Endpoint should be isolated.",Endpoint Detection and Response
"disable_defender_spynet_reporting:This analytic is intended to detect a suspicious modification of registry to disable Windows Defender feature. This technique is intended to bypass or evade detection from Windows Defender AV product, specifically the spynet reporting for Defender telemetry.",Endpoint Detection and Response
"disable_defender_submit_samples_consent_feature:This analytic is intended to detect a suspicious modification of the Windows registry to disable a Windows Defender feature. This technique is intended to bypass or evade detection from Windows Defender AV, specifically the feature that submits samples for further analysis.",Endpoint Detection and Response
"disable_etw_through_registry:this search is to identify modification in registry to disable ETW windows feature to evade detections. This technique was seen in several ransomware, RAT and even APT to impaire defenses of the compromise machine and to be able to execute payload with minimal alert as much as possible.",Endpoint Detection and Response
disable_logs_using_wevtutil:This search is to detect execution of wevtutil.exe to disable logs. This technique was seen in several ransomware to disable the event logs to evade alerts and detections.,Endpoint Detection and Response
"disable_registry_tool:This search identifies modification of registry to disable the regedit or registry tools of the windows operating system. Since registry tool is a swiss knife in analyzing registry, malware such as RAT or trojan Spy disable this application to prevent the removal of their registry entry such as persistence, file less components and defense evasion.",Endpoint Detection and Response
disable_schedule_task:This analytic is to detect a suspicious commandline to disable existing schedule task. This technique is used by adversaries or commodity malware like IcedID to disable security application (AV products) in the targetted host to evade detections. This TTP is a good pivot to check further why and what other process run before and after this detection. check which process execute the commandline and what task is disabled. parent child process is quite valuable in this scenario too.,Endpoint Detection and Response
disable_security_logs_using_minint_registry:This analytic is to detect a suspicious registry modification to disable security audit logs. This technique was shared by a researcher to disable Security logs of windows by adding this registry. The Windows will think it is WinPE and will not log any event to the Security Log,Endpoint Detection and Response
disable_show_hidden_files:The following analytic is to identify a modification in the Windows registry to prevent users from seeing all the files with hidden attributes. This event or techniques are known on some worm and trojan spy malware that will drop hidden files on the infected machine.,Endpoint Detection and Response
disable_uac_remote_restriction:This analytic is to detect a suspicious modification of registry to disable UAC remote restriction. This technique was well documented in Microsoft page where attacker may modify this registry value to bypassed UAC feature of windows host. This is a good indicator that some tries to bypassed UAC to suspicious process or gain privilege escalation.,Endpoint Detection and Response
disable_windows_app_hotkeys:This analytic detects a suspicious registry modification to disable Windows hotkey (shortcut keys) for native Windows applications. This technique is commonly used to disable certain or several Windows applications like `taskmgr.exe` and `cmd.exe`. This technique is used to impair the analyst in analyzing and removing the attacker implant in compromised systems.,Endpoint Detection and Response
"disable_windows_behavior_monitoring:This search is to identifies a modification in registry to disable the windows denfender real time behavior monitoring. This event or technique is commonly seen in RAT, bot, or Trojan to disable AV to evade detections.",Endpoint Detection and Response
disable_windows_smartscreen_protection:The following search identifies a modification of registry to disable the smartscreen protection of windows machine. This is windows feature provide an early warning system against website that might engage in phishing attack or malware distribution. This modification are seen in RAT malware to cover their tracks upon downloading other of its component or other payload.,Endpoint Detection and Response
"disabling_cmd_application:this search is to identify modification in registry to disable cmd prompt application. This technique is commonly seen in RAT, Trojan or WORM to prevent triaging or deleting there samples through cmd application which is one of the tool of analyst to traverse on directory and files.",Endpoint Detection and Response
"disabling_controlpanel:this search is to identify registry modification to disable control panel window. This technique is commonly seen in malware to prevent their artifacts , persistence removed on the infected machine.",Endpoint Detection and Response
"disabling_defender_services:This particular behavior is typically executed when an adversaries or malware gains access to an endpoint and beings to perform execution and to evade detections. Usually, a batch (.bat) will be executed and multiple registry and scheduled task modifications will occur. During triage, review parallel processes and identify any further file modifications. Endpoint should be isolated.",Endpoint Detection and Response
disabling_firewall_with_netsh:This search is to identifies suspicious firewall disabling using netsh application. this technique is commonly seen in malware that tries to communicate or download its component or other payload to its C2 server.,Endpoint Detection and Response
"disabling_folderoptions_windows_feature:This search is to identify registry modification to disable folder options feature of windows to show hidden files, file extension and etc. This technique used by malware in combination if disabling show hidden files feature to hide their files and also to hide the file extension to lure the user base on file icons or fake file extensions.",Endpoint Detection and Response
disabling_net_user_account:This analytic will identify a suspicious command-line that disables a user account using the `net.exe` utility native to Windows. This technique may used by the adversaries to interrupt availability of such users to do their malicious act.,Endpoint Detection and Response
disabling_norun_windows_app:This search is to identify modification of registry to disable run application in window start menu. this application is known to be a helpful shortcut to windows OS user to run known application and also to execute some reg or batch script. This technique is used malware to make cleaning of its infection more harder by preventing known application run easily through run shortcut.,Endpoint Detection and Response
disabling_remote_user_account_control:The search looks for modifications to registry keys that control the enforcement of Windows User Account Control (UAC).,Endpoint Detection and Response
disabling_systemrestore_in_registry:The following search identifies the modification of registry related in disabling the system restore of a machine. This event or behavior are seen in some RAT malware to make the restore of the infected machine  difficult and keep their infection on the box.,Endpoint Detection and Response
"disabling_task_manager:This search is to identifies modification of registry to disable the task manager of windows operating system. this event or technique are commonly seen in malware such as RAT, Trojan, TrojanSpy or worm to prevent the user to terminate their process.",Endpoint Detection and Response
disabling_windows_local_security_authority_defences_via_registry:This detection looks for the deletion of registry keys which disable LSA protection and MS Defender Device Guard.,Endpoint Detection and Response
"dllhost_with_no_command_line_arguments_with_network:The following analytic identifies DLLHost.exe with no command line arguments with a network connection. It is unusual for DLLHost.exe to execute with no command line arguments present. This particular behavior is common with malicious software, including Cobalt Strike. During investigation, triage any network connections and parallel processes. Identify any suspicious module loads related to credential dumping or file writes. DLLHost.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.","DNS Global Load Balancer
Endpoint Detection and Response
Application Load Balancer
Network Communication"
"dns_exfiltration_using_nslookup_app:this search is to detect potential DNS exfiltration using nslookup application. This technique are seen in couple of malware and APT group to exfiltrated collected data in a infected machine or infected network. This detection is looking for unique use of nslookup where it tries to use specific record type, TXT, A, AAAA, that are commonly used by attacker and also the retry parameter which is designed to query C2 DNS multiple tries.",Endpoint Detection and Response
"dns_query_length_with_high_standard_deviation:This search allows you to identify DNS requests and compute the standard deviation on the length of the names being resolved, then filter on two times the standard deviation to show you those queries that are unusually large for your environment.",DNS
dns_query_requests_resolved_by_unauthorized_dns_servers:This search will detect DNS requests resolved by unauthorized DNS servers. Legitimate DNS servers should be identified in the Enterprise Security Assets and Identity Framework.,DNS
dns_record_changed:The search takes the DNS records and their answers results of the discovered_dns_records lookup and finds if any records have changed by searching DNS response from the Network_Resolution datamodel across the last day.,DNS
domain_account_discovery_with_dsquery:This analytic looks for the execution of `dsquery.exe` with command-line arguments utilized to discover  domain users. The `user` argument returns a list of all users registered in the domain. Red Teams and adversaries alike engage in remote system discovery for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
domain_account_discovery_with_net_app:This analytic looks for the execution of `net.exe` or `net1.exe` with command-line arguments utilized to query for domain users. Red Teams and adversaries alike may use net.exe to enumerate domain users for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
domain_account_discovery_with_wmic:This analytic looks for the execution of `wmic.exe` with command-line arguments utilized to query for domain users. Red Teams and adversaries alike use wmic.exe to enumerate domain users for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
"domain_controller_discovery_with_nltest:This analytic looks for the execution of `nltest.exe` with command-line arguments utilized to discover remote systems. The arguments `/dclist:` and '/dsgetdc:', can be used to return a list of all domain controllers. Red Teams and adversaries alike may use nltest.exe to identify domain controllers in a Windows Domain for situational awareness and Active Directory Discovery.",Endpoint Detection and Response
domain_controller_discovery_with_wmic:This analytic looks for the execution of `wmic.exe` with command-line arguments utilized to discover remote systems. The arguments utilized in this command line return a list of all domain controllers in a Windows domain. Red Teams and adversaries alike use *.exe to identify remote systems for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
domain_group_discovery_with_adsisearcher:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the `[Adsisearcher]` type accelerator being used to query Active Directory for domain groups. Red Teams and adversaries may leverage `[Adsisearcher]` to enumerate domain groups for situational awareness and Active Directory Discovery.,Windows Security
"domain_group_discovery_with_dsquery:This analytic looks for the execution of `dsquery.exe` with command-line arguments utilized to query for domain groups. The argument `group`, returns a list of all domain groups. Red Teams and adversaries alike use may leverage dsquery.exe to enumerate domain groups for situational awareness and Active Directory Discovery.",Endpoint Detection and Response
"domain_group_discovery_with_net:This analytic looks for the execution of `net.exe` with command-line arguments utilized to query for domain groups. The argument `group /domain`, returns a list of all domain groups. Red Teams and adversaries alike use net.exe to enumerate domain groups for situational awareness and Active Directory Discovery.",Endpoint Detection and Response
domain_group_discovery_with_wmic:This analytic looks for the execution of `wmic.exe` with command-line arguments utilized to query for domain groups. The arguments utilized in this command return a list of all domain groups. Red Teams and adversaries alike use wmic.exe to enumerate domain groups for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
"download_files_using_telegram:The following analytic will identify a suspicious download by the Telegram application on a Windows system. This behavior was identified on a honeypot where the adversary gained access, installed Telegram and followed through with downloading different network scanners (port, bruteforcer, masscan) to the system and later used to mapped the whole network and further move laterally.",Microsoft Sysmon Logs
"drop_icedid_license_dat:This search is to detect dropping a suspicious file named as ""license.dat"" in %appdata%. This behavior seen in latest IcedID malware that contain the actual core bot that will be injected in other process to do banking stealing.",Microsoft Sysmon Logs
"dsquery_domain_discovery:The following analytic identifies ""dsquery.exe"" execution with arguments looking for `TrustedDomain` query directly on the command-line. This is typically indicative of an Administrator or adversary perform domain trust discovery. Note that this query does not identify any other variations of ""Dsquery.exe"" usage.\Within this detection, it is assumed `dsquery.exe` is not moved or renamed.\The search will return the first time and last time these command-line arguments were used for these executions, as well as the target system, the user, process ""dsquery.exe"" and its parent process.\DSQuery.exe is natively found in `C:\Windows\system32` and `C:\Windows\syswow64` and only on Server operating system.\The following DLL(s) are loaded when DSQuery.exe is launched `dsquery.dll`. If found loaded by another process, it is possible dsquery is running within that process context in memory.\In addition to trust discovery, review parallel processes for additional behaviors performed. Identify the parent process and capture any files (batch files, for example) being used.",Endpoint Detection and Response
dump_lsass_via_comsvcs_dll:Detect the usage of comsvcs.dll for dumping the lsass process.,Endpoint Detection and Response
"dump_lsass_via_procdump:Detect procdump.exe dumping the lsass process. This query looks for both -mm and -ma usage. -mm will produce a mini dump file and -ma will write a dump file with all process memory. Both are highly suspect and should be reviewed. This query does not monitor for the internal name (original_file_name=procdump) of the PE or look for procdump64.exe. Modify the query as needed.\During triage, confirm this is procdump.exe executing. If it is the first time a Sysinternals utility has been ran, it is possible there will be a -accepteula on the command line. Review other endpoint data sources for cross process (injection) into lsass.exe.",Endpoint Detection and Response
"dump_lsass_via_procdump_rename:Detect a renamed instance of procdump.exe dumping the lsass process. This query looks for both -mm and -ma usage. -mm will produce a mini dump file and -ma will write a dump file with all process memory. Both are highly suspect and should be reviewed. Modify the query as needed.\During triage, confirm this is procdump.exe executing. If it is the first time a Sysinternals utility has been ran, it is possible there will be a -accepteula on the command line. Review other endpoint data sources for cross process (injection) into lsass.exe.",Microsoft Sysmon Logs
ec2_instance_modified_with_previously_unseen_user:This search looks for EC2 instances being modified by users who have not previously modified them. This search is deprecated and have been translated to use the latest Change Datamodel.,AWS
ec2_instance_started_in_previously_unseen_region:This search looks for AWS CloudTrail events where an instance is started in a particular region in the last one hour and then compares it to a lookup file of previously seen regions where an instance was started,AWS
ec2_instance_started_with_previously_unseen_ami:This search looks for EC2 instances being created with previously unseen AMIs.  This search is deprecated and have been translated to use the latest Change Datamodel.,AWS
ec2_instance_started_with_previously_unseen_instance_type:This search looks for EC2 instances being created with previously unseen instance types.  This search is deprecated and have been translated to use the latest Change Datamodel.,AWS
ec2_instance_started_with_previously_unseen_user:This search looks for EC2 instances being created by users who have not created them before. This search is deprecated and have been translated to use the latest Change Datamodel.,AWS
elevated_group_discovery_with_net:This analytic looks for the execution of `net.exe` or `net1.exe`  with command-line arguments utilized to query for specific elevated domain groups. Red Teams and adversaries alike use net.exe to enumerate elevated domain groups for situational awareness and Active Directory Discovery to identify high privileged users.,Endpoint Detection and Response
"elevated_group_discovery_with_powerview:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `Get-DomainGroupMember` commandlet. `Get-DomainGroupMember` is part of PowerView, a PowerShell tool used to perform enumeration on Windows domains. As the name suggests, `Get-DomainGroupMember` is used to list the members of an specific domain group. Red Teams and adversaries alike use PowerView to enumerate elevated domain groups for situational awareness and Active Directory Discovery to identify high privileged users.",Windows Security
elevated_group_discovery_with_wmic:This analytic looks for the execution of `wmic.exe` with command-line arguments utilized to query for specific domain groups. Red Teams and adversaries alike use net.exe to enumerate elevated domain groups for situational awareness and Active Directory Discovery to identify high privileged users.,Endpoint Detection and Response
email_attachments_with_lots_of_spaces:Attackers often use spaces as a means to obfuscate an attachment's file extension. This search looks for messages with email attachments that have many spaces within the file names.,Email
email_files_written_outside_of_the_outlook_directory:The search looks at the change-analysis data model and detects email files created outside the normal Outlook directory.,Endpoint Detection and Response
email_servers_sending_high_volume_traffic_to_hosts:This search looks for an increase of data transfers from your email server to your clients. This could be indicative of a malicious actor collecting data using your email server.,Network Communication
enable_rdp_in_other_port_number:This search is to detect a modification to registry to enable rdp to a machine with different port number. This technique was seen in some atttacker tries to do lateral movement and remote access to a compromised machine to gain control of it.,Endpoint Detection and Response
enable_wdigest_uselogoncredential_registry:This analytic is to detect a suspicious registry modification to enable plain text credential feature of windows. This technique was used by several malware and also by mimikatz to be able to dumpe the a plain text credential to the compromised or target host. This TTP is really a good indicator that someone wants to dump the crendential of the host so it must be a good pivot for credential dumping techniques.,Endpoint Detection and Response
enumerate_users_local_group_using_telegram:This analytic will detect a suspicious Telegram process enumerating all network users in a local group. This technique was seen in a Monero infected honeypot to mapped all the users on the compromised system. EventCode 4798 is generated when a process enumerates a user's security-enabled local groups on a computer or device.,Windows Security
"esentutl_sam_copy:The following analytic identifies the process - `esentutl.exe` - being used to capture credentials stored in ntds.dit or the SAM file on disk. During triage, review parallel processes and determine if legitimate activity. Upon determination of illegitimate activity, take further action to isolate and contain the threat.",Endpoint Detection and Response
etw_registry_disabled:This analytic is to detect a registry modification to disable ETW feature of windows. This technique is to evade EDR appliance to evade detections and hide its execution from audit logs.,Endpoint Detection and Response
"eventvwr_uac_bypass:The following search identifies Eventvwr bypass by identifying the registry modification into a specific path that eventvwr.msc looks to (but is not valid) upon execution. A successful attack will include a suspicious command to be executed upon eventvwr.msc loading. Upon triage, review the parallel processes that have executed. Identify any additional registry modifications on the endpoint that may look suspicious. Remediate as necessary.",Endpoint Detection and Response
"excel_spawning_powershell:The following detection identifies Microsoft Excel spawning PowerShell. Typically, this is not common behavior and not default with Excel.exe. Excel.exe will generally be found in the following path `C:\Program Files\Microsoft Office\root\Office16` (version will vary). PowerShell spawning from Excel.exe is common for a spearphishing attachment and is actively used. Albeit, the command executed will most likely be encoded and captured via another detection. During triage, review parallel processes and identify any files that may have been written.",Endpoint Detection and Response
"excel_spawning_windows_script_host:The following detection identifies Microsoft Excel spawning Windows Script Host - `cscript.exe` or `wscript.exe`. Typically, this is not common behavior and not default with Excel.exe. Excel.exe will generally be found in the following path `C:\Program Files\Microsoft Office\root\Office16` (version will vary). `cscript.exe` or `wscript.exe` default location is `c:\windows\system32\` or c:windows\syswow64`. `cscript.exe` or `wscript.exe` spawning from Excel.exe is common for a spearphishing attachment and is actively used. Albeit, the command-line executed will most likely be obfuscated and captured via another detection. During triage, review parallel processes and identify any files that may have been written. Review the reputation of the remote destination and block accordingly.",Endpoint Detection and Response
excessive_attempt_to_disable_services:This analytic will identify suspicious series of command-line to disable several services. This technique is seen where the adversary attempts to disable security app services or other malware services to complete the objective on the compromised system.,Endpoint Detection and Response
excessive_distinct_processes_from_windows_temp:This analytic will identify suspicious series of process executions.  We have observed that post exploit framework tools like Koadic and Meterpreter will launch an excessive number of processes with distinct file paths from Windows\Temp to execute actions on objective.  This behavior is extremely anomalous compared to typical application behaviors that use Windows\Temp.,Endpoint Detection and Response
excessive_dns_queries:Alerts when a host starts sending excessive DNS queries,DNS
excessive_failed_logins:Detects excessive number of failed login attempts (this is likely a brute force attack),Authentication
excessive_file_deletion_in_windefender_folder:This analytic will identify excessive file deletion events in the Windows Defender folder. This technique was seen in the WhisperGate malware campaign in which adversaries abused Nirsofts advancedrun.exe to gain administrative privilege to then execute PowerShell commands to delete files within the Windows Defender application folder. This behavior is a good indicator the offending process is trying to corrupt a Windows Defender installation.,Microsoft Sysmon Logs
excessive_http_failure_responses:Alerts when a host generates a lot of HTTP failures in a short span of time,Web Server
"excessive_number_of_service_control_start_as_disabled:This detection targets behaviors observed when threat actors have used sc.exe to modify services. We observed malware in a honey pot spawning numerous sc.exe processes in a short period of time, presumably to impair defenses, possibly to block others from compromising the same machine.  This detection will alert when we see both an excessive number of sc.exe processes launched with specific commandline arguments to disable the start of certain services.",Endpoint Detection and Response
"excessive_number_of_taskhost_processes:This detection targets behaviors observed in post exploit kits like Meterpreter and Koadic that are run in memory.  We have observed that these tools must invoke an excessive number of taskhost.exe and taskhostex.exe processes to complete various actions (discovery, lateral movement, etc.).  It is extremely uncommon in the course of normal operations to see so many distinct taskhost and taskhostex processes running concurrently in a short time frame.",Endpoint Detection and Response
excessive_service_stop_attempt:This analytic identifies suspicious series of attempt to kill multiple services on a system using either `net.exe` or `sc.exe`. This technique is use by adversaries to terminate security services or other related services to continue there objective and evade detections.,Endpoint Detection and Response
"excessive_usage_of_cacls_app:The following analytic identifies excessive usage of `cacls.exe`, `xcacls.exe` or `icacls.exe` application to change file or folder permission. This behavior is commonly seen where the adversary attempts to impair some users from deleting or accessing its malware components or artifact from the compromised system.",Endpoint Detection and Response
"excessive_usage_of_net_app:This analytic identifies excessive usage of `net.exe` or `net1.exe` within a bucket of time (1 minute). This behavior was seen in a Monero incident where the adversary attempts to create many users, delete and disable users as part of its malicious behavior.",Endpoint Detection and Response
"excessive_usage_of_nslookup_app:This search is to detect potential DNS exfiltration using nslookup application. This technique are seen in couple of malware and APT group to exfiltrated collected data in a infected machine or infected network. This detection is looking for unique use of nslookup where it tries to use specific record type (TXT, A, AAAA) that are commonly used by attacker and also the retry parameter which is designed to query C2 DNS multiple tries.",Microsoft Sysmon Logs
"excessive_usage_of_sc_service_utility:This search is to detect a suspicious excessive usage of sc.exe in a host machine. This technique was seen in several ransomware , xmrig and other malware to create, modify, delete or disable a service may related to security application or to gain privilege escalation.",Microsoft Sysmon Logs
excessive_usage_of_taskkill:This analytic identifies excessive usage of `taskkill.exe` application. This application is commonly used by adversaries to evade detections by killing security product processes or even other processes to evade detection.,Endpoint Detection and Response
"exchange_powershell_abuse_via_ssrf:This analytic identifies suspicious behavior related to ProxyShell against on-premise Microsoft Exchange servers. This analytic has been replaced by GUID d436f9e7-0ee7-4a47-864b-6dea2c4e2752 which utilizes the Web Datamodel. \Modification of this analytic is requried to ensure fields are mapped accordingly. \A suspicious event will have `PowerShell`, the method `POST` and `autodiscover.json`. This is indicative of accessing PowerShell on the back end of Exchange with SSRF. \An event will look similar to `POST /autodiscover/autodiscover.json a=dsxvu@fnsso.flq/powershell/?X-Rps-CAT=VgEAVAdXaW5kb3d...` (abbreviated) \Review the source attempting to perform this activity against your environment. In addition, review PowerShell logs and access recently granted to Exchange roles.",Microsoft IIS Logs
"exchange_powershell_module_usage:The following analytic identifies the usage of Exchange PowerShell modules that were recently used for a proof of concept related to ProxyShell. Adversaries may abuse a limited set of PwSh Modules related to Exchange once gained access via ProxyShell or ProxyNotShell.\Inherently, the usage of the modules is not malicious, but reviewing parallel processes, and user, of the session will assist with determining the intent. \Module - New-MailboxExportRequest will begin the process of exporting contents of a primary mailbox or archive to a .pst file. \Module - New-managementroleassignment can assign a management role to a management role group, management role assignment policy, user, or universal security group (USG). \Module - New-MailboxSearch cmdlet to create a mailbox search and either get an estimate of search results, place search results on In-Place Hold or copy them to a Discovery mailbox. You can also place all contents in a mailbox on hold by not specifying a search query, which accomplishes similar results as Litigation Hold. \ Module - Get-Recipient cmdlet to view existing recipient objects in your organization. This cmdlet returns all mail-enabled objects (for example, mailboxes, mail users, mail contacts, and distribution groups).",Windows Security
"executable_file_written_in_administrative_smb_share:The following analytic identifies executable files (.exe or .dll) being written to Windows administrative SMB shares (Admin$, IPC$, C$). This represents suspicious behavior as its commonly used by tools like PsExec/PaExec and others to stage service binaries before creating and starting a Windows service on remote endpoints. Red Teams and adversaries alike may abuse administrative shares for lateral movement and remote code execution. The Trickbot malware family also implements this behavior to try to infect other machines in the infected network.",Windows Security
executables_or_script_creation_in_suspicious_path:This analytic will identify suspicious executable or scripts (known file extensions) in a list of suspicious file paths in Windows. This technique is used by adversaries to evade detection. The suspicious file path are known paths used in the wild and are not common to have executable or scripts.,Endpoint Detection and Response
execute_javascript_with_jscript_com_clsid:This analytic will identify suspicious process of cscript.exe where it tries to execute javascript using jscript.encode CLSID (COM OBJ). This technique was seen in ransomware (reddot ransomware) where it execute javascript with this com object with combination of amsi disabling technique.,Endpoint Detection and Response
"execution_of_file_with_multiple_extensions:This search looks for processes launched from files that have double extensions in the file name. This is typically done to obscure the ""real"" file extension and make it appear as though the file being accessed is a data file, as opposed to executable content.",Endpoint Detection and Response
execution_of_file_with_spaces_before_extension:This search looks for processes launched from files with at least five spaces in the name before the extension. This is typically done to obfuscate the file extension by pushing it outside of the default view.,Endpoint Detection and Response
expected_host_not_reporting:Discovers hosts that are longer reporting events but should be submitting log events. This rule is used to monitor hosts that you know should be providing a constant stream of logs in order to determine why the host has failed to provide log data.,Any Splunk Logs
"exploit_public_facing_application_via_apache_commons_text:The following analytic identifies activity related to Text4Shell, or the critical vulnerability CVE-2022-42889 in Apache Commons Text Library. Apache Commons Text versions 1.5 through 1.9 are affected, but it has been patched in version 1.10. The analytic may need to be tuned for your environment before enabling as a TTP, or direct Notable. Apache Commons Text is a Java library described as a library focused on algorithms working on strings. We can see it as a general-purpose text manipulation toolkit. This vulnerability affects the StringSubstitutor interpolator class, which is included in the Commons Text library. A default interpolator allows for string lookups that can lead to Remote Code Execution. This is due to a logic flaw that makes the script, dns, and url lookup keys interpolated by default, as opposed to what it should be, according to the documentation of the StringLookupFactory class. Those keys allow an attacker to execute arbitrary code via lookups.","Web Server
Web Proxy"
extended_period_without_successful_netbackup_backups:This search returns a list of hosts that have not successfully completed a backup in over a week. Deprecated because it's a infrastructure monitoring.,Backup
"extraction_of_registry_hives:The following analytic identifies the use of `reg.exe` exporting Windows Registry hives containing credentials. Adversaries may use this technique to export registry hives for offline credential access attacks. Typically found executed from a untrusted process or script. Upon execution, a file will be written to disk.",Endpoint Detection and Response
file_with_samsam_extension:The search looks for file writes with extensions consistent with a SamSam ransomware attack.,Endpoint Detection and Response
firewall_allowed_program_enable:This analytic detects a potential suspicious modification of firewall rule allowing to execute specific application. This technique was identified when an adversary and red teams to bypassed firewall file execution restriction in a targetted host. Take note that this event or command can run by administrator during testing or allowing legitimate tool or application.,Endpoint Detection and Response
first_time_seen_child_process_of_zoom:This search looks for child processes spawned by zoom.exe or zoom.us that has not previously been seen.,Endpoint Detection and Response
first_time_seen_command_line_argument:This search looks for command-line arguments that use a `/c` parameter to execute a command that has not previously been seen.,Endpoint Detection and Response
first_time_seen_running_windows_service:This search looks for the first and last time a Windows service is seen running in your environment. This table is then cached.,Microsoft System EventLog
"flight_risk_email:<p>This search implements several heuristics to look for indications that a user is a flight risk. While most savvy employees will use a personal email address when emailing competitors, everyone in Security has some story of employees who don't, as it will happen. Detect when it does.</p>",Email
"flight_risk_printing:<p>This search implements two heuristics to look for indications that a user is a flight risk. Many people will print offer letters, drafts of their resume, or related docs on the work environment (for convenience, or because they don't have a printer at home). Detect when that happens.</p>",User Activity Audit
flight_risk_user_browsing:<p>This search implements several heuristics to look for indications that a user is a flight risk from Web Logs. Detect a user who may be leaving before they do.</p>,Web Proxy
"fodhelper_uac_bypass:Fodhelper.exe has a known UAC bypass as it attempts to look for specific registry keys upon execution, that do not exist. Therefore, an attacker can write its malicious commands in these registry keys to be executed by fodhelper.exe with the highest privilege. \1. `HKCU:\Software\Classes\ms-settings\shell\open\command`\1. `HKCU:\Software\Classes\ms-settings\shell\open\command\DelegateExecute`\1. `HKCU:\Software\Classes\ms-settings\shell\open\command\(default)`\Upon triage, fodhelper.exe will have a child process and read access will occur on the registry keys. Isolate the endpoint and review parallel processes for additional behavior.",Endpoint Detection and Response
"fortinet_appliance_auth_bypass:CVE-2022-40684 is a Fortinet appliance auth bypass that is actively being exploited and a POC is released publicy. The POC adds a SSH key to the appliance. Note that the exploit can be used with any HTTP method (GET, POST, PUT, DELETE, etc). The REST API request failing is not an indication that an attacker was unsuccessful. Horizon3 was able to modify the admin SSH keys though a REST API request that reportedly failed. The collection /api/v2/ endpoints can be used to configure the system and modify the administrator user. Any logs found that meet the above conditions and also have a URL containing /api/v2/ should be cause for concern. Further investigation of any matching log entries can reveal any damage an attack has done. Additionally, an attacker may perform the following actions to further compromise a system Modify the admin SSH key to enable the attacker to login to the compromised system. \Add new local users. \Update networking configurations to reroute traffic. \Download the system configuration. \Initiate packet captures to capture other sensitive system information. Reference Horizon3.ai","Web Server
Web Proxy"
fsutil_zeroing_file:This search is to detect a suspicious fsutil process to zeroing a target file. This technique was seen in lockbit ransomware where it tries to zero out its malware path as part of its defense evasion after encrypting the compromised host.,Endpoint Detection and Response
gcp_authentication_failed_during_mfa_challenge:The following analytic identifies an authentication attempt event against a Google Cloud Platform tenant that fails during the Multi Factor Authentication challenge. This behavior may represent an adversary trying to authenticate with compromised credentials for an account that has multi-factor authentication enabled. ,GCP
gcp_detect_accounts_with_high_risk_roles_by_project:This search provides detection of accounts with high risk roles by projects. Compromised accounts with high risk roles can move laterally or even scalate privileges at different projects depending on organization schema.,GCP
gcp_detect_gcploit_framework:This search provides detection of GCPloit exploitation framework. This framework can be used to escalate privileges and move laterally from compromised high privilege accounts.,GCP
gcp_detect_high_risk_permissions_by_resource_and_account:This search provides detection of high risk permissions by resource and accounts. These are permissions that can allow attackers with compromised accounts to move laterally and escalate privileges.,GCP
"gcp_detect_oauth_token_abuse:This search provides detection of possible GCP Oauth token abuse. GCP Oauth token without time limit can be exfiltrated and reused for keeping access sessions alive without further control of authentication, allowing attackers to access and move laterally.",GCP
"gcp_kubernetes_cluster_pod_scan_detection:This search provides information of unauthenticated requests via user agent, and authentication data against Kubernetes cluster's pods",GCP
"gcp_kubernetes_cluster_scan_detection:This search provides information of unauthenticated requests via user agent, and authentication data against Kubernetes cluster",GCP
"gcp_multiple_failed_mfa_requests_for_user:The following analytic identifies multiple failed multi-factor authentication requests for a single user within a Google Cloud Platform tenant. Specifically, the analytic triggers when 10 or more MFA user prompts fail within 5 minutes. Google CLoud tenants can be very different depending on the organization, Security teams should test this detection and customize these arbitrary thresholds. The detected behavior may represent an adversary who has obtained legitimate credentials for a user and continuously repeats login attempts in order to bombard users with MFA push notifications, SMS messages, and phone calls potentially resulting in the user finally accepting the authentication request. Threat actors like the Lapsus team and APT29 have leveraged this technique to bypass multi-factor authentication controls as reported by Mandiant and others.",GCP
gcp_multiple_users_failing_to_authenticate_from_ip:The following analytic identifies one source Ip failing to authenticate into the Google Workspace user accounts with more than 20 unique valid users within 5 minutes. These user accounts may have other privileges with respect to access to other sensitive resources in the Google Cloud Platform. This behavior could represent an adversary performing a Password Spraying attack against an Google Workspace environment to obtain initial access or elevate privileges.,GCP
"gcp_unusual_number_of_failed_authentications_from_ip:The following analytic identifies one source IP failing to authenticate into the Google Workspace with multiple valid users. This behavior could represent an adversary performing a Password Spraying attack against a Google Workspace enviroment to obtain initial access or elevate privileges. The detection calculates the standard deviation for source IP and leverages the 3-sigma statistical rule to identify an unusual number of failed authentication attempts. To customize this analytic, users can try different combinations of the bucket span time and the calculation of the upperBound field. This logic can be used for real time security monitoring as well as threat hunting exercises.  While looking for anomalies using statistical methods like the standard deviation can have benefits, we also recommend using threshold-based detections to complement coverage. A similar analytic following the threshold model is `GCP Multiple Users Failing To Authenticate From Ip`",GCP
gdpr_glass_table:Understand and monitor the compliance of API and user connections to systems with sensitive data for GDPR Compliance.,"Application Data
SFDC
User Activity Audit"
gdpr_investigation:Meeting your compliance requirements necessitates being able to investigate breaches. Splunk ES provides you a single place to fully understand attacker activities.,"Anti-Virus or Anti-Malware
Endpoint Detection and Response
Network Communication
Application Data
Authentication
Web Proxy"
gdrive_suspicious_file_sharing:This search can help the detection of compromised accounts or internal users sharing potentially malicious/classified documents with users outside your organization via GSuite file sharing .,Google Gdrive
geographically_improbable_access_detected:Alerts on access attempts that are improbable based on time and geography.,Authentication
get_addefaultdomainpasswordpolicy_with_powershell:This analytic looks for the execution of `powershell.exe` executing the Get-ADDefaultDomainPasswordPolicy commandlet used to obtain the password policy in a Windows domain. Red Teams and adversaries alike may use PowerShell to enumerate domain policies for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
get_addefaultdomainpasswordpolicy_with_powershell_script_block:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `Get-ADDefaultDomainPasswordPolicy` commandlet used to obtain the password policy in a Windows domain. Red Teams and adversaries alike may use PowerShell to enumerate domain policies for situational awareness and Active Directory Discovery.,Windows Security
get_aduser_with_powershell:This analytic looks for the execution of `powershell.exe` with command-line arguments utilized to enumerate domain users. The `Get-AdUser' commandlet returns a list of all domain users. Red Teams and adversaries alike may use this commandlet to identify remote systems for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
get_aduser_with_powershell_script_block:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `Get-AdGUser` commandlet. The `Get-AdUser` commandlet is used to return a list of all domain users. Red Teams and adversaries may leverage this commandlet to enumerate domain groups for situational awareness and Active Directory Discovery.,Windows Security
get_aduserresultantpasswordpolicy_with_powershell:This analytic looks for the execution of `powershell.exe` executing the Get ADUserResultantPasswordPolicy commandlet used to obtain the password policy in a Windows domain. Red Teams and adversaries alike may use PowerShell to enumerate domain policies for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
get_aduserresultantpasswordpolicy_with_powershell_script_block:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `Get-ADUserResultantPasswordPolicy` commandlet used to obtain the password policy in a Windows domain. Red Teams and adversaries alike may use PowerShell to enumerate domain policies for situational awareness and Active Directory Discovery.,Windows Security
get_domainpolicy_with_powershell:This analytic looks for the execution of `powershell.exe` executing the `Get-DomainPolicy` commandlet used to obtain the password policy in a Windows domain. Red Teams and adversaries alike may use PowerShell to enumerate domain policies for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
get_domainpolicy_with_powershell_script_block:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `Get DomainPolicy` commandlet used to obtain the password policy in a Windows domain. Red Teams and adversaries alike may use PowerShell to enumerate domain policies for situational awareness and Active Directory Discovery.,Windows Security
"get_domainuser_with_powershell:This analytic looks for the execution of `powershell.exe` with command-line arguments utilized to enumerate domain users. `Get-DomainUser` is part of PowerView, a PowerShell tool used to perform enumeration on Windows domains. Red Teams and adversaries alike may leverage PowerView to enumerate domain users for situational awareness and Active Directory Discovery.",Endpoint Detection and Response
"get_domainuser_with_powershell_script_block:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `Get-DomainUser` commandlet. `GetDomainUser` is part of PowerView, a PowerShell tool used to perform enumeration on Windows domains. Red Teams and adversaries alike may use PowerView to enumerate domain users for situational awareness and Active Directory Discovery.",Windows Security
"get_wmiobject_group_discovery:The following hunting analytic identifies the use of `Get-WMIObject Win32_Group` being used with PowerShell to identify local groups on the endpoint. \ Typically, by itself, is not malicious but may raise suspicion based on time of day, endpoint and username. \ During triage, review parallel processes and identify any further suspicious behavior.",Endpoint Detection and Response
"get_wmiobject_group_discovery_with_script_block_logging:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable on critical endpoints or all. \This analytic identifies the usage of `Get-WMIObject Win32_Group`, which is typically used as a way to identify groups on the endpoint.  Typically, by itself, is not malicious but may raise suspicion based on time of day, endpoint and username. \During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",Windows Security
getadcomputer_with_powershell:This analytic looks for the execution of `powershell.exe` with command-line arguments utilized to discover remote systems. The `Get-AdComputer' commandlet returns a list of all domain computers. Red Teams and adversaries alike may use this commandlet to identify remote systems for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
getadcomputer_with_powershell_script_block:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `Get-AdGroup` commandlet. The `Get-AdGroup` commandlet is used to return a list of all domain computers. Red Teams and adversaries may leverage this commandlet to enumerate domain computers for situational awareness and Active Directory Discovery.,Windows Security
getadgroup_with_powershell:This analytic looks for the execution of `powershell.exe` with command-line arguments utilized to query for domain groups. The `Get-AdGroup` commandlnet is used to return a list of all groups available in a Windows Domain. Red Teams and adversaries alike may leverage this commandlet to enumerate domain groups for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
getadgroup_with_powershell_script_block:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `Get-AdGroup` commandlet. The `Get-AdGroup` commandlet is used to return a list of all domain groups. Red Teams and adversaries may leverage this commandlet to enumerate domain groups for situational awareness and Active Directory Discovery.,Windows Security
getcurrent_user_with_powershell:This analytic looks for the execution of `powerhsell.exe` with command-line arguments that execute the `GetCurrent` method of the WindowsIdentity .NET class. This method returns an object that represents the current Windows user. Red Teams and adversaries may leverage this method to identify the logged user on a compromised endpoint for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
getcurrent_user_with_powershell_script_block:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `GetCurrent` method of the WindowsIdentity .NET class. This method returns an object that represents the current Windows user. Red Teams and adversaries may leverage this method to identify the logged user on a compromised endpoint for situational awareness and Active Directory Discovery.,Windows Security
"getdomaincomputer_with_powershell:This analytic looks for the execution of `powershell.exe` with command-line arguments utilized to discover remote systems. `Get-DomainComputer` is part of PowerView, a PowerShell tool used to perform enumeration on Windows domains. Red Teams and adversaries alike may leverage PowerView to enumerate domain groups for situational awareness and Active Directory Discovery.",Endpoint Detection and Response
"getdomaincomputer_with_powershell_script_block:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `Get-DomainComputer` commandlet. `GetDomainComputer` is part of PowerView, a PowerShell tool used to perform enumeration on Windows domains. Red Teams and adversaries alike may use PowerView to enumerate domain computers for situational awareness and Active Directory Discovery.",Windows Security
"getdomaincontroller_with_powershell:This analytic looks for the execution of `powershell.exe` with command-line arguments utilized to discover remote systems. `Get-DomainController` is part of PowerView, a PowerShell tool used to perform enumeration on Windows domains. Red Teams and adversaries alike may leverage PowerView to enumerate domain groups for situational awareness and Active Directory Discovery.",Endpoint Detection and Response
"getdomaincontroller_with_powershell_script_block:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `Get-DomainController` commandlet. `Get-DomainController` is part of PowerView, a PowerShell tool used to perform enumeration on Windows domains. Red Teams and adversaries alike may use PowerView to enumerate domain computers for situational awareness and Active Directory Discovery.",Windows Security
"getdomaingroup_with_powershell:This analytic looks for the execution of `powershell.exe` with command-line arguments utilized to query for domain groups. `Get-DomainGroup` is part of PowerView, a PowerShell tool used to perform enumeration on Windows domains. Red Teams and adversaries alike may leverage PowerView to enumerate domain groups for situational awareness and Active Directory Discovery.",Endpoint Detection and Response
"getdomaingroup_with_powershell_script_block:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `Get-DomainGroup` commandlet. `Get-DomainGroup` is part of PowerView, a PowerShell tool used to perform enumeration on Windows domains. As the name suggests, `Get-DomainGroup` is used to query domain groups. Red Teams and adversaries may leverage this function to enumerate domain groups for situational awareness and Active Directory Discovery.",Windows Security
getlocaluser_with_powershell:This analytic looks for the execution of `powershell.exe` with command-line arguments utilized to query for local users. The `Get-LocalUser` commandlet is used to return a list of all local users. Red Teams and adversaries may leverage this commandlet to enumerate users for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
getlocaluser_with_powershell_script_block:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `Get-LocalUser` commandlet. The `Get-LocalUser` commandlet is used to return a list of all local users. Red Teams and adversaries may leverage this commandlet to enumerate users for situational awareness and Active Directory Discovery.,Windows Security
getnettcpconnection_with_powershell:This analytic looks for the execution of `powershell.exe` with command-line utilized to get a listing of network connections on a compromised system. The `Get-NetTcpConnection` commandlet lists the current TCP connections. Red Teams and adversaries alike may use this commandlet for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
getnettcpconnection_with_powershell_script_block:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `Get-NetTcpconnection ` commandlet. This commandlet is used to return a listing of network connections on a compromised system. Red Teams and adversaries alike may use this commandlet for situational awareness and Active Directory Discovery.,Windows Security
"getwmiobject_ds_computer_with_powershell:This analytic looks for the execution of `powershell.exe` with command-line arguments utilized to discover remote systems. The `Get-WmiObject` commandlet combined with the `DS_Computer` parameter can be used to return a list of all domain computers. Red Teams and adversaries alike may leverage WMI in this case, using PowerShell, to enumerate domain groups for situational awareness and Active Directory Discovery.",Endpoint Detection and Response
getwmiobject_ds_computer_with_powershell_script_block:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `Get-WmiObject` commandlet. The `DS_Computer` class parameter leverages WMI to query for all domain computers. Red Teams and adversaries may leverage this commandlet to enumerate domain computers for situational awareness and Active Directory Discovery.,Windows Security
"getwmiobject_ds_group_with_powershell:This analytic looks for the execution of `powershell.exe` with command-line arguments utilized to query for domain groups. The `Get-WmiObject` commandlet combined with the `-class ds_group` parameter can be used to return the full list of groups in a Windows domain. Red Teams and adversaries alike may leverage WMI in this case, using PowerShell, to enumerate domain groups for situational awareness and Active Directory Discovery.",Endpoint Detection and Response
getwmiobject_ds_group_with_powershell_script_block:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `Get-WmiObject` commandlet used with specific parameters . The `DS_Group` parameter leverages WMI to query for all domain groups. Red Teams and adversaries may leverage this commandlet to enumerate domain groups for situational awareness and Active Directory Discovery.,Windows Security
"getwmiobject_ds_user_with_powershell:This analytic looks for the execution of `powershell.exe` with command-line arguments utilized to query for domain users. The `Get-WmiObject` commandlet combined with the `-class ds_user` parameter can be used to return the full list of users in a Windows domain. Red Teams and adversaries alike may leverage WMI in this case, using PowerShell, to enumerate domain users for situational awareness and Active Directory Discovery.",Endpoint Detection and Response
getwmiobject_ds_user_with_powershell_script_block:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `Get-WmiObject` commandlet. The `DS_User` class parameter leverages WMI to query for all domain users. Red Teams and adversaries may leverage this commandlet to enumerate domain users for situational awareness and Active Directory Discovery.,Windows Security
getwmiobject_user_account_with_powershell:This analytic looks for the execution of `powershell.exe` with command-line arguments utilized to query local users. The `Get-WmiObject` commandlet combined with the `Win32_UserAccount` parameter is used to return a list of all local users. Red Teams and adversaries may leverage this commandlet to enumerate users for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
getwmiobject_user_account_with_powershell_script_block:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `Get-WmiObject` commandlet used with specific parameters. The `Win32_UserAccount` parameter is used to return a list of all local users. Red Teams and adversaries may leverage this commandlet to enumerate users for situational awareness and Active Directory Discovery.,Windows Security
github_actions_disable_security_workflow:This search detects a disabled security workflow in GitHub Actions. An attacker can disable a security workflow in GitHub actions to hide malicious code in it.,Web Server
github_commit_changes_in_master:This search is to detect a pushed or commit to master or main branch. This is to avoid unwanted modification to master without a review to the changes. Ideally in terms of devsecops the changes made in a branch and do a PR for review. of course in some cases admin of the project may did a changes directly to master branch,Web Server
github_commit_in_develop:This search is to detect a pushed or commit to develop branch. This is to avoid unwanted modification to develop without a review to the changes. Ideally in terms of devsecops the changes made in a branch and do a PR for review. of course in some cases admin of the project may did a changes directly to master branch,Web Server
github_dependabot_alert:This search looks for Dependabot Alerts in Github logs.,Web Server
github_pull_request_from_unknown_user:This search looks for Pull Request from unknown user.,Web Server
"gpupdate_with_no_command_line_arguments_with_network:The following analytic identifies gpupdate.exe with no command line arguments and with a network connection. It is unusual for gpupdate.exe to execute with no command line arguments present. This particular behavior is common with malicious software, including Cobalt Strike. During investigation, triage any network connections and parallel processes. Identify any suspicious module loads related to credential dumping or file writes. gpupdate.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.","DNS Global Load Balancer
Endpoint Detection and Response
Application Load Balancer
Network Communication"
gsuite_drive_share_in_external_email:This search is to detect suspicious google drive or google docs files shared outside or externally. This behavior might be a good hunting query to monitor exfitration of data made by an attacker or insider to a targetted machine.,Google Gdrive
gsuite_email_suspicious_attachment:This search is to detect a suspicious attachment file extension in Gsuite email that may related to spear phishing attack. This file type is commonly used by malware to lure user to click on it to execute malicious code to compromised targetted machine. But this search can also catch some normal files related to this file type that maybe send by employee or network admin.,Google Gmail
"gsuite_email_suspicious_subject_with_attachment:This search is to detect a gsuite email contains suspicious subject having known file type used in spear phishing. This technique is a common and effective entry vector of attacker to compromise a network by luring the user to click or execute the suspicious attachment send from external email account because of the effective social engineering of subject related to delivery, bank and so on. On the other hand this detection may catch a normal email traffic related to legitimate transaction so better to check the email sender, spelling and etc. avoid click link or opening the attachment if you are not expecting this type of e-mail.",Google Gmail
"gsuite_email_with_known_abuse_web_service_link:This analytics is to detect a gmail containing a link that are known to be abused by malware or attacker like pastebin, telegram and discord to deliver malicious payload. This event can encounter some normal email traffic within organization and external email that normally using this application and services.",Google Gmail
gsuite_outbound_email_with_attachment_to_external_domain:This search is to detect a suspicious outbound e-mail from internal email to external email domain. This can be a good hunting query to monitor insider or outbound email traffic for not common domain e-mail. The idea is to parse the domain of destination email check if there is a minimum outbound traffic < 20 with attachment.,Google Gmail
gsuite_suspicious_calendar_invite:This search can help the detection of compromised accounts or internal users sending suspcious calendar invites via GSuite calendar. These invites may contain malicious links or attachments.,Google Calendar
gsuite_suspicious_shared_file_name:This search is to detect a shared file in google drive with suspicious file name that are commonly used by spear phishing campaign. This technique is very popular to lure the user by running a malicious document or click a malicious link within the shared file that will redirected to malicious website. This detection can also catch some normal email communication between organization and its external customer.,Google Gdrive
"hiding_files_and_directories_with_attrib_exe:Attackers leverage an existing Windows binary, attrib.exe, to mark specific as hidden by using specific flags so that the victim does not see the file.  The search looks for specific command-line arguments to detect the use of attrib.exe to hide files.",Endpoint Detection and Response
high_frequency_copy_of_files_in_network_share:This analytic is to detect a suspicious high frequency copying/moving of files in network share as part of information sabotage. This anomaly event can be a good indicator of insider trying to sabotage data by transfering classified or internal files within network share to exfitrate it after or to lure evidence of insider attack to other user. This behavior may catch several noise if network share is a common place for classified or internal document processing.,Windows Security
high_number_of_hosts_not_updating_malware_signatures:Alerts when a high number of hosts not updating malware signatures have been discovered.  These hosts should be evaluated to determine why they are not updating their malware signatures.,Anti-Virus or Anti-Malware
high_number_of_infected_hosts:Alerts when a high total number of infected hosts is discovered.,Anti-Virus or Anti-Malware
high_number_of_login_failures_from_a_single_source:This search will detect more than 5 login failures in Office365 Azure Active Directory from a single source IP address. Please adjust the threshold value of 5 as suited for your environment.,Azure
high_or_critical_priority_host_with_malware_detected:Alerts when an infection is noted on a host with high or critical priority.,Anti-Virus or Anti-Malware
high_or_critical_priority_individual_logging_into_infected_machine:Detects users with a high or critical priority logging into a malware infected machine,"Anti-Virus or Anti-Malware
Authentication"
high_process_count:Alerts when host has a high number of processes. This may be due to an infection or a runaway process.,Endpoint Detection and Response
"high_process_termination_frequency:This analytic is designed to identify a high frequency of process termination events on a computer in a short period of time, which is a common behavior of ransomware malware before encrypting files. This technique is designed to avoid an exception error while accessing (docs, images, database and etc..) in the infected machine for encryption.",Microsoft Sysmon Logs
high_volume_email_activity_to_noncorporate_domains_by_user:Alerts on high volume email activity by a user to non-corporate domains.,Email
high_volume_of_traffic_from_high_or_critical_host_observed:Alerts when a host of high or critical severity generates a high volume of outbound traffic. This may indicate that the host has been compromised.,Web Proxy
host_sending_excessive_email:Alerts when an host not designated as an e-mail server sends excessive e-mail to one or more target hosts.,Email
host_with_a_recurring_malware_infection:Alerts when a host has an infection that has been re-infected remove multiple times over multiple days.,Anti-Virus or Anti-Malware
host_with_high_number_of_listening_ports:Alerts when host has a high number of listening services. This may be an indication that the device is running services that are not necessary (such as a default installation of a server) or is not running a firewall.,Endpoint Detection and Response
host_with_high_number_of_services:Alerts when host has a high number of services. This may be an indication that the device is running services that are not necessary (such as a default installation of a server).,Endpoint Detection and Response
host_with_multiple_infections:Alerts when a host with multiple infections is discovered.,Anti-Virus or Anti-Malware
host_with_old_infection_or_potential_reinfection:Alerts when a host with an old infection is discovered (likely a re-infection).,Anti-Virus or Anti-Malware
hosts_receiving_high_volume_of_network_traffic_from_email_server:This search looks for an increase of data transfers from your email server to your clients. This could be indicative of a malicious actor collecting data using your email server.,Network Communication
"hunting_3cxdesktopapp_software:The hunting analytic outlined below is designed to detect any version of the 3CXDesktopApp, also known as the 3CX Desktop App, operating on either Mac or Windows systems. It is important to note that this particular analytic employs the Endpoint datamodel Processes node, which means that the file version information is not provided. Recently, 3CX has identified a vulnerability specifically in versions 18.12.407 and 18.12.416 of the desktop app.",Endpoint Detection and Response
hunting_covid_themed_attacks_with_iocs:Leverage open source Theat Intelligence and add COVID related IOCs to Enterprise Security Threat Intelligence Framework.,"Endpoint Detection and Response
Web Proxy
Network Communication"
"hunting_for_log4shell:The following hunting query assists with quickly assessing CVE-2021-44228, or Log4Shell, activity mapped to the Web Datamodel. This is a combination query attempting to identify, score and dashboard. Because the Log4Shell vulnerability requires the string to be in the logs, this will work to identify the activity anywhere in the HTTP headers using _raw. Modify the first line to use the same pattern matching against other log sources. Scoring is based on a simple rubric of 0-5. 5 being the best match, and less than 5 meant to identify additional patterns that will equate to a higher total score. \The first jndi match identifies the standard pattern of `{jndi:` \jndi_fastmatch is meant to identify any jndi in the logs. The score is set low and is meant to be the ""base"" score used later. \jndi_proto is a protocol match that identifies `jndi` and one of `ldap, ldaps, rmi, dns, nis, iiop, corba, nds, http, https.` \all_match is a very well written regex by https://gist.github.com/Schvenn that identifies nearly all patterns of this attack behavior. \env works to identify environment variables in the header, meant to capture `AWS_ACCESS_KEY_ID`, `AWS_SECRET_ACCESS_KEY` and `env`. \uri_detect is string match looking for the common uri paths currently being scanned/abused in the wild. \keywords matches on enumerated values that, like `$ctx:loginId`, that may be found in the header used by the adversary. \lookup matching is meant to catch some basic obfuscation that has been identified using upper, lower and date. \Scoring will then occur based on any findings. The base score is meant to be 2 , created by jndi_fastmatch. Everything else is meant to increase that score. \Finally, a simple table is created to show the scoring and the _raw field. Sort based on score or columns of interest.",Web Proxy
icacls_deny_command:This analytic identifies a potential adversary that changes the security permission of a specific file or directory. This technique is commonly seen in APT tradecraft or coinminer scripts. This behavior is meant to evade detection and prevent access to their component files.,Endpoint Detection and Response
icacls_grant_command:This analytic identifies potential adversaries that modify the security permission of a specific file or directory. This technique is commonly seen in APT tradecraft and coinminer scripts to evade detections and restrict access to their component files.,Endpoint Detection and Response
icedid_exfiltrated_archived_file_creation:This search is to detect a suspicious file creation namely passff.tar and cookie.tar. This files are possible archived of stolen browser information like history and cookies in a compromised machine with IcedID.,Microsoft Sysmon Logs
identify_new_user_accounts:This detection search will help profile user accounts in your environment by identifying newly created accounts that have been added to your network in the past week.,HR System
image_from_new_repository_detected:<p>Detect the presence of an Image created from a Repository not seen in your Kubernetes environment before.</p><p><b>Alert Volume:</b> Low</p>,Kubernetes
"impacket_lateral_movement_commandline_parameters:This analytic looks for the presence of suspicious commandline parameters typically present when using Impacket tools. Impacket is a collection of python classes meant to be used with Microsoft network protocols. There are multiple scripts that leverage impacket libraries like `wmiexec.py`, `smbexec.py`, `dcomexec.py` and `atexec.py` used to execute commands on remote endpoints. By default, these scripts leverage administrative shares and hardcoded parameters that can be used as a signature to detect its use. Red Teams and adversaries alike may leverage Impackets tools for lateral movement and remote code execution.",Endpoint Detection and Response
"impacket_lateral_movement_smbexec_commandline_parameters:This analytic focuses on identifying suspicious command-line parameters commonly associated with the use of Impacket wmiexec.py. Impacket is a set of Python classes designed for working with Microsoft network protocols, and it includes several scripts like wmiexec.py, smbexec.py, dcomexec.py, and atexec.py that enable command execution on remote endpoints. These scripts typically utilize administrative shares and hardcoded parameters, which can serve as signatures to detect their usage. Both Red Teams and adversaries may employ Impacket tools for lateral movement and remote code execution purposes. By monitoring for these specific command-line indicators, the analytic aims to detect potentially malicious activities related to Impacket tool usage.",Endpoint Detection and Response
"impacket_lateral_movement_wmiexec_commandline_parameters:This analytic looks for the presence of suspicious commandline parameters typically present when using Impacket tools. Impacket is a collection of python classes meant to be used with Microsoft network protocols. There are multiple scripts that leverage impacket libraries like `wmiexec.py`, `smbexec.py`, `dcomexec.py` and `atexec.py` used to execute commands on remote endpoints. By default, these scripts leverage administrative shares and hardcoded parameters that can be used as a signature to detect its use. Red Teams and adversaries alike may leverage Impackets tools for lateral movement and remote code execution.",Endpoint Detection and Response
inactive_account_activity_detected:Discovers previously inactive accounts that are now being used. This may be due to an attacker that successfully gained access to an account that was no longer being used.,Authentication
insecure_or_cleartext_authentication_detected:Detects authentication requests that transmit the password over the network as cleartext (unencrypted),Network Communication
integrating_misp_and_splunk_enterprise_security:Integrating COVID (or Any) Threat Indicators from Malware Information Sharing Platform (MISP) in Enterprise Security.,"Endpoint Detection and Response
Web Proxy
Network Communication"
interactive_session_on_remote_endpoint_with_powershell:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the usage of the `Enter-PSSession`. This commandlet can be used to open an interactive session on a remote endpoint leveraging the WinRM protocol. Red Teams and adversaries alike may abuse WinRM and `Enter-PSSession` for lateral movement and remote code execution.,Windows Security
java_class_file_download_by_java_user_agent:The following analytic identifies a Java user agent performing a GET request for a .class file from the remote site. This is potentially indicative of exploitation of the Java application and may be related to current event CVE-2021-44228 (Log4Shell).,"Web Server
Web Proxy"
"java_writing_jsp_file:The following analytic identifies the process java writing a .jsp to disk. This is potentially indicative of a web shell being written to disk. Modify and tune the analytic based on data ingested. For instance, it may be worth running a broad query for jsp file writes first before performing a join.",Endpoint Detection and Response
jscript_execution_using_cscript_app:This search is to detect a execution of jscript using cscript process. Commonly when a user run jscript file it was executed by wscript.exe application. This technique was seen in FIN7 js implant to execute its malicious script using cscript process. This behavior is uncommon and a good artifacts to check further anomalies within the network,Endpoint Detection and Response
"kerberoasting_spn_request_with_rc4_encryption:The following analytic leverages Kerberos Event 4769, A Kerberos service ticket was requested, to identify a potential kerberoasting attack against Active Directory networks. Kerberoasting allows an adversary to request kerberos tickets for domain accounts typically used as service accounts and attempt to crack them offline allowing them to obtain privileged access to the domain. This analytic looks for a specific combination of the Ticket_Options field based on common kerberoasting tools. Defenders should be aware that it may be possible for a Kerberoast attack to use different Ticket_Options.",Windows Security
"kerberos_service_ticket_request_using_rc4_encryption:The following analytic leverages Kerberos Event 4769, A Kerberos service ticket was requested, to identify a potential Kerberos Service Ticket request related to a Golden Ticket attack. Adversaries who have obtained the Krbtgt account NTLM password hash may forge a Kerberos Granting Ticket (TGT) to obtain unrestricted access to an Active Directory environment. Armed with a Golden Ticket, attackers can request service tickets to move laterally and execute code on remote systems. Looking for Kerberos Service Ticket requests using the legacy RC4 encryption mechanism could represent the second stage of a Golden Ticket attack. RC4 usage should be rare on a modern network since Windows Vista & Windows Sever 2008 and newer support AES Kerberos encryption.\ Defenders should note that if an attacker does not leverage the NTLM password hash but rather the AES key to create a golden ticket, this detection may be bypassed.",Windows Security
"kerberos_tgt_request_using_rc4_encryption:The following analytic leverages Event 4768, A Kerberos authentication ticket (TGT) was requested, to identify a TGT request with encryption type 0x17, or RC4-HMAC. This encryption type is no longer utilized by newer systems and could represent evidence of an OverPass The Hash attack. Similar to Pass The Hash, OverPass The Hash is a form of credential theft that allows adversaries to move laterally or consume resources in a target network. Leveraging this attack, an adversary who has stolen the NTLM hash of a valid domain account is able to authenticate to the Kerberos Distribution Center(KDC) on behalf of the legitimate account and obtain a Kerberos TGT ticket. Depending on the privileges of the compromised account, this ticket may be used to obtain unauthorized access to systems and other network resources.",Windows Security
"kerberos_user_enumeration:The following analytic leverages Event Id 4768, A Kerberos authentication ticket (TGT) was requested, to identify one source endpoint trying to obtain an unusual number Kerberos TGT ticket for non existing users. This behavior could represent an adversary abusing the Kerberos protocol to perform a user enumeration attack against an Active Directory environment. When Kerberos is sent a TGT request with no preauthentication for an invalid username, it responds with KRB5KDC_ERR_C_PRINCIPAL_UNKNOWN or 0x6. Red teams and adversaries alike may abuse the Kerberos protocol to validate a list of users use them to perform further attacks.\ The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual number requests. To customize this analytic, users can try different combinations of the `bucket` span time and the calculation of the `upperBound` field.",Windows Security
known_services_killed_by_ransomware:This search detects a suspicioous termination of known services killed by ransomware before encrypting files in a compromised machine. This technique is commonly seen in most of ransomware now a days to avoid exception error while accessing the targetted files it wants to encrypts because of the open handle of those services to the targetted file.,Microsoft System EventLog
"kubernetes_aws_detect_most_active_service_accounts_by_pod:This search provides information on Kubernetes service accounts,accessing pods by IP address, verb and decision",AWS
"kubernetes_aws_detect_rbac_authorization_by_account:This search provides information on Kubernetes RBAC authorizations by accounts, this search can be modified by adding top to see both extremes of RBAC by accounts occurrences",AWS
kubernetes_aws_detect_sensitive_role_access:This search provides information on Kubernetes accounts accessing sensitve objects such as configmpas or secrets,AWS
"kubernetes_aws_detect_service_accounts_forbidden_failure_access:This search provides information on Kubernetes service accounts with failure or forbidden access status, this search can be extended by using top or rare operators to find trends or rarities in failure status, user agents, source IPs and request URI",AWS
"kubernetes_aws_detect_suspicious_kubectl_calls:This search provides information on anonymous Kubectl calls with IP, verb namespace and object access context",AWS
"kubernetes_azure_active_service_accounts_by_pod_namespace:This search provides information on Kubernetes service accounts,accessing pods and namespaces by IP address and verb",Azure
"kubernetes_azure_detect_rbac_authorization_by_account:This search provides information on Kubernetes RBAC authorizations by accounts, this search can be modified by adding rare or top to see both extremes of RBAC by accounts occurrences",Azure
kubernetes_azure_detect_sensitive_object_access:This search provides information on Kubernetes accounts accessing sensitve objects such as configmpas or secrets,Azure
kubernetes_azure_detect_sensitive_role_access:This search provides information on Kubernetes accounts accessing sensitve objects such as configmpas or secrets,Azure
kubernetes_azure_detect_service_accounts_forbidden_failure_access:This search provides information on Kubernetes service accounts with failure or forbidden access status,Azure
"kubernetes_azure_detect_suspicious_kubectl_calls:This search provides information on rare Kubectl calls with IP, verb namespace and object access context",Azure
"kubernetes_azure_pod_scan_fingerprint:This search provides information of unauthenticated requests via source IP user agent, request URI and response status data against Kubernetes cluster pod in Azure",Azure
"kubernetes_azure_scan_fingerprint:This search provides information of unauthenticated requests via source IP user agent, request URI and response status data against Kubernetes cluster in Azure",Azure
"kubernetes_gcp_detect_most_active_service_accounts_by_pod:This search provides information on Kubernetes service accounts,accessing pods by IP address, verb and decision",GCP
"kubernetes_gcp_detect_rbac_authorizations_by_account:This search provides information on Kubernetes RBAC authorizations by accounts, this search can be modified by adding top to see both extremes of RBAC by accounts occurrences",GCP
kubernetes_gcp_detect_sensitive_object_access:This search provides information on Kubernetes accounts accessing sensitve objects such as configmaps or secrets,GCP
kubernetes_gcp_detect_sensitive_role_access:This search provides information on Kubernetes accounts accessing sensitve objects such as configmpas or secrets,GCP
"kubernetes_gcp_detect_service_accounts_forbidden_failure_access:This search provides information on Kubernetes service accounts with failure or forbidden access status, this search can be extended by using top or rare operators to find trends or rarities in failure status, user agents, source IPs and request URI",GCP
"kubernetes_gcp_detect_suspicious_kubectl_calls:This search provides information on anonymous Kubectl calls with IP, verb namespace and object access context",GCP
kubernetes_nginx_ingress_lfi:This search uses the Kubernetes logs from a nginx ingress controller to detect local file inclusion attacks.,Kubernetes
kubernetes_nginx_ingress_rfi:This search uses the Kubernetes logs from a nginx ingress controller to detect remote file inclusion attacks.,Kubernetes
kubernetes_scanner_image_pulling:This search uses the Kubernetes logs from Splunk Connect from Kubernetes to detect Kubernetes Security Scanner.,Kubernetes
"land_speed_privileged:Detecting when the same account is logged into twice in a short period of time but from locations very far away, is key to finding account compromise or account credential sharing for your privileged accounts.","AWS
SFDC
Authentication"
large_volume_of_dns_any_queries:The search is used to identify attempts to use your DNS Infrastructure for DDoS purposes via a DNS amplification attack leveraging ANY queries.,DNS
"large_web_upload:Uses a basic threshold to detect a large web upload, which could be exfiltration from malware or a malicious insider.",Web Proxy
linux_account_manipulation_of_ssh_config_and_keys:This analytic is to detect a deletion of ssh key in a linux machine. attacker may delete or modify ssh key to impair some security features or act as defense evasion in compromised linux machine. This Anomaly can be also a good indicator of a malware trying to wipe or delete several files in a compromised host as part of its destructive payload like what acidrain malware does in linux or router machines. This detection can be a good pivot to check what process and user tries to delete this type of files which is not so common and need further investigation.,Endpoint Detection and Response
"linux_add_files_in_known_crontab_directories:The following analytic identifies a suspicious file creation in known cron table directories. This event is commonly abuse by malware, adversaries and red teamers to persist on the target or compromised host. crontab or cronjob is like a schedule task in windows environment where you can create an executable or script on the known crontab directories to run it base on its schedule. This Anomaly query is a good indicator to look further what file is added and who added the file if to consider it legitimate file.",Endpoint Detection and Response
"linux_add_user_account:This analytic looks for commands to create user accounts on the linux platform. This technique is commonly abuse by adversaries, malware author and red teamers to persist on the targeted or compromised host by creating new user with an elevated privilege. This Hunting query may catch normal creation of user by administrator so filter is needed.",Endpoint Detection and Response
"linux_adding_crontab_using_list_parameter:The following analytic identifies a suspicious cron jobs modification using crontab list parameters. This command line parameter can be abused by malware like industroyer2, adversaries, and red teamers to add a crontab entry to their malicious code to execute to the schedule they want. This event can also be executed by administrator or normal user for automation purposes so filter is needed.",Endpoint Detection and Response
"linux_apt_privilege_escalation:Advanced Package Tool, more commonly known as APT, is a collection of tools used to install, update, remove, and otherwise manage software packages on Debian and its derivative operating systems, including Ubuntu and Linux Mint. If sudo right is given to the tool for user, then the user can run system commands as root and possibly get a root shell.",Endpoint Detection and Response
"linux_at_allow_config_file_creation:The following analytic identifies a suspicious file creation of /etc/at.allow or /etc/at.deny. These 2 files are commonly abused by malware, adversaries or red teamers to persist on the targeted or compromised host. These config files can restrict or allow user to execute ""at"" application (another schedule task application in linux). attacker can create a user or add the compromised username to that config file to execute ""at"" to schedule it malicious code. This anomaly detection can be a good indicator to investigate further the entry in created config file and who created it to verify if it is a false positive.",Endpoint Detection and Response
"linux_at_application_execution:The following analytic identifies a suspicious process creation of At application. This process can be used by malware, adversaries and red teamers to create persistence entry to the targeted or compromised host with their malicious code. This anomaly detection can be a good indicator to investigate the event before and after this process execution, when it was executed and what schedule task it will execute.",Endpoint Detection and Response
"linux_awk_privilege_escalation:Awk is mostly used for processing and scanning patterns. It checks one or more files to determine whether any lines fit the specified patterns, and if so, it does the appropriate action. If sudo right is given to AWK binary for the user, then the user can run system commands as root and possibly get a root shell.",Endpoint Detection and Response
"linux_busybox_privilege_escalation:BusyBox combines tiny versions of many common UNIX utilities into a single small executable. It provides minimalist replacements for most of the utilities you usually find in GNU coreutils, util-linux, etc. If sudo right is given to BusyBox application for the user, then the user can run system commands as root and possibly get a root shell.",Endpoint Detection and Response
"linux_c89_privilege_escalation:The c89 and cc commands compile, assemble, and link-edit C programs; the cxx or c++ command does the same for C++ programs. The c89 command should be used when compiling C programs that are written according to Standard C. If sudo right is given to c89 application for the user, then the user can run system commands as root and possibly get a root shell.",Endpoint Detection and Response
"linux_c99_privilege_escalation:The c99 utility is an interface to the standard C compilation system; it shall accept source code conforming to the ISO C standard. The system conceptually consists of a compiler and link editor. If sudo right is given to ruby application for the user, then the user can run system commands as root and possibly get a root shell.",Endpoint Detection and Response
"linux_change_file_owner_to_root:This analytic looks for a commandline that change the file owner to root using chown utility tool. This technique is commonly abuse by adversaries, malware author and red teamers to escalate privilege to the targeted or compromised host by changing the owner of their malicious file to root. This event is not so common in corporate network except from the administrator doing normal task that needs high privilege.",Endpoint Detection and Response
"linux_clipboard_data_copy:The following analytic identifies the use of Linux Xclip copying data out of the clipboard. Adversaries have utilized this technique to capture passwords, IP addresses, or store payloads.",Endpoint Detection and Response
"linux_common_process_for_elevation_control:This analytic is to look for possible elevation control access using a common known process in linux platform to change the attribute and file ownership. This technique is commonly abused by adversaries, malware author and red teamers to gain persistence or privilege escalation on the target or compromised host. This common process is used to modify file attribute, file ownership or SUID. This tools can be used in legitimate purposes so filter is needed.",Endpoint Detection and Response
"linux_composer_privilege_escalation:Composer is a tool for dependency management in PHP. It allows you to declare the libraries your project depends on and it will manage (install/update) them for you. If sudo right is given to tool for the user, then the user can run system commands as root and possibly get a root shell.",Endpoint Detection and Response
"linux_cpulimit_privilege_escalation:cpulimit is a simple program which attempts to limit the cpu usage of a process (expressed in percentage, not in cpu time). This is useful to control batch jobs, when you don't want them to eat too much cpu. If sudo right is given to the program for the user, then the user can run system commands as root and possibly get a root shell.",Endpoint Detection and Response
"linux_csvtool_privilege_escalation:csvtool is an easy to use command-line tool to work with .CSV files. If sudo right is given to the tool for the user, then the user can run system commands as root and possibly get a root shell.",Endpoint Detection and Response
"linux_curl_upload_file:The following analytic identifies curl being utilized with the -F or --form, --upload-file, -T, -d, --data, --data-raw, -I and --head switches to upload AWS credentials or config to a remote destination. This enables uploading of binary files and so forth. To force the 'content' part to be a file, prefix the file name with an @ sign. To just get the content part from a file, prefix the file name with the symbol <. The difference between @ and < is then that @ makes a file get attached in the post as a file upload, while the < makes a text field and just get the contents for that text field from a file. This technique was utlized by the TeamTNT group to exfiltrate AWS credentials.",Endpoint Detection and Response
linux_data_destruction_command:The following analytic identifies a unix shell command that can wipe root folders of a linux host. This commandline is being abused by Awfulshred malware that wipes or corrupts files in a targeted Linux host. The shell command uses the rm command with force recursive deletion even in the root folder. This TTP can be a good indicator that a user or a process wants to wipe roots directory files in Linux host.,Endpoint Detection and Response
"linux_dd_file_overwrite:This analytic is to look for dd command to overwrite file. This technique was abused by adversaries or threat actor to destroy files or data on specific system or in a large number of host within network to interrupt host avilability, services and many more. This is also used to destroy data where it make the file irrecoverable by forensic techniques through overwriting files, data or local and remote drives.",Endpoint Detection and Response
linux_decode_base64_to_shell:The following analytic identifies base64 being decoded and passed to a Linux shell.,Endpoint Detection and Response
"linux_deleting_critical_directory_using_rm_command:The following analytic identifies a suspicious deletion of a critical folder in Linux machine using rm command. This technique was seen in industroyer2 campaign to wipe or destroy energy facilities of a targeted sector. Deletion in these list of folder is not so common since it need some elevated privileges to access some of it. We recommend to look further events specially in file access or file deletion, process commandline that may related to this technique.",Endpoint Detection and Response
"linux_deletion_of_cron_jobs:This analytic is to detect a deletion of cron job in a linux machine. This technique can be related to an attacker, threat actor or malware to disable scheduled cron jobs that might be related to security or to evade some detections. We also saw that this technique can be a good indicator for malware that is trying to wipe or delete several files on the compromised host like the acidrain malware. This anomaly detection can be a good pivot detection to look for process and user doing it why they doing. Take note that this event can be done by administrator so filtering on those possible false positive event is needed.",Endpoint Detection and Response
linux_deletion_of_init_daemon_script:This analytic is to detect a deletion of init daemon script in a linux machine. daemon script that place in /etc/init.d/ is a directory that can start and stop some daemon services in linux machines. attacker may delete or modify daemon script to impair some security features or act as defense evasion in a compromised linux machine. This TTP can be also a good indicator of a malware trying to wipe or delete several files in compromised host as part of its destructive payload like what acidrain malware does in linux or router machines. This detection can be a good pivot to check what process and user tries to delete this type of files which is not so common and need further investigation.,Endpoint Detection and Response
linux_deletion_of_services:This analytic is to detect a deletion of services in a linux machine. attacker may delete or modify services to impair some security features or act as defense evasion in a compromised linux machine. This TTP can be also a good indicator of a malware trying to wipe or delete several files in a compromised host as part of its destructive payload like what acidrain malware does in linux or router machines. This detection can be a good pivot to check what process and user tries to delete this type of files which is not so common and need further investigation.,Endpoint Detection and Response
linux_deletion_of_ssl_certificate:This analytic is to detect a deletion of ssl certificate in a linux machine. attacker may delete or modify ssl certificate to impair some security features or act as defense evasion in compromised linux machine. This Anomaly can be also a good indicator of a malware trying to wipe or delete several files in a compromised host as part of its destructive payload like what acidrain malware does in linux or router machines. This detection can be a good pivot to check what process and user tries to delete this type of files which is not so common and need further investigation.,Endpoint Detection and Response
linux_disable_services:The following analytic is to detect events that attempts to disable a service. This is typically identified in parallel with other instances of service enumeration of attempts to stop a service and then delete it. Adversaries utilize this technique like industroyer2 malware to terminate security services or other related services to continue there objective as a destructive payload.,Endpoint Detection and Response
"linux_doas_conf_file_creation:This analytic is to detect the creation of doas.conf file in linux host platform. This configuration file can be use by doas utility tool to allow or permit standard users to perform tasks as root, the same way sudo does. This tool is developed as a minimalistic alternative to sudo application. This tool can be abused advesaries, attacker or malware to gain elevated privileges to the targeted or compromised host. On the other hand this can also be executed by administrator for a certain task that needs admin rights. In this case filter is needed.",Endpoint Detection and Response
"linux_doas_tool_execution:This analytic is to detect the doas tool execution in linux host platform. This utility tool allow standard users to perform tasks as root, the same way sudo does. This tool is developed as a minimalistic alternative to sudo application. This tool can be abused advesaries, attacker or malware to gain elevated privileges to the targeted or compromised host. On the other hand this can also be executed by administrator for a certain task that needs admin rights. In this case filter is needed.",Endpoint Detection and Response
"linux_docker_privilege_escalation:Docker is an open source containerization platform. It helps programmers to bundle applications into containers, which are standardized executable parts that include the application source code along with the OS libraries and dependencies needed to run that code in any setting. The user can add mount the root directory into a container and edit the /etc/password file to add a super user. This requires the user to be privileged enough to run docker, i.e. being in the docker group or being root.",Endpoint Detection and Response
"linux_edit_cron_table_parameter:The following analytic identifies a suspicious cronjobs modification using crontab edit parameter. This commandline parameter can be abuse by malware author, adversaries, and red red teamers to add cronjob entry to their malicious code to execute to the schedule they want. This event can also be executed by administrator or normal user for automation purposes so filter is needed.",Endpoint Detection and Response
"linux_emacs_privilege_escalation:EMACS is a family of text editors that are characterized by their extensibility. The manual for the most widely used variant, GNU Emacs, describes it as ""the extensible, customizable, self-documenting, real-time display editor"". If sudo right is given to EMACS tool for the user, then the user can run special commands as root and possibly get a root shell.",Endpoint Detection and Response
"linux_file_created_in_kernel_driver_directory:This analytic looks for suspicious file creation in kernel/driver directory in linux platform. This directory is known folder for all linux kernel module available within the system. so creation of file in this directory is a good indicator that there is a possible rootkit installation in the host machine. This technique was abuse by adversaries, malware author and red teamers to gain high privileges to their malicious code such us in kernel level. Even this event is not so common administrator or legitimate 3rd party tool may install driver or linux kernel module as part of its installation.",Endpoint Detection and Response
"linux_file_creation_in_init_boot_directory:This analytic looks for suspicious file creation on init system directories for automatic execution of script or file upon boot up. This technique is commonly abuse by adversaries, malware author and red teamer to persist on the targeted or compromised host. This behavior can be executed or use by an administrator or network operator to add script files or binary files as part of a task or automation. filter is needed.",Endpoint Detection and Response
"linux_file_creation_in_profile_directory:This analytic looks for suspicious file creation in /etc/profile.d directory to automatically execute scripts by shell upon boot up of a linux machine. This technique is commonly abused by adversaries, malware and red teamers as a persistence mechanism to the targeted or compromised host. This Anomaly detection is a good indicator that someone wants to run a code after boot up which can be done also by the administrator or network operator for automation purposes.",Endpoint Detection and Response
"linux_find_privilege_escalation:Find is a command-line utility that locates files based on some user-specified criteria and either prints the pathname of each matched object or, if another action is requested, performs that action on each matched object. If sudo right is given to find utility for the user, then the user can run system commands as root and possibly get a root shell.",Endpoint Detection and Response
"linux_gdb_privilege_escalation:GDB is the acronym for GNU Debugger. This tool helps to debug the programs written in C, C++, Ada, Fortran, etc. The console can be opened using the gdb command on terminal. If sudo right is given to GDB tool for the user, then the user can run system commands as root and possibly get a root shell.",Endpoint Detection and Response
"linux_gem_privilege_escalation:RubyGems is a package manager for the Ruby programming language that provides a standard format for distributing Ruby programs and libraries (in a self-contained format called a ""gem""), a tool designed to easily manage the installation of gems, and a server for distributing them. If sudo right is given to GEM utility for the user, then the user can run system commands as root and possibly get a root shell.",Endpoint Detection and Response
"linux_gnu_awk_privilege_escalation:gawk command in Linux is used for pattern scanning and processing language. The awk command requires no compiling and allows the user to use variables, numeric functions, string functions, and logical operators. It is a utility that enables programmers to write tiny and effective programs in the form of statements that define text patterns that are to be searched for, in a text document and the action that is to be taken when a match is found within a line. If sudo right is given to gawk tool for the user, then the user can run system commands as root and possibly get a root shell.",Endpoint Detection and Response
linux_hardware_addition_swapoff:This analytic looks for process execution to disable the swapping of paging devices. This technique was seen in Awfulshred malware that disables the swapping of the specified devices and files. This anomaly detection can be a good indicator that a process or a user tries to disable this Linux feature in a targeted host.,Endpoint Detection and Response
linux_high_frequency_of_file_deletion_in_boot_folder:This analytic is to detect a high frequency of file deletion relative to process name and process id /boot/ folder. These events was seen in industroyer2 wiper malware where it tries to delete all files in a critical directory in linux directory. This detection already contains some filter that might cause false positive during our testing.,Endpoint Detection and Response
linux_high_frequency_of_file_deletion_in_etc_folder:This analytic is to detect a high frequency of file deletion relative to process name and process id /etc/ folder. These events was seen in acidrain wiper malware where it tries to delete all files in a non-standard directory in linux directory. This detection already contains some filter that might cause false positive during our testing. But we recommend to add more filter if needed.,Endpoint Detection and Response
"linux_impair_defenses_process_kill:This analytic looks for PKILL process execution for possible termination of process. This technique is being used by several Threat actors, adversaries and red teamers to terminate processes in a targeted linux machine. This Hunting detection can be a good pivot to check a possible defense evasion technique or termination of security application in a linux host or wiper like Awfulshred that corrupt all files.",Endpoint Detection and Response
linux_indicator_removal_clear_cache:This analytic looks for processes that clear or free page cache in Linux system host. This technique was seen in Awfulshred malware wiper that tries to clear the cache using kernel system request drop_caches while wiping all files in the targeted host. This TTP detection can be a good indicator of user or process tries to clear page cache to delete tracks or might be a wiper like Awfulshred.,Endpoint Detection and Response
linux_indicator_removal_service_file_deletion:This analytic looks for suspicious linux processes that delete service unit configuration files. This technique was seen in several malware to delete service configuration files to corrupt a services or security product as part of its defense evasion. This TTP detection can be a good indicator of possible malware try to kill several services or a wiper like AwfulShred shell script that wipes the targeted linux host,Endpoint Detection and Response
linux_ingress_tool_transfer_hunting:The following analytic hunts for curl and wget being utilized in the environment. This is meant to help with identifying normal usage and potentially malicious. Utilize this query to tune other curl and wget analytics.,Endpoint Detection and Response
"linux_ingress_tool_transfer_with_curl:The following analytic identifies curl with the command-line switches that are commonly used to download, output, a remote script or binary. MetaSploit Framework will combine the -sO switch with | chmod +x to enable a simple one liner to download and set the execute bit to run the file immediately. During triage, review the remote domain and file being downloaded for legitimacy.",Endpoint Detection and Response
linux_insert_kernel_module_using_insmod_utility:This analytic looks for inserting of linux kernel module using insmod utility function. This event can detect a installation of rootkit or malicious kernel module to gain elevated privileges to their malicious code and bypassed detections. This Anomaly detection is a good indicator that someone installing kernel module in a linux host either admin or adversaries. filter is needed in this scenario,Endpoint Detection and Response
linux_install_kernel_module_using_modprobe_utility:This analytic looks for possible installing a linux kernel module using modprobe utility function. This event can detect a installation of rootkit or malicious kernel module to gain elevated privileges to their malicious code and bypassed detections. This Anomaly detection is a good indicator that someone installing kernel module in a linux host either admin or adversaries. filter is needed in this scenario,Endpoint Detection and Response
linux_iptables_firewall_modification:This analytic looks for suspicious commandline that modify the iptables firewall setting of a linux machine. This technique was seen in cyclopsblink malware where it modifies the firewall setting of the compromised machine to allow traffic to its tcp port that will be used to communicate with its C2 server.,Endpoint Detection and Response
"linux_java_spawning_shell:The following analytic identifies the process name of Java, Apache, or Tomcat spawning a Linux shell. This is potentially indicative of exploitation of the Java application and may be related to current event CVE-2021-44228 (Log4Shell). The shells included in the macro are ""sh"", ""ksh"", ""zsh"", ""bash"", ""dash"", ""rbash"", ""fish"", ""csh', ""tcsh', ""ion"", ""eshell"". Upon triage, review parallel processes and command-line arguments to determine legitimacy.",Endpoint Detection and Response
"linux_kernel_module_enumeration:The following analytic identifies the process kmod being utilized to list kernel modules in use. Typically, this is not seen as malicious, however it may be a precurser to the use of insmod to install a module.",Endpoint Detection and Response
"linux_kworker_process_in_writable_process_path:This analytic looks for suspicious process kworker commandline in a linux machine. kworker process name or thread are common names of kernel threads in linux process. This hunting detections can lead to investigate process contains process path in writable directory in linux like /home/, /var/log and /tmp/. This technique was seen in cyclopsblink malware to blend its core and other of its child process as normal kworker on the compromised machine. This detection might be a good pivot to look for other IOC related to cyclopsblink malware or attacks.",Endpoint Detection and Response
"linux_make_privilege_escalation:The Linux make command is used to build and maintain groups of programs and files from the source code. In Linux, it is one of the most frequently used commands by the developers. It assists developers to install and compile many utilities from the terminal. If sudo right is given to make utility for the user, then the user can run system commands as root and possibly get a root shell.",Endpoint Detection and Response
"linux_mysql_privilege_escalation:MySQL is an open-source relational database management system. Its name is a combination of ""My"", the name of co-founder Michael Widenius's daughter My, and ""SQL"", the abbreviation for Structured Query Language. If sudo right is given to mysql utility for the user, then the user can run system commands as root and possibly get a root shell.",Endpoint Detection and Response
"linux_ngrok_reverse_proxy_usage:The following analytic identifies the use of Ngrok being utilized on the Linux operating system. Unfortunately, there is no original file name for Ngrok, so it may be worth an additional hunt to identify any command-line arguments. The sign of someone using Ngrok is not malicious, however, more recently it has become an adversary tool.",Endpoint Detection and Response
"linux_node_privilege_escalation:Node.js is a back-end JavaScript runtime environment that is open-source, cross-platform, runs on the V8 engine, and executes JavaScript code outside of a web browser. It was created to help create scalable network applications. If the binary is allowed to run as superuser by sudo, it does not drop the elevated privileges and may be used to access the file system, escalate or maintain privileged access.",Endpoint Detection and Response
"linux_nopasswd_entry_in_sudoers_file:This analytic is to look for suspicious command lines that may add entry to /etc/sudoers with NOPASSWD attribute in linux platform. This technique is commonly abuse by adversaries, malware author and red teamers to gain elevated privilege to the targeted or compromised host. /etc/sudoers file controls who can run what commands users can execute on the machines and can also control whether user need a password to execute particular commands. This file is composed of aliases (basically variables) and user specifications.",Endpoint Detection and Response
linux_obfuscated_files_or_information_base64_decode:The following analytic identifies the use of base64 decode on Linux being utilized to deobfuscate a file. Identify the source of the file and determine if legitimate. Review parallel processes for further behavior before and after.,Endpoint Detection and Response
"linux_octave_privilege_escalation:GNU Octave is a high-level programming language primarily intended for scientific computing and numerical computation. Octave helps in solving linear and nonlinear problems numerically, and for performing other numerical experiments using a language that is mostly compatible with MATLAB. If sudo right is given to the application for the user, then the user can run system commands as root and possibly get a root shell.",Endpoint Detection and Response
"linux_openvpn_privilege_escalation:OpenVPN is a virtual private network system that implements techniques to create secure point-to-point or site-to-site connections in routed or bridged configurations and remote access facilities. It implements both client and server applications. If sudo right is given to the OpenVPN application for the user, then the user can run system commands as root and possibly get a root shell.",Endpoint Detection and Response
"linux_persistence_and_privilege_escalation_risk_behavior (https://github.com/frorth-aliceb/detection-knowledge-base):The following correlation is specific to Linux persistence and privilege escalation tactics and is tied to two analytic stories and any Linux analytic tied to persistence and privilege escalation. These techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.",Risk Modifiers
"linux_php_privilege_escalation:PHP is a general-purpose scripting language geared toward web development. It was originally created by Danish-Canadian programmer Rasmus Lerdorf in 1994. The PHP reference implementation is now produced by The PHP Group. If sudo right is given to php application for the user, then the user can run system commands as root and possibly get a root shell.",Endpoint Detection and Response
linux_pkexec_privilege_escalation:The following analytic identifies `pkexec` spawning with no command-line arguments. A vulnerability in Polkit's pkexec component identified as CVE-2021-4034 (PwnKit) which is present in the default configuration of all major Linux distributions and can be exploited to gain full root privileges on the system.,Endpoint Detection and Response
"linux_possible_access_or_modification_of_sshd_config_file:This analytic is to look for suspicious process command-line that might be accessing or modifying sshd_config. This file is the ssh configuration file that might be modify by threat actors or adversaries to redirect port connection, allow user using authorized key generated during attack. This anomaly detection might catch noise from administrator auditing or modifying ssh configuration file. In this scenario filter is needed",Endpoint Detection and Response
"linux_possible_access_to_credential_files:This analytic is to detect a possible attempt to dump or access the content of /etc/passwd and /etc/shadow to enable offline credential cracking. ""etc/passwd"" store user information within linux OS while ""etc/shadow"" contain the user passwords hash. Adversaries and threat actors may attempt to access this to gain persistence and/or privilege escalation. This anomaly detection can be a good indicator of possible credential dumping technique but it might catch some normal administrator automation scripts or during credential auditing. In this scenario filter is needed.",Endpoint Detection and Response
"linux_possible_access_to_sudoers_file:This analytic is to detect a possible access or modification of /etc/sudoers file. ""/etc/sudoers"" file controls who can run what command as what users on what machine and can also control whether a specific user need a password for particular commands.  adversaries and threat actors abuse this file to gain persistence and/or privilege escalation during attack on targeted host.",Endpoint Detection and Response
"linux_possible_append_command_to_at_allow_config_file:This analytic looks for suspicious commandline that may use to append user entry to /etc/at.allow or /etc/at.deny. These 2 files are commonly abused by malware, adversaries or red teamers to persist on the targeted or compromised host. These config file can restrict user that can only execute at application (another schedule task application in linux). attacker can create a user or add the compromised username to that config file to execute at to schedule it malicious code. This anomaly detection can be a good indicator to investigate further the entry in created config file and who created it to verify if it is a false positive.",Endpoint Detection and Response
"linux_possible_append_command_to_profile_config_file:This analytic looks for suspicious command-lines that can be possibly used to modify user profile files to automatically execute scripts/executables by shell upon reboot of the machine. This technique is commonly abused by adversaries, malware and red teamers as persistence mechanism to the targeted or compromised host. This Anomaly detection is a good indicator that someone wants to run code after reboot which can be done also by the administrator or network operator for automation purposes.",Endpoint Detection and Response
"linux_possible_append_cronjob_entry_on_existing_cronjob_file:This analytic looks for possible suspicious commandline that may use to append a code to any existing cronjob files for persistence or privilege escalation. This technique is commonly abused by malware, adversaries and red teamers to automatically execute their code within a existing or sometimes in normal cronjob script file.",Endpoint Detection and Response
linux_possible_cronjob_modification_with_editor:This analytic looks for possible modification of cronjobs file using editor. This event is can be seen in normal user but can also be a good hunting indicator for unwanted user modifying cronjobs for possible persistence or privilege escalation.,Endpoint Detection and Response
linux_possible_ssh_key_file_creation:This analytic is to look for possible ssh key file creation on ~/.ssh/ folder. This technique is commonly abused by threat actors and adversaries to gain persistence and privilege escalation to the targeted host. by creating ssh private and public key and passing the public key to the attacker server. threat actor can access remotely the machine using openssh daemon service.,Endpoint Detection and Response
"linux_preload_hijack_library_calls:This analytic is to detect a suspicious command that may hijack a library function in linux platform. This technique is commonly abuse by adversaries, malware author and red teamers to gain privileges and persist on the machine. This detection pertains to loading a dll to hijack or hook a library function of specific program using LD_PRELOAD command.",Endpoint Detection and Response
"linux_proxy_socks_curl:The following analytic identifies curl being utilized with a proxy based on command-line arguments - -x, socks, --preproxy and --proxy. This behavior is built into the MetaSploit Framework as a auxiliary module. What does socks buy an adversary? SOCKS4a extends the SOCKS4 protocol to allow a client to specify a destination domain name rather than an IP address. The SOCKS5 protocol is defined in RFC 1928. It is an incompatible extension of the SOCKS4 protocol; it offers more choices for authentication and adds support for IPv6 and UDP, the latter of which can be used for DNS lookups. The protocols, and a proxy itself, allow an adversary to evade controls in place monitoring traffic, making it harder for the defender to identify and track activity.",Endpoint Detection and Response
"linux_puppet_privilege_escalation:In computing, Puppet is a software configuration management tool which includes its own declarative language to describe system configuration. It is a model-driven solution that requires limited programming knowledge to use. If sudo right is given to the tool for the user, then the user can run system commands as root and possibly get a root shell.",Endpoint Detection and Response
"linux_rpm_privilege_escalation:RPM Package Manager is a free and open-source package management system. The name RPM refers to the .rpm file format and the package manager program itself. RPM was intended primarily for Linux distributions; the file format is the baseline package format of the Linux Standard Base. If sudo right is given to rpm utility for the user, then the user can run system commands as root and possibly get a root shell.",Endpoint Detection and Response
"linux_ruby_privilege_escalation:Ruby is one of the most used and easy to use programming languages. Ruby is an open-source, object-oriented interpreter that can be installed on a Linux system. If sudo right is given to ruby application for the user, then the user can run system commands as root and possibly get a root shell.",Endpoint Detection and Response
"linux_service_file_created_in_systemd_directory:This analytic looks for suspicious file creation in systemd timer directory in linux platform. systemd is a system and service manager for Linux distributions. From the Windows perspective, this process fulfills the duties of wininit.exe and services.exe combined. At the risk of simplifying the functionality of systemd, it initializes a Linux system and starts relevant services that are defined in service unit files. Adversaries, malware and red teamers may abuse this this feature by stashing systemd service file to persist on the targetted or compromised host.",Endpoint Detection and Response
"linux_service_restarted:This analytic looks for restarted or re-enable services in the linux platform. This technique can be executed or performed using systemctl or service tool application. Adversaries may create or modify Linux services to repeatedly execute malicious payloads as part of persistence. When the linux host boots up, it starts programs or applications called services that perform background system functions. Administrator may also create a legitimated service for a specific tool or normal application as part of task or automation, in this scenario it is suggested to look for the service path of the actual script or executable that registered as service and who created the service for further verification.",Endpoint Detection and Response
"linux_service_started_or_enabled:This analytic looks for created or enable services in linux platform. This technique can be executed or performed using systemctl or service tool application. Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Administrator may also create a legitimated service for a specific tool or normal application as part of task or automation, in this scenario it is suggested to look for the service path of the actual script or executable that register as service and who created the service for further verification.",Endpoint Detection and Response
"linux_setuid_using_chmod_utility:This analytic looks for suspicious chmod utility execution to enable SUID bit. This allows a user to temporarily gain root access, usually in order to run a program. For example, only the root account is allowed to change the password information contained in the password database; If the SUID bit appears as an s, the file's owner also has execute permission to the file; if it appears as an S, the file's owner does not have execute permission. The second specialty permission is the SGID, or set group id bit. It is similar to the SUID bit, except it can temporarily change group membership, usually to execute a program. The SGID bit is set if an s or an S appears in the group section of permissions.",Endpoint Detection and Response
"linux_setuid_using_setcap_utility:This analytic looks for suspicious setcap utility execution to enable SUID bit. This allows a user to temporarily gain root access, usually in order to run a program. For example, only the root account is allowed to change the password information contained in the password database; If the SUID bit appears as an s, the file's owner also has execute permission to the file; if it appears as an S, the file's owner does not have execute permission. The second specialty permission is the SGID, or set group id bit. It is similar to the SUID bit, except it can temporarily change group membership, usually to execute a program. The SGID bit is set if an s or an S appears in the group section of permissions.",Endpoint Detection and Response
"linux_shred_overwrite_command:This analytic is to detect a shred process to overwrite a files in a linux machine. Shred Linux application is designed to overwrite file to hide its contents or make the deleted file un-recoverable. Weve seen this technique in industroyer2 malware that tries to wipe energy facilities of targeted sector as part of its destructive attack. It might be some normal user may use this command for valid purposes but it is recommended to check what files, disk or folder it tries to shred that might be good pivot for incident response in this type of destructive malware.",Endpoint Detection and Response
"linux_sqlite3_privilege_escalation:sqlite3 is a terminal-based front-end to the SQLite library that can evaluate queries interactively and display the results in multiple formats. sqlite3 can also be used within shell scripts and other applications to provide batch processing features. If sudo right is given to this application for the user, then the user can run system commands as root and possibly get a root shell.",Endpoint Detection and Response
"linux_ssh_authorized_keys_modification:The following analytic identifies based on process execution the modification of SSH Authorized Keys. Adversaries perform this behavior to persist on endpoints. During triage, review parallel processes and capture any additional file modifications for review.",Endpoint Detection and Response
linux_ssh_remote_services_script_execute:The following analytic identifies SSH being utilized to move laterally and execute a script or file on the remote host.,Endpoint Detection and Response
linux_stdout_redirection_to_dev_null_file:This analytic looks for suspicious commandline that redirect the stdout or possible stderror to dev/null file. This technique was seen in cyclopsblink malware where it redirect the possible output or error while modify the iptables firewall setting of the compromised machine to hide its action from the user. This Anomaly detection is a good pivot to look further why process or user use this un common approach.,Endpoint Detection and Response
linux_stop_services:The following analytic is to detect events that attempt to stop or clear a service. This is typically identified in parallel with other instances of service enumeration of attempts to stop a service and then delete it. Adversaries utilize this technique like industroyer2 malware to terminate security services or other related services to continue there objective as a destructive payload.,Endpoint Detection and Response
"linux_sudo_or_su_execution:This analytic is to detect the execution of sudo or su command in linux operating system. The ""sudo"" command allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments. This command is commonly abused by adversaries, malware author and red teamers to elevate privileges to the targeted host. This command can be executed by administrator for legitimate purposes or to execute process that need admin privileges, In this scenario filter is needed.",Endpoint Detection and Response
"linux_sudoers_tmp_file_creation:This analytic is to looks for file creation of sudoers.tmp file cause by editing /etc/sudoers using visudo or editor in linux platform. This technique may abuse by adversaries, malware author and red teamers to gain elevated privilege to targeted or compromised host. /etc/sudoers file controls who can run what commands as what users on what machines and can also control special things such as whether you need a password for particular commands. The file is composed of aliases (basically variables) and user specifications (which control who can run what).",Endpoint Detection and Response
linux_system_network_discovery:This analytic is to look for possible enumeration of local network configuration. This technique is commonly used as part of recon of adversaries or threat actor to know some network information for its next or further attack. This anomaly detections may capture normal event made by administrator during auditing or testing network connection of specific host or network to network.,Endpoint Detection and Response
linux_system_reboot_via_system_request_key:This analytic is to look for possible execution of SysReq hack to reboot the Linux system host. This technique was seen in Awfulshred malware wiper to reboot the compromised host by using the linux magic sysreq key. This kernel configuration can trigger reboot by piping out 'b' to /proc/sysrq-trigger after enabling all the functions of sysrq. This TTP detection can be a good indicator of possible suspicious processes running on the Linux host since this command is not a common way to reboot a system.,Endpoint Detection and Response
linux_unix_shell_enable_all_sysrq_functions:This analytic is to look for possible execution of SysReq hack to enable all functions of kernel system requests of the Linux system host. This technique was seen in AwfulShred malware wiper to reboot the compromised host by using the linux magic sysreq key. This kernel configuration can be triggered by piping out bitmask '1' to /proc/sys/kernel/sysrq. This TTP detection can be a good indicator of possible suspicious processes running on the Linux host since this command is not so common shell commandline.,Endpoint Detection and Response
"linux_visudo_utility_execution:This analytic is to looks for suspicious commandline that add entry to /etc/sudoers by using visudo utility tool in linux platform. This technique may abuse by adversaries, malware author and red teamers to gain elevated privilege to targeted or compromised host. /etc/sudoers file controls who can run what commands as what users on what machines and can also control special things such as whether you need a password for particular commands. The file is composed of aliases (basically variables) and user specifications (which control who can run what).",Endpoint Detection and Response
living_off_the_land:The following correlation identifies a distinct amount of analytics associated with the Living Off The Land analytic story that identify potentially suspicious behavior.,Risk Modifiers
"loading_of_dynwrapx_module:DynamicWrapperX is an ActiveX component that can be used in a script to call Windows API functions, but it requires the dynwrapx.dll to be installed and registered. With that, registering or loading dynwrapx.dll to a host is highly suspicious. In most instances when it is used maliciously, the best way to triage is to review parallel processes and pivot on the process_guid. Review the registry for any suspicious modifications meant to load dynwrapx.dll. Identify any suspicious module loads of dynwrapx.dll. This detection will return and identify the processes that invoke vbs/wscript/cscript.",Microsoft Sysmon Logs
"local_account_discovery_with_net:This analytic looks for the execution of `net.exe` or `net1.exe` with command-line arguments utilized to query for local users. The two arguments `user` and 'users', return a list of all local users. Red Teams and adversaries alike use net.exe to enumerate users for situational awareness and Active Directory Discovery.",Endpoint Detection and Response
local_account_discovery_with_wmic:This analytic looks for the execution of `wmic.exe` with command-line arguments utilized to query for local users. The argument `useraccount` is used to leverage WMI to return a list of all local users. Red Teams and adversaries alike use net.exe to enumerate users for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
"log4shell_jndi_payload_injection_attempt:CVE-2021-44228 Log4Shell payloads can be injected via various methods, but on of the most common vectors injection is via Web calls. Many of the vulnerable java web applications that are using log4j have a web component to them are specially targets of this injection, specifically projects like Apache Struts, Flink, Druid, and Solr. The exploit is triggered by a LDAP lookup function in the log4j package, its invocation is similar to `${jndi:ldap://PAYLOAD_INJECTED}`, when executed against vulnerable web applications the invocation can be seen in various part of web logs. Specifically it has been successfully exploited via headers like X-Forwarded-For, User-Agent, Referer, and X-Api-Version. In this detection we first limit the scope of our search to the Web Datamodel and use the `| from datamodel` function to benefit from schema accelerated searching capabilities, mainly because the second part of the detection is pretty heavy, it runs a regex across all _raw events that looks for `${jndi:ldap://` pattern across all potential web fields available to the raw data, like http headers for example. If you see results for this detection, it means that there was a attempt at a injection, which could be a reconnaissance activity or a valid expliotation attempt, but this does not exactly mean that the host was indeed successfully exploited.",Web Proxy
"log4shell_jndi_payload_injection_with_outbound_connection:CVE-2021-44228 Log4Shell payloads can be injected via various methods, but on of the most common vectors injection is via Web calls. Many of the vulnerable java web applications that are using log4j have a web component to them are specially targets of this injection, specifically projects like Apache Struts, Flink, Druid, and Solr. The exploit is triggered by a LDAP lookup function in the log4j package, its invocation is similar to `${jndi:ldap://PAYLOAD_INJECTED}`, when executed against vulnerable web applications the invocation can be seen in various part of web logs. Specifically it has been successfully exploited via headers like X-Forwarded-For, User-Agent, Referer, and X-Api-Version. In this detection we match the invocation function with a network connection to a malicious ip address.","Application Load Balancer
DNS Global Load Balancer
Web Proxy
Network Communication"
logon_script_event_trigger_execution:This search is to detect a suspicious modification of registry entry to persist and gain privilege escalation upon booting up of compromised host. This technique was seen in several APT and malware where it modify UserInitMprLogonScript registry entry to its malicious payload to be executed upon boot up of the machine.,Endpoint Detection and Response
"lolbas_with_network_traffic:The following analytic identifies LOLBAS with network traffic. When adversaries abuse LOLBAS they are often used to download malicious code or executables. The LOLBAS project documents Windows native binaries that can be abused by threat actors to perform tasks like downloading malicious code. Looking for these process can help defenders identify lateral movement, command-and-control, or exfiltration activies.","DNS Global Load Balancer
Application Load Balancer
Network Communication"
macos_lolbin:Detect multiple executions of Living off the Land (LOLbin) binaries in a short period of time.,OSQuery
macos_plutil:Detect usage of plutil to modify plist files. Adversaries can modiy plist files to executed binaries or add command line arguments. Plist files in auto-run locations are executed upon user logon or system startup.,OSQuery
mailsniper_invoke_functions:This search is to detect known mailsniper.ps1 functions executed in a machine. This technique was seen in some attacker to harvest some sensitive e-mail in a compromised exchange server.,Windows Security
"malicious_inprocserver32_modification:The following analytic identifies a process modifying the registry with a known malicious CLSID under InProcServer32. Most COM classes are registered with the operating system and are identified by a GUID that represents the Class Identifier (CLSID) within the registry (usually under HKLM\\Software\\Classes\\CLSID or HKCU\\Software\\Classes\\CLSID).  Behind the implementation of a COM class is the server (some binary) that is referenced within registry keys under the CLSID.  The LocalServer32 key represents a path to an executable (exe) implementation, and the InprocServer32 key represents a path to a dynamic link library (DLL) implementation (Bohops). During triage, review parallel processes for suspicious activity. Pivot on the process GUID to see the full timeline of events. Analyze the value and look for file modifications. Being this is looking for inprocserver32, a DLL found in the value will most likely be loaded by a parallel process.",Endpoint Detection and Response
malicious_powershell_executed_as_a_service:This detection is to identify the abuse the Windows SC.exe to execute malicious commands or payloads via PowerShell.,Microsoft System EventLog
malicious_powershell_process_with_obfuscation_techniques:This search looks for PowerShell processes launched with arguments that have characters indicative of obfuscation on the command-line.,Endpoint Detection and Response
"many_usb_file_copies:<p>Build a baseline of how many file copies each user does to USB media, and detect when a user copies an uncharacteristically large number of files.</p>","DLP
Endpoint Detection and Response"
"mimikatz_passtheticket_commandline_parameters:The following analytic looks for the use of Mimikatz command line parameters leveraged to execute pass the ticket attacks. Red teams and adversaries alike may use the pass the ticket technique using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Defenders should be aware that adversaries may customize the source code of Mimikatz and modify the command line parameters. This would effectively bypass this analytic.",Endpoint Detection and Response
"mmc_lolbas_execution_process_spawn:The following analytic identifies `mmc.exe` spawning a LOLBAS execution process. When adversaries execute code on remote endpoints abusing the DCOM protocol and the MMC20 COM object, the executed command is spawned as a child processs of `mmc.exe`. The LOLBAS project documents Windows native binaries that can be abused by threat actors to perform tasks like executing malicious code. Looking for child processes of mmc.exe that are part of the LOLBAS project can help defenders identify lateral movement activity.",Endpoint Detection and Response
modification_of_wallpaper:This analytic identifies suspicious modification of registry to deface or change the wallpaper of a compromised machines as part of its payload. This technique was commonly seen in ransomware like REVIL where it create a bitmap file contain a note that the machine was compromised and make it as a wallpaper.,Microsoft Sysmon Logs
modify_acl_permission_to_files_or_folder:This analytic identifies suspicious modification of ACL permission to a files or folder to make it available to everyone. This technique may be used by the adversary to evade ACLs or protected files access. This changes is commonly configured by the file or directory owner with appropriate permission. This behavior is a good indicator if this command seen on a machine utilized by an account with no permission to do so.,Endpoint Detection and Response
monitor_dns_for_brand_abuse:This search looks for DNS requests for faux domains similar to the domains that you want to have monitored for abuse.,DNS
monitor_email_for_brand_abuse:This search looks for emails claiming to be sent from a domain similar to one that you want to have monitored for abuse.,Email
"monitor_registry_keys_for_print_monitors:This search looks for registry activity associated with modifications to the registry key `HKLM\SYSTEM\CurrentControlSet\Control\Print\Monitors`. In this scenario, an attacker can load an arbitrary .dll into the print-monitor registry by giving the full path name to the after.dll. The system will execute the .dll with elevated (SYSTEM) permissions and will persist after reboot.",Endpoint Detection and Response
monitor_web_traffic_for_brand_abuse:This search looks for Web requests to faux domains similar to the one that you want to have monitored for abuse.,"Web Server
Web Proxy"
"ms_exchange_mailbox_replication_service_writing_active_server_pages:The following query identifies suspicious .aspx created in 3 paths identified by Microsoft as known drop locations for Exchange exploitation related to HAFNIUM group and recently disclosed vulnerablity named ProxyShell. Paths include: `\HttpProxy\owa\auth\`, `\inetpub\wwwroot\aspnet_client\`, and `\HttpProxy\OAB\`. The analytic is limited to process name MSExchangeMailboxReplication.exe, which typically does not write .aspx files to disk. Upon triage, the suspicious .aspx file will likely look obvious on the surface. inspect the contents for script code inside. Identify additional log sources, IIS included, to review source and other potential exploitation. It is often the case that a particular threat is only applicable to a specific subset of systems in your environment. Typically analytics to detect those threats are written without the benefit of being able to only target those systems as well. Writing analytics against all systems when those behaviors are limited to identifiable subsets of those systems is suboptimal. Consider the case ProxyShell vulnerability on Microsoft Exchange Servers. With asset information, a hunter can limit their analytics to systems that have been identified as Exchange servers. A hunter may start with the theory that the exchange server is communicating with new systems that it has not previously. If this theory is run against all publicly facing systems, the amount of noise it will generate will likely render this theory untenable. However, using the asset information to limit this analytic to just the Exchange servers will reduce the noise allowing the hunter to focus only on the systems where this behavioral change is relevant.",Endpoint Detection and Response
ms_scripting_process_loading_ldap_module:This search is to detect a suspicious MS scripting process such as wscript.exe or cscript.exe that loading ldap module to process ldap query. This behavior was seen in FIN7 implant where it uses javascript to execute ldap query to parse host information that will send to its C2 server. this anomaly detections is a good initial step to hunt further a suspicious ldap query or ldap related events to the host that may give you good information regarding ldap or AD information processing or might be a attacker.,Microsoft Sysmon Logs
ms_scripting_process_loading_wmi_module:This search is to detect a suspicious MS scripting process such as wscript.exe or cscript.exe that loading wmi module to process wmi query. This behavior was seen in FIN7 implant where it uses javascript to execute wmi query to parse host information that will send to its C2 server. this anomaly detections is a good initial step to hunt further a suspicious wmi query or wmi related events to the host that may give you good information regarding process that are commonly using wmi query or modules or might be an attacker using this technique.,Microsoft Sysmon Logs
"msbuild_suspicious_spawned_by_script_process:This analytic is to detect a suspicious child process of MSBuild spawned by Windows Script Host - cscript or wscript. This behavior or event are commonly seen and used by malware or adversaries to execute malicious msbuild process using malicious script in the compromised host. During triage, review parallel processes and identify any file modifications. MSBuild may load a script from the same path without having command-line arguments.",Endpoint Detection and Response
mshta_spawning_rundll32_or_regsvr32_process:This search is to detect a suspicious mshta.exe process that spawn rundll32 or regsvr32 child process. This technique was seen in several malware nowadays like trickbot to load its initial .dll stage loader to execute and download the the actual trickbot payload.,Endpoint Detection and Response
"mshtml_module_load_in_office_product:The following detection identifies the module load of mshtml.dll into an Office product. This behavior has been related to CVE-2021-40444, whereas the malicious document will load ActiveX, which activates the MSHTML component. The vulnerability resides in the MSHTML component. During triage, identify parallel processes and capture any file modifications for analysis.",Microsoft Sysmon Logs
msmpeng_application_dll_side_loading:This search is to detect a suspicious creation of msmpeng.exe or mpsvc.dll in non default windows defender folder. This technique was seen couple days ago with revil ransomware in Kaseya Supply chain. The approach is to drop an old version of msmpeng.exe to load the actual payload name as mspvc.dll which will load the revil ransomware to the compromise machine,Endpoint Detection and Response
multiple_account_deletion_by_an_administrator:<p>Detect multiple accounts being deleted by an Administrator</p>,"Azure
User Activity Audit
Windows Security
AWS
GCP"
multiple_account_disabled_by_an_administrator:<p>Detect multiple accounts being disabled by an Administrator</p>,Windows Security
multiple_account_passwords_changed_by_an_administrator:<p>Detect multiple account password changes done by an Administrator</p>,Windows Security
"multiple_archive_files_http_post_traffic:This search is designed to detect high frequency of archive files data exfiltration through HTTP POST method protocol. This are one of the common techniques used by APT or trojan spy after doing the data collection like screenshot, recording, sensitive data to the infected machines. The attacker may execute archiving command to the collected data, save it a temp folder with a hidden attribute then send it to its C2 through HTTP POST. Sometimes adversaries will rename the archive files or encode/encrypt to cover their tracks. This detection can detect a renamed archive files transfer to HTTP POST since it checks the request body header. Unfortunately this detection cannot support archive that was encrypted or encoded before doing the exfiltration.",Web Server
multiple_infections_on_host:Finds hosts that have logged multiple different infections in a short period of time.,Anti-Virus or Anti-Malware
multiple_okta_users_with_invalid_credentials_from_the_same_ip:This hunting analytic identifies multiple failed logon attempts from a single IP. Use this analytic to identify patterns of suspicious logins from a single source and filter as needed or use this to drive tuning for higher fidelity analytics.,Okta
multiple_primary_functions_detected:Multiple Primary Functions Detected,Network Communication
"net_localgroup_discovery:The following hunting analytic will identify the use of localgroup discovery using `net localgroup`. During triage, review parallel processes and identify any further suspicious behavior.",Endpoint Detection and Response
net_profiler_uac_bypass:This search is to detect modification of registry to bypass UAC windows feature. This technique is to add a payload dll path on .NET COR file path that will be loaded by mmc.exe as soon it was executed. This detection rely on monitoring the registry key and values in the detection area. It may happened that windows update some dll related to mmc.exe and add dll path in this registry. In this case filtering is needed.,Endpoint Detection and Response
network_change_detected:Detects changes to policies of the network protection devices (such as firewall policy changes).,Configuration Management
network_connection_discovery_with_arp:This analytic looks for the execution of `arp.exe` utilized to get a listing of network connections on a compromised system. Red Teams and adversaries alike may use arp.exe for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
network_connection_discovery_with_net:This analytic looks for the execution of `net.exe` with command-line arguments utilized to get a listing of network connections on a compromised system. Red Teams and adversaries alike may use net.exe for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
network_connection_discovery_with_netstat:This analytic looks for the execution of `netstat.exe` with command-line arguments utilized to get a listing of network connections on a compromised system. Red Teams and adversaries alike may use netstat.exe for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
network_device_rebooted:Increases the risk score of network devices that have been rebooted.,Configuration Management
network_discovery_using_route_windows_app:This analytic look for a spawned process of route.exe windows application. Adversaries and red teams alike abuse this application the recon or do a network discovery on a target host. but one possible false positive might be an automated tool used by a system administator or a powershell script in amazon ec2 config services.,Endpoint Detection and Response
"network_share_discovery_via_dir_command:The following analytic identifies object access on Windows administrative SMB shares (Admin$, IPC$, C$). This represents suspicious behavior as its commonly used by tools like PsExec/PaExec and others to stage service binaries before creating and starting a Windows service on remote endpoints. Red Teams and adversaries alike may abuse administrative shares for lateral movement and remote code execution. The IcedID malware family also implements this behavior to try to infect other machines in the infected network.",Windows Security
new_cloud_provider:<p>Detect a user who is accessing a cloud storage provider they've never used before.</p>,Web Proxy
"new_data_exfil_dlp_alerts:<p>When you first seen an alert from a user who hasn't generated DLP alerts for data exfiltration before, learn about that.</p>",DLP
new_domain:Detects when users browse to domains never before seen in your organization.,Web Proxy
new_privileged_user:Record when a user who hasn't taken privileged actions before suddenly starts.,"Windows Security
Authentication"
new_user_account_created_on_multiple_hosts:Alerts when numerous new accounts are created for a username accounts multiple hosts.,"Windows Security
User Activity Audit"
"ngrok_reverse_proxy_on_network:The following analytic identifies the 4 most common Ngrok used domains based on DNS queries under the Network Resolution datamodel. It's possible these domains may be ran against the Web datamodel or ran with a direct query across network/proxy traffic. The sign of someone using Ngrok is not malicious, however, more recenctly it has become an adversary tool.",DNS
"nishang_powershelltcponeline:This query detects the Nishang Invoke-PowerShellTCPOneLine utility that spawns a call back to a remote Command And Control server. This is a powershell oneliner. In addition, this will capture on the command-line additional utilities used by Nishang. Triage the endpoint and identify any parallel processes that look suspicious. Review the reputation of the remote IP or domain contacted by the powershell process.",Endpoint Detection and Response
"nltest_domain_trust_discovery:This search looks for the execution of `nltest.exe` with command-line arguments utilized to query for Domain Trust information. Two arguments `/domain trusts`, returns a list of trusted domains, and `/all_trusts`, returns all trusted domains. Red Teams and adversaries alike use NLTest.exe to enumerate the current domain to assist with further understanding where to pivot next.",Endpoint Detection and Response
no_windows_updates_in_a_time_frame:This search looks for Windows endpoints that have not generated an event indicating a successful Windows update in the last 60 days. Windows updates are typically released monthly and applied shortly thereafter. An endpoint that has not successfully applied an update in this time frame indicates the endpoint is not regularly being patched for some reason.,Patch Management
"non_chrome_process_accessing_chrome_default_dir:This search is to detect an anomaly event of a non-chrome process accessing the files in chrome user default folder. This folder contains all the sqlite database of the chrome browser related to users login, history, cookies and etc. Most of the RAT, trojan spy as well as FIN7 jssloader try to parse the those sqlite database to collect information on the compromised host. This SACL Event (4663) need to be enabled to tthe firefox profile directory to be eable to use this. Since you monitoring this access to the folder,  we observed noise that needs to be filter out and hence added sqlite db browser and explorer .exe to make this detection more stable.",Windows Security
"non_firefox_process_access_firefox_profile_dir:This search is to detect an anomaly event of a non-firefox process accessing the files in the profile folder. This folder contains all the sqlite database of the firefox browser related to users login, history, cookies and etc. Most of the RAT, trojan spy as well as FIN7 jssloader try to parse the those sqlite database to collect information on the compromised host. This SACL Event (4663) needs to be enabled to the firefox profile directory to use this. Since this is monitoring the access to the folder, we have obsevered noise and hence added `sqlite db browser` and `explorer.exe` to make this detection more stable.",Windows Security
"notepad_with_no_command_line_arguments:The following analytic identifies behavior related to default SliverC2 framework where it will inject into Notepad.exe and spawn Notepad.exe with no command line arguments. In testing, this is a common procedure for SliverC2 usage, however may be modified or changed. From Microsoft, ""The Sideload, SpawnDll, and Execute-Assembly commands spawn and inject into notepad.exe by default. The following query finds process creation events where the same process creates and injects into notepad.exe within 10 seconds.""",Endpoint Detection and Response
"ntdsutil_export_ntds:Monitor for signs that Ntdsutil is being used to Extract Active Directory database - NTDS.dit, typically used for offline password cracking. It may be used in normal circumstances with no command line arguments or shorthand variations of more common arguments. Ntdsutil.exe is typically seen run on a Windows Server. Typical command used to dump ntds.dit \ntdsutil ""ac i ntds"" ""ifm"" ""create full C:\Temp"" q q \This technique uses ""Install from Media"" (IFM), which will extract a copy of the Active Directory database. A successful export of the Active Directory database will yield a file modification named ntds.dit to the destination.",Endpoint Detection and Response
o365_add_app_role_assignment_grant_user:This search detects the creation of a new Federation setting by alerting about an specific event related to its creation.,Azure
o365_added_service_principal:This search detects the creation of a new Federation setting by alerting about an specific event related to its creation.,Azure
o365_bypass_mfa_via_trusted_ip:This search detects newly added IP addresses/CIDR blocks to the list of MFA Trusted IPs to bypass multi factor authentication. Attackers are often known to use this technique so that they can bypass the MFA system.,Azure
"o365_disable_mfa:This search detects when multi factor authentication has been disabled, what entitiy performed the action and against what user",Azure
o365_excessive_authentication_failures_alert:This search detects when an excessive number of authentication failures occur this search also includes attempts against MFA prompt codes,Azure
o365_excessive_sso_logon_errors:This search detects accounts with high number of Single Sign ON (SSO) logon errors. Excessive logon errors may indicate attempts to bruteforce of password or single sign on token hijack or reuse.,Azure
o365_new_federated_domain_added:This search detects the addition of a new Federated domain.,Azure
o365_pst_export_alert:This search detects when a user has performed an Ediscovery search or exported a PST file from the search. This PST file usually has sensitive information including email body content,Azure
o365_suspicious_admin_email_forwarding:This search detects when an admin configured a forwarding rule for multiple mailboxes to the same destination.,Azure
o365_suspicious_rights_delegation:This search detects the assignment of rights to accesss content from another mailbox. This is usually only assigned to a service account.,Azure
o365_suspicious_user_email_forwarding:This search detects when multiple user configured a forwarding rule to the same destination.,Azure
office_application_drop_executable:This search is to detect a suspicious MS office application that drops or creates executables or scripts in a Windows Operating System. This behavior is commonly seen in spear phishing office attachment where it drop malicious files or script to compromised the host. It might be some normal macro may drop script or tools as part of automation but still this behavior is reallly suspicious and not commonly seen in normal office application,Endpoint Detection and Response
office_application_spawn_regsvr32_process:this detection was designed to identifies suspicious spawned process of known MS office application due to macro or malicious code. this technique can be seen in so many malware like IcedID that used MS office as its weapon or attack vector to initially infect the machines.,Endpoint Detection and Response
office_application_spawn_rundll32_process:This detection was designed to identify suspicious spawned processes of known MS office applications due to macro or malicious code. this technique can be seen in so many malware like trickbot that used MS office as its weapon or attack vector to initially infect the machines.,Endpoint Detection and Response
"office_document_creating_schedule_task:this search detects a potential malicious office document that create schedule task entry through macro VBA api or through loading taskschd.dll. This technique was seen in so many malicious macro malware that create persistence , beaconing using task schedule malware entry The search will return the first time and last time the task was registered, as well as the `Command` to be executed, `Task Name`, `Author`, `Enabled`, and whether it is `Hidden` or not. schtasks.exe is natively found in `C:\Windows\system32` and `C:\Windows\syswow64`. The following DLL(s) are loaded when schtasks.exe or TaskService is launched -`taskschd.dll`. If found loaded by another process, it's possible a scheduled task is being registered within that process context in memory. Upon triage, identify the task scheduled source. Was it schtasks.exe or via TaskService? Review the job created and the Command to be executed. Capture any artifacts on disk and review. Identify any parallel processes within the same timeframe to identify source.'",Microsoft Sysmon Logs
"office_document_executing_macro_code:this detection was designed to identifies suspicious office documents that using macro code. Macro code is known to be one of the prevalent weaponization or attack vector of threat actor. This malicious macro code is embed to a office document as an attachment that may execute malicious payload, download malware payload or other malware component. It is really good practice to disable macro by default to avoid automatically execute macro code while opening or closing a office document files.",Microsoft Sysmon Logs
office_document_spawned_child_process_to_download:This search is to detect potential malicious office document executing lolbin child process to download payload or other malware. Since most of the attacker abused the capability of office document to execute living on land application to blend it to the normal noise in the infected machine to cover its track.,Endpoint Detection and Response
office_product_spawn_cmd_process:this search is to detect a suspicious office product process that spawn cmd child process. This is commonly seen in a ms office product having macro to execute shell command to download or execute malicious lolbin relative to its malicious code. This is seen in trickbot spear phishing doc where it execute shell cmd to run mshta payload.,Endpoint Detection and Response
"office_product_spawning_bitsadmin:The following detection identifies the latest behavior utilized by different malware families (including TA551, IcedID). This detection identifies any Windows Office Product spawning `bitsadmin.exe`. In malicious instances, the command-line of `bitsadmin.exe` will contain a URL to a remote destination or similar command-line arguments as transfer, Download, priority, Foreground. In addition, Threat Research has released a detections identifying suspicious use of `bitsadmin.exe`. In this instance, we narrow our detection down to the Office suite as a parent process. During triage, review all file modifications. Capture and analyze any artifacts on disk. The Office Product, or `bitsadmin.exe` will have reached out to a remote destination, capture and block the IPs or domain. Review additional parallel processes for further activity.",Endpoint Detection and Response
"office_product_spawning_certutil:The following detection identifies the latest behavior utilized by different malware families (including TA551, IcedID). This detection identifies any Windows Office Product spawning `certutil.exe`. In malicious instances, the command-line of `certutil.exe` will contain a URL to a remote destination. In addition, Threat Research has released a detections identifying suspicious use of `certutil.exe`. In this instance, we narrow our detection down to the Office suite as a parent process. During triage, review all file modifications. Capture and analyze any artifacts on disk. The Office Product, or `certutil.exe` will have reached out to a remote destination, capture and block the IPs or domain. Review additional parallel processes for further activity.",Endpoint Detection and Response
"office_product_spawning_mshta:The following detection identifies the latest behavior utilized by different malware families (including TA551, IcedID). This detection identifies any Windows Office Product spawning `mshta.exe`. In malicious instances, the command-line of `mshta.exe` will contain the `hta` file locally, or a URL to the remote destination. In addition, Threat Research has released a detections identifying suspicious use of `mshta.exe`. In this instance, we narrow our detection down to the Office suite as a parent process. During triage, review all file modifications. Capture and analyze any artifacts on disk. The Office Product, or `mshta.exe` will have reached out to a remote destination, capture and block the IPs or domain. Review additional parallel processes for further activity.",Endpoint Detection and Response
"office_product_spawning_rundll32_with_no_dll:The following detection identifies the latest behavior utilized by IcedID malware family. This detection identifies any Windows Office Product spawning `rundll32.exe` without a `.dll` file extension. In malicious instances, the command-line of `rundll32.exe` will look like `rundll32 ..\oepddl.igk2,DllRegisterServer`. In addition, Threat Research has released a detection identifying the use of `DllRegisterServer` on the command-line of `rundll32.exe`. In this instance, we narrow our detection down to the Office suite as a parent process. During triage, review all file modifications. Capture and analyze the `DLL` that was dropped to disk. The Office Product will have reached out to a remote destination, capture and block the IPs or domain. Review additional parallel processes for further activity.",Endpoint Detection and Response
office_product_spawning_windows_script_host:The following analytic will identify a Windows Office Product spawning WScript.exe or CScript.exe. Tuning may be required based on legitimate application usage that may spawn scripts from an Office product.,Endpoint Detection and Response
"office_product_spawning_wmic:The following detection identifies the latest behavior utilized by Ursnif malware family. This detection identifies any Windows Office Product spawning `wmic.exe`. In malicious instances, the command-line of `wmic.exe` will contain `wmic process call create`. In addition, Threat Research has released a detection identifying the use of `wmic process call create` on the command-line of `wmic.exe`. In this instance, we narrow our detection down to the Office suite as a parent process. During triage, review all file modifications. Capture and analyze any artifacts on disk. The Office Product, or `wmic.exe` will have reached out to a remote destination, capture and block the IPs or domain. Review additional parallel processes for further activity.",Endpoint Detection and Response
"office_product_writing_cab_or_inf:The following analytic identifies behavior related to CVE-2021-40444. Whereas the malicious document will load ActiveX and download the remote payload (.inf, .cab). During triage, review parallel processes and further activity on endpoint to identify additional patterns. Retrieve the file modifications and analyze further.",Endpoint Detection and Response
"office_spawning_control:The following detection identifies control.exe spawning from an office product. This detection identifies any Windows Office Product spawning `control.exe`. In malicious instances, the command-line of `control.exe` will contain a file path to a .cpl or .inf, related to CVE-2021-40444. In this instance, we narrow our detection down to the Office suite as a parent process. During triage, review all file modifications. Capture and analyze any artifacts on disk. review parallel and child processes to identify further suspicious behavior",Endpoint Detection and Response
okta_account_locked_out:The following analytic utilizes the user.acount.lock event to identify associates who are locked out of Okta. An adversary attempting to brute force or password spray account names may lock accounts out depending on the threshold.,Okta
"okta_account_lockout_events:The following anomaly will generate based on account lockout events utilizing Okta eventTypes of user.account.lock.limit or user.account.lock. Per the Okta docs site, this event is fired when a user account has reached the lockout limit. The account will not auto-unlock and a user or client cannot gain access to the account. This event indicates an account that will not be able to log in until remedial action is taken by the account admin. This event can be used to understand the specifics of an account lockout. Often this indicates a client application that is repeatedly attempting to authenticate with invalid credentials such as an old password.",Okta
"okta_failed_sso_attempts:The following anomaly identifies failed Okta SSO events utilizing the legacy Okta event ""unauth app access attempt"".",Okta
"okta_mfa_exhaustion_hunt:The following analytic identifies patterns within Okta data to determine the amount of successful and failed pushes. Based on that, eval statements determine a finding of whether this is suspicious or not. The events are within a window of time and may be tuned as needed.",Okta
"okta_mismatch_between_source_and_response_for_verify_push_request:The following analytic identifies variations in client-based values for source and response events to identify suspicious request behavior. The detection is enhanced if the org is evaluating behavior conditions in sign-on policies using Okta Behavior Detection. NOTE: This detection requires the use of Okta Identity Engine (OIE) and will not function on Okta Classic.\For each Okta Verify Push challenge, the following two events are recorded in Okta System Log \Source of Push (Sign-In) \eventType eq \""system.push.send_factor_verify_push\"" \User Push Response (Okta Verify client) \eventType eq ""user.authentication.auth_via_mfa"" AND debugContext.debugData.factor eq ""OKTA_VERIFY_PUSH"" \In sequence, the logic for the analytic - \* Groups by SessionID and retrieves any system.push.send_factor_verify_push events (the source of the push) and user.authentication.auth_via_mfa events where the factor is OKTA_VERIFY_PUSH - (the user response to the push) \* Counts the total number of push events, successful authentication events, and any push sources where the client is a new device. \ * Creates a ratio of successful sign-ins to pushes. \* If the ratio (currently tuned aggressively) indicates push spam, or if a user has rejected a push, the detection proceeds to evaluate whether there is more than one IP address used during the session (session roaming) and the presence of both a new IP and new device during the session.",Okta
"okta_multiple_failed_requests_to_access_applications:The following analytic identifies multiple failed app requests in an attempt to identify the reuse a stolen web session cookie. The logic of the analytic is as follows: \ * Retrieves policy evaluation and SSO details in events that contain the Application requested \* Formats target fields so we can aggregate specifically on Applications (AppInstances) \* Groups by User, Session and IP \* Creates a ratio of successful SSO events to total MFA challenges related to Application Sign On Policies \* Alerts when more than half of app sign on events are unsuccessful, and challenges were unsatisfied for more than three apps.",Okta
okta_new_api_token_created:The following analytic identifies when a new API token is created. Adversaries who have gained access to a privileged account may add a new token for persistence. This analytic uses the eventType system.api_token.create.,Okta
"okta_new_device_enrolled_on_account:The following anomaly will be generated when a new device is added to an account. Albeit not malicious, risk is set low, but should be monitored. This anomaly utilizes the legacy events from Okta.",Okta
"okta_phishing_detection_with_fastpass_origin_check:The following analytic identifies when Okta''s FastPass prevents known phishing sites. When your users are enrolled in FastPass, Okta can provide defenders a high-fidelity signal for when user applications are being targeted by attackers wielding real-time (AiTM) proxies. Okta''s Defensive Cyber Operations team routinely identifies phishing infrastructure configured to imitate an Okta sign-in page and proactively notify Okta customers when suspicious infrastructure we detect appears to be targeting their users. Since March 2020, we have delivered over 1000 notifications to customers.",Okta
"okta_risk_threshold_exceeded:The following correlation will take risk associated with the content from  ""Suspicious Okta Activity"" and ""Okta MFA Exhaustion"" analytic stories and tally it up. Once it hits the threshold of 100 (may be changed), it will trigger an anomaly. As needed, reduce or raise the risk scores assocaited with the anomaly and TTP analytics tagged to these two stories.",Risk Modifiers
okta_suspicious_activity_reported:The following event is generated when an associate receives an email from Okta asking if a login attempt was suspicious or not. If the associate identifies it as suspicious an event is generated and should be reviewed.,Okta
"okta_suspicious_use_of_a_session_cookie:The following analytic looks for one or more policy evaluation events in which multiple client values (IP, User Agent, etc.) change associated to the same Device Token for a specific user. A detection opportunity arises when an adversary attempts to reuse a stolen web session cookie. \* Retrieves policy evaluation events from successful authentication events. \* Aggregates/Groups by Device Token and User, providing the first policy evaluation event in the search window. \* Evaluates whether there is more than one IP and whether there is more than one OS or browser for each combination of User/Device Token.",Okta
"okta_threatinsight_login_failure_with_high_unknown_users:The following analytic utilizes Okta's ThreatInsight to identify ""Login failures with high unknown users count"" and any included secondary outcome reasons. This event will trigger when a brute force attempt occurs with unknown usernames attempted.",Okta
"okta_threatinsight_suspected_passwordspray_attack:The following analytic utilizes Okta's ThreatInsight to identify ""PasswordSpray"" and any included secondary outcome reasons. This event will trigger when a brute force attempt occurs with unknown usernames attempted.",Okta
"okta_threatinsight_threat_detected:The following anomaly relies on the Okta ThreatInsight identification of a threat. Use this to drive risk up by src_ip or add additional fields to track. Identification may include password spraying, login failures and Login failures with high unknown users count.",Okta
okta_two_or_more_rejected_okta_pushes:The following analytic identifies an account that has rejected more than 2 Push notifications in a 10 minute window. Modify this query for your environment by upping the count or time window.,Okta
okta_user_logins_from_multiple_cities:This search detects logins from the same user from different cities in a 24 hour period.,Okta
old_passwords:Detect active accounts with passwords that haven't been updated in more than 120 days.,Windows Security
"open_redirect_in_splunk_web:This search allows you to look for evidence of exploitation for CVE-2016-4859, the Splunk Open Redirect Vulnerability.",None
outbound_network_connection_from_java_using_default_ports:A required step while exploiting the CVE-2021-44228-Log4j vulnerability is that the victim server will perform outbound connections to attacker-controlled infrastructure. This is required as part of the JNDI lookup as well as for retrieving the second stage .class payload. The following analytic identifies the Java process reaching out to default ports used by the LDAP and RMI protocols. This behavior could represent successfull exploitation. Note that adversaries can easily decide to use arbitrary ports for these protocols and potentially bypass this detection.,"DNS Global Load Balancer
Endpoint Detection and Response
Application Load Balancer
Network Communication"
outbreak_detected:Alerts when a potential outbreak is observed based on newly infected systems all exhibiting the same infection,Anti-Virus or Anti-Malware
"outdated_malware_definitions:Looks for Symantec AV systems where we see Symantec AV events, but don't see a malware definition update in the last few days.",Anti-Virus or Anti-Malware
overwriting_accessibility_binaries:Microsoft Windows contains accessibility features that can be launched with a key combination before a user has logged in. An adversary can modify or replace these programs so they can get a command prompt or backdoor without logging in to the system. This search looks for modifications to these binaries.,Endpoint Detection and Response
"papercut_ng_remote_web_access_attempt:The following analytic is designed to detect potential exploitation attempts on publicly accessible PaperCut NG servers. It identifies connections from public IP addresses to the server and specifically monitors for URI paths commonly found in proof-of-concept (POC) scripts for exploiting PaperCut NG vulnerabilities. These URI paths have been observed in both Metasploit modules and standalone scripts used for attacking PaperCut NG servers. When a public IP address is detected accessing one or more of these suspicious URI paths, an alert may be generated to notify the security team of the potential threat. The team can then investigate the source IP address, the targeted PaperCut NG server, and any other relevant information to determine the nature of the activity and take appropriate actions to mitigate the risk.","Web Server
Web Proxy"
"papercut_ng_suspicious_behavior_debug_log:The following hunting analytic is designed to monitor and detect potential exploitation attempts targeting a PaperCut NG server by analyzing its debug log data. By focusing on public IP addresses accessing the PaperCut NG instance, this analytic aims to identify unauthorized or suspicious access attempts. Furthermore, it searches for specific URIs that have been discovered in the proof of concept code, which are associated with known exploits or vulnerabilities. The analytic is focused on the user admin. Regex is used mainly because the log is not parsed by Splunk and there is no TA for this debug log.",None
password_policy_discovery_with_net:This analytic looks for the execution of `net.exe` or `net1.exe` with command line arguments used to obtain the domain password policy. Red Teams and adversaries may leverage `net.exe` for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
"path_traversal_spl_injection:On May 3rd, 2022, Splunk published a security advisory for a Path traversal in search parameter that can potentiall allow SPL injection. An attacker can cause the application to load data from incorrect endpoints, urls leading to outcomes such as running arbitrary SPL queries.",Splunk UI Access Logs
permission_modification_using_takeown_app:This search is to detect a modification of file or directory permission using takeown.exe windows app. This technique was seen in some ransomware that take the ownership of a folder or files to encrypt or delete it.,Endpoint Detection and Response
"persistent_xss_in_rapiddiag_through_user_interface_views:In Splunk Enterprise 9.0 versions before 9.0.4, a View allows for Cross-Site Scripting through the error message in a Base64-encoded image. The vulnerability affects instances with Splunk Web enabled. It does not affect Splunk Enterprise versions below 9.0. This search provides information on what user may have potentially added a malicious payload and what users were exposed to it.",Splunk Search Activity Logs
"personally_identifiable_information_detected:Detects personally identifiable information (PII) in log files. Some software can inadvertently provide sensitive information in log files, resulting in potential exposure to those reviewing the log files.",Any Splunk Logs
"petitpotam_network_share_access_request:The following analytic utilizes Windows Event Code 5145, ""A network share object was checked to see whether client can be granted desired access"". During our research into PetitPotam, CVE-2021-36942, we identified the ocurrence of this event on the target host with specific values. \To enable 5145 events via Group Policy - Computer Configuration->Polices->Windows Settings->Security Settings->Advanced Audit Policy Configuration. Expand this node, go to Object Access (Audit Polices->Object Access), then select the Setting Audit Detailed File Share Audit \It is possible this is not enabled by default and may need to be reviewed and enabled. \During triage, review parallel security events to identify further suspicious activity.",Windows Security
"petitpotam_suspicious_kerberos_tgt_request:The following analytic identifes Event Code 4768, A `Kerberos authentication ticket (TGT) was requested`, successfull occurs. This behavior has been identified to assist with detecting PetitPotam, CVE-2021-36942. Once an attacer obtains a computer certificate by abusing Active Directory Certificate Services in combination with PetitPotam, the next step would be to leverage the certificate for malicious purposes. One way of doing this is to request a Kerberos Ticket Granting Ticket using a tool like Rubeus. This request will generate a 4768 event with some unusual fields depending on the environment. This analytic will require tuning, we recommend filtering Account_Name to Domain Controllers for your environment.",Windows Security
ping_sleep_batch_command:This analytic will identify the possible execution of ping sleep batch commands. This technique was seen in several malware samples and is used to trigger sleep times without explicitly calling sleep functions or commandlets. The goal is to delay the execution of malicious code and bypass detection or sandbox analysis. This  detection can be a good indicator of a process delaying its execution for malicious purposes.,Endpoint Detection and Response
"plain_http_post_exfiltrated_data:This search is to detect potential plain HTTP POST method data exfiltration. This network traffic is commonly used by trickbot, trojanspy, keylogger or APT adversary where arguments or commands are sent in plain text to the remote C2 server using HTTP POST method as part of data exfiltration.",Web Server
"possible_browser_pass_view_parameter:This analytic will detect if a suspicious process contains a commandline parameter related to a web browser credential dumper. This technique is used by Remcos RAT malware which uses the Nirsoft webbrowserpassview.exe application to dump web browser credentials. Remcos uses the ""/stext"" command line to dump the credentials in text format. This Hunting query is a good indicator of hosts suffering from possible Remcos RAT infection. Since the hunting query is based on the parameter command and the possible path where it will save the text credential information, it may catch normal tools that are using the same command and behavior.",Endpoint Detection and Response
"possible_lateral_movement_powershell_spawn:The following analytic assists with identifying a PowerShell process spawned as a child or grand child process of commonly abused processes during lateral movement techniques including `services.exe`, `wmiprsve.exe`, `svchost.exe`, `wsmprovhost.exe` and `mmc.exe`. Legitimate Windows features such as the Service Control Manager, Windows Management Instrumentation, Task Scheduler, Windows Remote Management and the DCOM protocol can be abused to start a process on a remote endpoint. Looking for PowerShell spawned out of this processes may reveal a lateral movement attack. Red Teams and adversaries alike may abuse these services during a breach for lateral movement and remote code execution.",Endpoint Detection and Response
potential_day_trading:<p>Detect users who exhibit a large amount of stock trading activity in their proxy logs.</p>,Web Proxy
potential_gap_in_data:Detects gaps caused by the failure of the search head. If saved searches do not execute then there may be gaps in summary data.,Any Splunk Logs
"potential_password_in_username:This search identifies users who have entered their passwords in username fields. This is done by looking for failed authentication attempts using usernames with a length longer than 7 characters and a high Shannon entropy, and looks for the next successful authentication attempt from the same source system to the same destination system as the failed attempt.",Authentication
"potentially_malicious_code_on_commandline:The following analytic uses a pretrained machine learning text classifier to detect potentially malicious commandlines.  The model identifies unusual combinations of keywords found in samples of commandlines where adversaries executed powershell code, primarily for C2 communication.  For example, adversaries will leverage IO capabilities such as ""streamreader"" and ""webclient"", threading capabilties such as ""mutex"" locks, programmatic constructs like ""function"" and ""catch"", and cryptographic operations like ""computehash"".  Although observing one of these keywords in a commandline script is possible, combinations of keywords observed in attack data are not typically found in normal usage of the commandline.  The model will output a score where all values above zero are suspicious, anything greater than one particularly so.",Endpoint Detection and Response
"powershell_4104_hunting:The following Hunting analytic assists with identifying suspicious PowerShell execution using Script Block Logging, or EventCode 4104. This analytic is not meant to be ran hourly, but occasionally to identify malicious or suspicious PowerShell. This analytic is a combination of work completed by Alex Teixeira and Splunk Threat Research Team.",Windows Security
powershell_com_hijacking_inprocserver32_modification:The following analytic utilizes PowerShell ScriptBlock Logging to identify a script that is attempting to modify or add a component object model to inprocserver32 path within the registry.,Windows Security
"powershell_creating_thread_mutex:The following analytic identifies suspicious PowerShell script execution via EventCode 4104 that is using the `mutex` function. This function is commonly seen in some obfuscated PowerShell scripts to make sure that only one instance of there process is running on a compromise machine. During triage, review parallel processes within the same timeframe. Review the full script block to identify other related artifacts.",Windows Security
"powershell_disable_security_monitoring:This search identifies a modification in registry to disable the windows defender real time behavior monitoring. This event or technique is commonly seen in RATs, bots, or Trojans to disable AV to evade detections.",Endpoint Detection and Response
"powershell_domain_enumeration:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable on critical endpoints or all. \This analytic identifies specific PowerShell modules typically used to enumerate an organizations domain or users. \During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",Windows Security
"powershell_enable_powershell_remoting:This analytic utilizes PowerShell Script Block Logging (EventCode 4104) to identify the use of Enable-PSRemoting cmdlet. This cmdlet allows users to enable PowerShell remoting on a local or remote computer, which allows other computers to run commands on the target computer. The ability to remotely execute commands can be abused by attackers to take control of compromised systems and pivot to other systems on the network. By detecting the use of Enable-PSRemoting cmdlet via script block logging, this analytic can help organizations identify potential malicious activity related to attackers attempting to gain remote control of compromised systems.",Windows Security
powershell_enable_smb1protocol_feature:This search is to detect a suspicious enabling of smb1protocol through `powershell.exe`. This technique was seen in some ransomware (like reddot) where it enable smb share to do the lateral movement and encrypt other files within the compromise network system.,Windows Security
powershell_execute_com_object:This search is to detect a COM CLSID execution through powershell. This technique was seen in several adversaries and malware like ransomware conti where it has a feature to execute command using COM Object. This technique may use by network operator at some cases but a good indicator if some application want to gain privilege escalation or bypass uac.,Windows Security
"powershell_fileless_process_injection_via_getprocaddress:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable no critical endpoints or all. \This analytic identifies `GetProcAddress` in the script block. This is not normal to be used by most PowerShell scripts and is typically unsafe/malicious. Many attack toolkits use GetProcAddress to obtain code execution. \In use, `$var_gpa = $var_unsafe_native_methods.GetMethod(GetProcAddress` and later referenced/executed elsewhere. \During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",Windows Security
"powershell_fileless_script_contains_base64_encoded_content:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable on critical endpoints or all. \This analytic identifies `FromBase64String` within the script block. A typical malicious instance will include additional code. \Command example - `[Byte[]]$var_code = [System.Convert]::FromBase64String(38uqIyMjQ6rG....` \During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",Windows Security
"powershell_get_localgroup_discovery:The following hunting analytic identifies the use of `get-localgroup` being used with PowerShell to identify local groups on the endpoint. During triage, review parallel processes and identify any further suspicious behavior.",Endpoint Detection and Response
"powershell_get_localgroup_discovery_with_script_block_logging:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable on critical endpoints or all. \This analytic identifies PowerShell cmdlet - `get-localgroup` being ran. Typically, by itself, is not malicious but may raise suspicion based on time of day, endpoint and username. \During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",Windows Security
"powershell_invoke_cimmethod_cimsession:This analytic identifies the use of the New-CIMSession cmdlet being created along with the Invoke-CIMMethod cmdlet being used within PowerShell. This particular behavior is similar to the usage of the Invoke-WMIMethod cmdlet, which is known for executing WMI commands on targets using NTLMv2 pass-the-hash authentication. The New-CIMSession cmdlet allows users to create a new CIM session object for a specified computer system, which can then be used to execute CIM operations remotely. Similarly, the Invoke-CIMMethod cmdlet is used to invoke a specified method on one or more CIM objects. Therefore, the combination of New-CIMSession and Invoke-CIMMethod cmdlets in PowerShell can potentially indicate malicious behavior, and this analytic can help detect such activity.",Windows Security
powershell_invoke_wmiexec_usage:This analytic detects the usage of the Invoke-WMIExec utility within PowerShell Script Block Logging (EventCode 4104). The utility is used for executing WMI commands on targets using NTLMv2 pass-the-hash authentication.,Windows Security
"powershell_load_module_in_meterpreter:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable on critical endpoints or all. \This analytic identifies ""MSF.Powershell"",""MSF.Powershell.Meterpreter"",""MSF.Powershell.Meterpreter.Kiwi"",""MSF.Powershell.Meterpreter.Transport"" being used. This behavior is related to when a Meterpreter session is started and the operator runs load_kiwi. \During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",Windows Security
"powershell_loading_dotnet_into_memory_via_reflection:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable no critical endpoints or all. \This analytic identifies the use of PowerShell loading .net assembly via reflection. This is commonly found in malicious PowerShell usage, including Empire and Cobalt Strike. In addition, the `load(` value may be modifed by removing `(` and it will identify more events to review. \During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",Windows Security
"powershell_processing_stream_of_data:The following analytic identifies suspicious PowerShell script execution via EventCode 4104 that is processing compressed stream data. This is typically found in obfuscated PowerShell or PowerShell executing embedded .NET or binary files that are stream flattened and will be deflated durnig execution. During triage, review parallel processes within the same timeframe. Review the full script block to identify other related artifacts.",Windows Security
powershell_remote_thread_to_known_windows_process:this search is designed to detect suspicious powershell process that tries to inject code and to known/critical windows process and execute it using CreateRemoteThread. This technique is seen in several malware like trickbot and offensive tooling like cobaltstrike where it load a shellcode to svchost.exe to execute reverse shell to c2 and download another payload,Microsoft Sysmon Logs
powershell_remove_windows_defender_directory:This analytic will identify a suspicious PowerShell command used to delete the Windows Defender folder. This technique was seen used by the WhisperGate malware campaign where it used Nirsofts advancedrun.exe to gain administrative privileges to then execute a PowerShell command to delete the Windows Defender folder. This is a good indicator the offending process is trying corrupt a Windows Defender installation.,Windows Security
"powershell_start_or_stop_service:This analytic identifies the use of PowerShell's Start-Service or Stop-Service cmdlets on an endpoint. These cmdlets allow users to start or stop a specified Windows service. The ability to manipulate services can be leveraged by attackers to disable or stop critical services, which can cause system instability or disrupt business operations. By detecting the use of Start-Service or Stop-Service cmdlets via PowerShell, this analytic can help organizations identify potential malicious activity related to attackers attempting to manipulate services on compromised systems. However, note that this behavior may be noisy, as these cmdlets are commonly used by system administrators or other legitimate users to manage services. Therefore, it is recommended not to enable this analytic as a direct notable or TTP. Instead, it should be used as part of a broader set of security controls to detect and investigate potential threats.",Windows Security
"powershell_using_memory_as_backing_store:The following analytic identifies suspicious PowerShell script execution via EventCode 4104 that is using memory stream as new object backstore. The malicious PowerShell script will contain stream flate data and will be decompressed in memory to run or drop the actual payload. During triage, review parallel processes within the same timeframe. Review the full script block to identify other related artifacts.",Windows Security
"powershell_windows_defender_exclusion_commands:This analytic will detect a suspicious process commandline related to windows defender exclusion feature. This command is abused by adversaries, malware author and red teams to bypassed Windows Defender Anti-Virus product by excluding  folder path, file path, process, extensions and etc. from its real time or schedule scan to execute their malicious code. This is a good indicator for defense evasion and to look further for events after this behavior.",Windows Security
prevent_automatic_repair_mode_using_bcdedit:This search is to detect a suspicious bcdedit.exe execution to ignore all failures. This technique was used by ransomware to prevent the compromise machine automatically boot in repair mode.,Endpoint Detection and Response
print_processor_registry_autostart:This analytic is to detect a suspicious modification or new registry entry regarding print processor. This registry is known to be abuse by turla or other APT to gain persistence and privilege escalation to the compromised machine. This is done by adding the malicious dll payload on the new created key in this registry that will be executed as it restarted the spoolsv.exe process and services.,Endpoint Detection and Response
"print_spooler_adding_a_printer_driver:The following analytic identifies new printer drivers being load by utilizing the Windows PrintService operational logs, EventCode 316. This was identified during our testing of CVE-2021-34527 previously (CVE-2021-1675) or PrintNightmare. \Within the proof of concept code, the following event will occur - ""Printer driver 1234 for Windows x64 Version-3 was added or updated. Files:- UNIDRV.DLL, kernelbase.dll, evil.dll. No user action is required."" \During triage, isolate the endpoint and review for source of exploitation. Capture any additional file modification events and review the source of where the exploitation began.",None
privileged_acts_unprivileged_users:Detect users who shouldn't be able admins taking privileged actions.,"Windows Security
Authentication"
process_creating_lnk_file_in_suspicious_location:This search looks for a process launching an `*.lnk` file under `C:\User*` or `*\Local\Temp\*`. This is common behavior used by various spear phishing tools.,Endpoint Detection and Response
process_deleting_its_process_file_path:This detection is to identify a suspicious process that tries to delete the process file path related to its process. This technique is known to be defense evasion once a certain condition of malware is satisfied or not. Clop ransomware use this technique where it will try to delete its process file path using a .bat command if the keyboard layout is not the layout it tries to infect.,Microsoft Sysmon Logs
"process_execution_via_wmi:The following analytic identifies `WmiPrvSE.exe` spawning a process. This typically occurs when a process is instantiated from a local or remote process using `wmic.exe`. During triage, review parallel processes for suspicious behavior or commands executed. Review the process and command-line spawning from `wmiprvse.exe`. Contain and remediate the endpoint as necessary.",Endpoint Detection and Response
process_kill_base_on_file_path:The following analytic identifies the use of `wmic.exe` using `delete` to remove a executable path. This is typically ran via a batch file during beginning stages of an adversary setting up for mining on an endpoint.,Endpoint Detection and Response
"process_writing_dynamicwrapperx:DynamicWrapperX is an ActiveX component that can be used in a script to call Windows API functions, but it requires the dynwrapx.dll to be installed and registered. With that, a binary writing dynwrapx.dll to disk and registering it into the registry is highly suspect. Why is it needed? In most malicious instances, it will be written to disk at a non-standard location. During triage, review parallel processes and pivot on the process_guid. Review the registry for any suspicious modifications meant to load dynwrapx.dll. Identify any suspicious module loads of dynwrapx.dll. This will identify the process that will invoke vbs/wscript/cscript.",Endpoint Detection and Response
"processes_created_by_netsh:This search looks for processes launching netsh.exe to execute various commands via the netsh command-line utility. Netsh.exe is a command-line scripting utility that allows you to, either locally or remotely, display or modify the network configuration of a computer that is currently running. Netsh can be used as a persistence proxy technique to execute a helper .dll when netsh.exe is executed. In this search, we are looking for processes spawned by netsh.exe that are executing commands via the command line. Deprecated because we have another detection of the same type.",Endpoint Detection and Response
"processes_launching_netsh:This search looks for processes launching netsh.exe. Netsh is a command-line scripting utility that allows you to, either locally or remotely, display or modify the network configuration of a computer that is currently running. Netsh can be used as a persistence proxy technique to execute a helper DLL when netsh.exe is executed. In this search, we are looking for processes spawned by netsh.exe and executing commands via the command line.",Endpoint Detection and Response
"processes_tapping_keyboard_events:This search looks for processes in an MacOS system that is tapping keyboard events in MacOS, and essentially monitoring all keystrokes made by a user. This is a common technique used by RATs to log keystrokes from a victim, although it can also be used by legitimate processes like Siri to react on human input",Host-based IDS
"prohibited_network_traffic_allowed:This search looks for network traffic defined by port and transport layer protocol in the Enterprise Security lookup table ""lookup_interesting_ports"", that is marked as prohibited, and has an associated 'allow' action in the Network_Traffic data model. This could be indicative of a misconfigured network device.",Network Communication
prohibited_port_activity_detected:Detects the use of ports that are prohibited. Useful for detecting the installation of new software or a successful compromise of a host (such as the presence of a backdoor or a system communicating with a botnet).,Network Communication
prohibited_process_detected:Alerts when a service in the prohibited process list is detected.,Endpoint Detection and Response
prohibited_service_detected:Alerts when a service in the prohibited service list is detected.,Endpoint Detection and Response
prohibited_software_on_endpoint:This search looks for applications on the endpoint that you have marked as prohibited.,Endpoint Detection and Response
"protocol_or_port_mismatch:This search looks for network traffic on common ports where a higher layer protocol does not match the port that is being used. For example, this search should identify cases where protocols other than HTTP are running on TCP port 80. This can be used by attackers to circumvent firewall restrictions, or as an attempt to hide malicious communications over ports and protocols that are typically allowed and not well inspected.",Network Communication
"protocols_passing_authentication_in_cleartext:The following analytic identifies cleartext protocols at risk of leaking sensitive information. Currently, this consists of legacy protocols such as telnet (port 23), POP3 (port 110), IMAP (port 143), and non-anonymous FTP (port 21) sessions. While some of these protocols may be used over SSL, they typically are found on different assigned ports in those instances.",Network Communication
"proxyshell_proxynotshell_behavior_detected:The following correlation will identify activity related to Windows Exchange being actively exploited by adversaries related to ProxyShell or ProxyNotShell. In addition, the analytic correlates post-exploitation Cobalt Strike analytic story. Common post-exploitation behavior has been seen in the wild includes adversaries running nltest, Cobalt Strike, Mimikatz and adding a new user. The correlation specifically looks for 5 distinct analyticstories to trigger. Modify or tune as needed for your organization. 5 analytics is an arbitrary number but was chosen to reduce the amount of noise but also require the 2 analytic stories or a ProxyShell and CobaltStrike to fire. Adversaries will exploit the vulnerable Exchange server, abuse SSRF, drop a web shell, utilize the PowerShell Exchange modules and begin post-exploitation.",Risk Modifiers
"pull_list_of_privileged_users:To focus detection or response on privileged users, you must first build a list of accounts that have elevated rights or access to privileged information.",Windows Security
"randomly_generated_scheduled_task_name:The following hunting analytic leverages Event ID 4698, `A scheduled task was created`, to identify the creation of a Scheduled Task with a suspicious, high entropy, Task Name. To achieve this, this analytic also leverages the `ut_shannon` function from the URL ToolBox Splunk application. Red teams and adversaries alike may abuse the Task Scheduler to create and start a remote Scheduled Task and obtain remote code execution. To achieve this goal, tools like Impacket or Crapmapexec, typically create a Scheduled Task with a random task name on the victim host. This hunting analytic may help defenders identify Scheduled Tasks created as part of a lateral movement attack. The entropy threshold `ut_shannon > 3` should be customized by users. The Command field can be used to determine if the task has malicious intent or not.",Windows Security
"randomly_generated_windows_service_name:The following hunting analytic leverages Event ID 7045, `A new service was installed in the system`, to identify the installation of a Windows Service with a suspicious, high entropy, Service Name. To achieve this, this analytic also leverages the `ut_shannon` function from the URL ToolBox Splunk application. Red teams and adversaries alike may abuse the Service Control Manager to create and start a remote Windows Service and obtain remote code execution. To achieve this goal, some tools like Metasploit, Cobalt Strike and Impacket, typically create a Windows Service with a random service name on the victim host. This hunting analytic may help defenders identify Windows Services installed as part of a lateral movement attack. The entropy threshold `ut_shannon > 3` should be customized by users. The Service_File_Name field can be used to determine if the Windows Service has malicious intent or not.",Microsoft System EventLog
"ransomware_notes_bulk_creation:The following analytics identifies a big number of instance of ransomware notes (filetype e.g .txt, .html, .hta) file creation to the infected machine. This behavior is a good sensor if the ransomware note filename is quite new for security industry or the ransomware note filename is not in your ransomware lookup table list for monitoring.",Microsoft Sysmon Logs
"recon_avproduct_through_pwh_or_wmi:The following analytic identifies suspicious PowerShell script execution via EventCode 4104 performing checks to identify anti-virus products installed on the endpoint. This technique is commonly found in malware and APT events where the adversary will map all running security applications or services. During triage, review parallel processes within the same timeframe. Review the full script block to identify other related artifacts.",Windows Security
"recon_using_wmi_class:The following analytic identifies suspicious PowerShell via EventCode 4104, where WMI is performing an event query looking for running processes or running services. This technique is commonly found where the adversary will identify services and system information on the compromised machine. During triage, review parallel processes within the same timeframe. Review the full script block to identify other related artifacts.",Windows Security
recurring_infection_on_host:Looks for the same malware occurring multiple times on the same host.,Anti-Virus or Anti-Malware
recursive_delete_of_directory_in_batch_cmd:This search is to detect a suspicious commandline designed to delete files or directory recursive using batch command. This technique was seen in ransomware (reddot) where it it tries to delete the files in recycle bin to impaire user from recovering deleted files.,Endpoint Detection and Response
reg_exe_manipulating_windows_services_registry_keys:The search looks for reg.exe modifying registry keys that define Windows services and their configurations.,Endpoint Detection and Response
reg_exe_used_to_hide_files_directories_via_registry_keys:The search looks for command-line arguments used to hide a file or directory using the reg add command.,Endpoint Detection and Response
"registry_keys_for_creating_shim_databases:This search looks for registry activity associated with application compatibility shims, which can be leveraged by attackers for various nefarious purposes.",Endpoint Detection and Response
registry_keys_used_for_persistence:The search looks for modifications to registry keys that can be used to launch an application or service at system startup.,Endpoint Detection and Response
"registry_keys_used_for_privilege_escalation:This search looks for modifications to registry keys that can be used to elevate privileges. The registry keys under ""Image File Execution Options"" are used to intercept calls to an executable and can be used to attach malicious binaries to benign system binaries.",Endpoint Detection and Response
"regsvr32_silent_and_install_param_dll_loading:This analytic is to detect a loading of dll using regsvr32 application with silent parameter and dllinstall execution. This technique was seen in several RAT malware similar to remcos, njrat and adversaries to load their malicious DLL on the compromised machine. This TTP may executed by normal 3rd party application so it is better to pivot by the parent process, parent command-line and command-line of the file that execute this regsvr32.",Endpoint Detection and Response
"regsvr32_with_known_silent_switch_cmdline:The following analytic identifies Regsvr32.exe utilizing the silent switch to load DLLs. This technique has most recently been seen in IcedID campaigns to load its initial dll that will download the 2nd stage loader that will download and decrypt the config payload. The switch type may be either a hyphen `-` or forward slash `/`. This behavior is typically found with `-s`, and it is possible there are more switch types that may be used. \ During triage, review parallel processes and capture any artifacts that may have landed on disk. Isolate and contain the endpoint as necessary.",Endpoint Detection and Response
remcos_client_registry_install_entry:This search detects registry key license at host where Remcos RAT agent is installed.,Endpoint Detection and Response
"remcos_rat_file_creation_in_remcos_folder:This search is to detect file creation in remcos folder in appdata which is the keylog and clipboard logs that will be send to its c2 server. This is really a good TTP indicator that there is a remcos rat in the system that do keylogging, clipboard grabbing and audio recording.",Endpoint Detection and Response
remote_desktop_network_bruteforce:This search looks for RDP application network traffic and filters any source/destination pair generating more than twice the standard deviation of the average traffic.,Network Communication
"remote_desktop_network_traffic:This search looks for network traffic on TCP/3389, the default port used by remote desktop. While remote desktop traffic is not uncommon on a network, it is usually associated with known hosts. This search will ignore common RDP sources and common RDP destinations so you can focus on the uncommon uses of remote desktop on your network.",Network Communication
remote_desktop_process_running_on_system:This search looks for the remote desktop process mstsc.exe running on systems upon which it doesn't typically run. This is accomplished by filtering out all systems that are noted in the `common_rdp_source category` in the Assets and Identity framework.,Endpoint Detection and Response
"remote_process_instantiation_via_dcom_and_powershell:This analytic looks for the execution of `powershell.exe` with arguments utilized to start a process on a remote endpoint by abusing the DCOM protocol. Specifically, this search looks for the abuse of ShellExecute and ExecuteShellCommand. Red Teams and adversaries alike may abuse DCOM and `powershell.exe` for lateral movement and remote code execution.",Endpoint Detection and Response
"remote_process_instantiation_via_dcom_and_powershell_script_block:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of PowerShell with arguments utilized to start a process on a remote endpoint by abusing the DCOM protocol. Specifically, this search looks for the abuse of ShellExecute and ExecuteShellCommand. Red Teams and adversaries alike may abuse DCOM for lateral movement and remote code execution.",Windows Security
"remote_process_instantiation_via_winrm_and_powershell:This analytic looks for the execution of `powershell.exe` with arguments utilized to start a process on a remote endpoint by abusing the WinRM protocol. Specifically, this search looks for the abuse of the `Invoke-Command` commandlet. Red Teams and adversaries alike may abuse WinRM and `powershell.exe` for lateral movement and remote code execution.",Endpoint Detection and Response
"remote_process_instantiation_via_winrm_and_powershell_script_block:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of PowerShell with arguments utilized to start a process on a remote endpoint by abusing the WinRM protocol. Specifically, this search looks for the abuse of the `Invoke-Command` commandlet. Red Teams and adversaries alike may abuse WinRM for lateral movement and remote code execution.",Windows Security
remote_process_instantiation_via_winrm_and_winrs:This analytic looks for the execution of `winrs.exe` with command-line arguments utilized to start a process on a remote endpoint. Red Teams and adversaries alike may abuse the WinRM protocol and this binary for lateral movement and remote code execution.,Endpoint Detection and Response
remote_process_instantiation_via_wmi:This analytic identifies wmic.exe being launched with parameters to spawn a process on a remote system. Red Teams and adversaries alike may abuse WMI and this binary for lateral movement and remote code execution.,Endpoint Detection and Response
remote_process_instantiation_via_wmi_and_powershell:This analytic looks for the execution of `powershell.exe` leveraging the `Invoke-WmiMethod` commandlet complemented with arguments utilized to start a process on a remote endpoint by abusing WMI. Red Teams and adversaries alike may abuse WMI and `powershell.exe` for lateral movement and remote code execution.,Endpoint Detection and Response
remote_process_instantiation_via_wmi_and_powershell_script_block:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `Invoke-WmiMethod` commandlet with arguments utilized to start a process on a remote endpoint by abusing WMI. Red Teams and adversaries alike may abuse WMI and this commandlet for lateral movement and remote code execution.,Windows Security
remote_registry_key_modifications:This search monitors for remote modifications to registry keys.,Endpoint Detection and Response
remote_system_discovery_with_adsisearcher:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the `[Adsisearcher]` type accelerator being used to query Active Directory for domain computers. Red Teams and adversaries may leverage `[Adsisearcher]` to enumerate domain computers for situational awareness and Active Directory Discovery.,Windows Security
remote_system_discovery_with_dsquery:This analytic looks for the execution of `dsquery.exe` with command-line arguments utilized to discover remote systems. The `computer` argument returns a list of all computers registered in the domain. Red Teams and adversaries alike engage in remote system discovery for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
remote_system_discovery_with_net:This analytic looks for the execution of `net.exe` or `net1.exe` with command-line arguments utilized to discover remote systems. The argument `domain computers /domain` returns a list of all domain computers. Red Teams and adversaries alike use net.exe to identify remote systems for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
remote_system_discovery_with_wmic:This analytic looks for the execution of `wmic.exe` with command-line arguments utilized to discover remote systems. The arguments utilized in this command return a list of all the systems registered in the domain. Red Teams and adversaries alike may leverage WMI and wmic.exe to identify remote systems for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
"remote_wmi_command_attempt:The following analytic identifies usage of `wmic.exe` spawning a local or remote process, identified by the `node` switch. During triage, review parallel processes for additional commands executed. Look for any file modifications before and after `wmic.exe` execution. In addition, identify the remote endpoint and confirm execution or file modifications. Contain and isolate the endpoint as needed.",Endpoint Detection and Response
resize_shadowstorage_volume:The following analytics identifies the resizing of shadowstorage by ransomware malware to avoid the shadow volumes being made again. this technique is an alternative by ransomware attacker than deleting the shadowstorage which is known alert in defensive team. one example of ransomware that use this technique is CLOP ransomware where it drops a .bat file that will resize the shadowstorage to minimum size as much as possible,Endpoint Detection and Response
revil_common_exec_parameter:This analytic identifies suspicious commandline parameter that are commonly used by REVIL ransomware to encrypts the compromise machine.,Endpoint Detection and Response
"revil_registry_entry:This analytic identifies suspicious modification in registry entry to keep some malware data during its infection. This technique seen in several apt implant, malware and ransomware like REVIL where it keep some information like the random generated file extension it uses for all the encrypted files and ransomware notes file name in the compromised host.",Endpoint Detection and Response
"risky_events_from_privileged_users:When something generally risky occurs to your most privileged users, you likely should respond more quickly. Fortunately, this is easy to do.",Ticket Management
"rubeus_command_line_parameters:Rubeus is a C# toolset for raw Kerberos interaction and abuses. It is heavily adapted from Benjamin Delpys Kekeo project and Vincent LE TOUXs MakeMeEnterpriseAdmin project. This analytic looks for the use of Rubeus command line arguments utilized in common Kerberos attacks like exporting and importing tickets, forging silver and golden tickets, requesting a TGT or TGS, kerberoasting, password spraying, etc. Red teams and adversaries alike use Rubeus for Kerberos attacks within Active Directory networks. Defenders should be aware that adversaries may customize the source code of Rubeus and modify the command line parameters. This would effectively bypass this analytic.",Endpoint Detection and Response
"rubeus_kerberos_ticket_exports_through_winlogon_access:The following analytic looks for a process accessing the winlogon.exe system process. The Splunk Threat Research team identified this behavior when using the Rubeus tool to monitor for and export kerberos tickets from memory. Before being able to export tickets. Rubeus will try to escalate privileges to SYSTEM by obtaining a handle to winlogon.exe before trying to monitor for kerberos tickets. Exporting tickets from memory is typically the first step for pass the ticket attacks. Red teams and adversaries alike may use the pass the ticket technique using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Defenders should be aware that adversaries may customize the source code of Rubeus to potentially bypass this analytic.",Microsoft Sysmon Logs
"runas_execution_in_commandline:This analytic look for a spawned runas.exe process with a administrator user option parameter. This parameter was abused by adversaries, malware author or even red teams to gain elevated privileges in target host. This is a good hunting query to figure out privilege escalation tactics that may used for different stages like lateral movement but take note that administrator may use this command in purpose so its better to see other event context before and after this analytic.",Endpoint Detection and Response
"rundll32_control_rundll_hunt:The following hunting detection identifies rundll32.exe with `control_rundll` within the command-line, loading a .cpl or another file type. Developed in relation to CVE-2021-40444. Rundll32.exe can also be used to execute Control Panel Item files (.cpl) through the undocumented shell32.dll functions Control_RunDLL and Control_RunDLLAsUser. Double-clicking a .cpl file also causes rundll32.exe to execute. \ This is written to be a bit more broad by not including .cpl. \ During triage, review parallel processes to identify any further suspicious behavior.",Endpoint Detection and Response
"rundll32_control_rundll_world_writable_directory:The following detection identifies rundll32.exe with `control_rundll` within the command-line, loading a .cpl or another file type from windows\temp, programdata, or appdata. Developed in relation to CVE-2021-40444. Rundll32.exe can also be used to execute Control Panel Item files (.cpl) through the undocumented shell32.dll functions Control_RunDLL and Control_RunDLLAsUser. Double-clicking a .cpl file also causes rundll32.exe to execute. This is written to be a bit more broad by not including .cpl. The paths are specified, add more as needed. During triage, review parallel processes to identify any further suspicious behavior.",Endpoint Detection and Response
rundll32_create_remote_thread_to_a_process:This analytic identifies the suspicious Remote Thread execution of rundll32.exe to any process. This technique was seen in IcedID malware to execute its malicious code in normal process for defense evasion and to steal sensitive information in the compromised host.,Microsoft Sysmon Logs
"rundll32_createremotethread_in_browser:This analytic identifies the suspicious Remote Thread execution of rundll32.exe process to ""firefox.exe"" and ""chrome.exe"" browser. This technique was seen in IcedID malware where it hooks the browser to parse banking information as user used the targetted browser process.",Microsoft Sysmon Logs
rundll32_dnsquery:This search is to detect a suspicious rundll32.exe process having a http connection and do a dns query in some web domain. This technique was seen in IcedID malware where the rundll32 that execute its payload will contact amazon.com to check internet connect and to communicate to its C&C server to download config and other file component.,Microsoft Sysmon Logs
rundll32_lockworkstation:This search is to detect a suspicious rundll32 commandline to lock the workstation through command line. This technique was seen in CONTI leak tooling and script as part of its defense evasion. This technique is not a common practice to lock a screen and maybe a good indicator of compromise.,Endpoint Detection and Response
rundll32_process_creating_exe_dll_files:This search is to detect a suspicious rundll32 process that drops executable (.exe or .dll) files. This behavior seen in rundll32 process of IcedID that tries to drop copy of itself in temp folder or download executable drop it either appdata or programdata as part of its execution.,Microsoft Sysmon Logs
rundll32_shimcache_flush:This analytic is to detect a suspicious rundll32 commandline to clear shim cache. This technique is a anti-forensic technique to clear the cache taht are one important artifacts in terms of digital forensic during attacks or incident. This TTP is a good indicator that someone tries to evade some tools and clear foothold on the machine.,Endpoint Detection and Response
"rundll32_with_no_command_line_arguments_with_network:The following analytic identifies rundll32.exe with no command line arguments and performing a network connection. It is unusual for rundll32.exe to execute with no command line arguments present. This particular behavior is common with malicious software, including Cobalt Strike. During investigation, triage any network connections and parallel processes. Identify any suspicious module loads related to credential dumping or file writes. Rundll32.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.","DNS Global Load Balancer
Endpoint Detection and Response
Application Load Balancer
Network Communication"
"rundll_loading_dll_by_ordinal:The following analytic identifies rundll32.exe loading an export function by ordinal value. Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly, may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Utilizing ordinal values makes it a bit more complicated for analysts to understand the behavior until the DLL is reviewed.",Endpoint Detection and Response
"ryuk_test_files_detected:The search looks for files that contain the key word *Ryuk* under any folder in the C drive, which is consistent with Ryuk propagation.",Endpoint Detection and Response
"ryuk_wake_on_lan_command:This Splunk query identifies the use of Wake-on-LAN utilized by Ryuk ransomware. The Ryuk Ransomware uses the Wake-on-Lan feature to turn on powered off devices on a compromised network to have greater success encrypting them. This is a high fidelity indicator of Ryuk ransomware executing on an endpoint. Upon triage, isolate the endpoint. Additional file modification events will be within the users profile (\appdata\roaming) and in public directories (users\public\). Review all Scheduled Tasks on the isolated endpoint and across the fleet. Suspicious Scheduled Tasks will include a path to a unknown binary and those endpoints should be isolated until triaged.",Endpoint Detection and Response
"sam_database_file_access_attempt:The following analytic identifies access to SAM, SYSTEM or SECURITY databases' within the file path of `windows\system32\config` using Windows Security EventCode 4663. This particular behavior is related to credential access, an attempt to either use a Shadow Copy or recent CVE-2021-36934 to access the SAM database. The Security Account Manager (SAM) is a database file in Windows XP, Windows Vista, Windows 7, 8.1 and 10 that stores users' passwords.",Windows Security
same_error_on_many_servers_detected:Alerts when multiple systems are exhibiting the same errors,Any Splunk Logs
"samsam_test_file_write:The search looks for a file named ""test.txt"" written to the windows system directory tree, which is consistent with Samsam propagation.",Endpoint Detection and Response
sc_exe_manipulating_windows_services:This search looks for arguments to sc.exe indicating the creation or modification of a Windows service.,Endpoint Detection and Response
"schcache_change_by_app_connect_and_create_adsi_object:This analytic is to detect an application try to connect and create ADSI Object to do LDAP query. Every time an application connects to the directory and attempts to create an ADSI object, the Active Directory Schema is checked for changes. If it has changed since the last connection, the schema is downloaded and stored in a cache on the local computer either in %LOCALAPPDATA%\Microsoft\Windows\SchCache or %systemroot%\SchCache. We found this a good anomaly use case to detect suspicious application like blackmatter ransomware that use ADS object api to execute ldap query. having a good list of ldap or normal AD query tool used within the network is a good start to reduce the noise.",Microsoft Sysmon Logs
"schedule_task_with_http_command_arguments:The following query utilizes Windows Security EventCode 4698, `A scheduled task was created`, to identify suspicious tasks registered on Windows either via schtasks.exe OR TaskService with an arguments ""HTTP"" string that are unique entry of malware or attack that uses lolbin to download other file or payload to the infected machine. The search will return the first time and last time the task was registered, as well as the `Command` to be executed, `Task Name`, `Author`, `Enabled`, and whether it is `Hidden` or not. schtasks.exe is natively found in `C:\Windows\system32` and `C:\Windows\syswow64`. The following DLL(s) are loaded when schtasks.exe or TaskService is launched -`taskschd.dll`. If found loaded by another process, it is possible a scheduled task is being registered within that process context in memory. Upon triage, identify the task scheduled source. Was it schtasks.exe or via TaskService? Review the job created and the Command to be executed. Capture any artifacts on disk and review. Identify any parallel processes within the same timeframe to identify source.'",Windows Security
"schedule_task_with_rundll32_command_trigger:The following query utilizes Windows Security EventCode 4698, `A scheduled task was created`, to identify suspicious tasks registered on Windows either via schtasks.exe OR TaskService with a command to be executed with a Rundll32. This technique is common in new trickbot that uses rundll32 to load is trickbot downloader. The search will return the first time and last time the task was registered, as well as the `Command` to be executed, `Task Name`, `Author`, `Enabled`, and whether it is `Hidden` or not. schtasks.exe is natively found in `C:\Windows\system32` and `C:\Windows\syswow64`. The following DLL(s) are loaded when schtasks.exe or TaskService is launched -`taskschd.dll`. If found loaded by another process, it is possible a scheduled task is being registered within that process context in memory. Upon triage, identify the task scheduled source. Was it schtasks.exe or via TaskService? Review the job created and the Command to be executed. Capture any artifacts on disk and review. Identify any parallel processes within the same timeframe to identify source.'",Windows Security
"scheduled_task_creation_on_remote_endpoint_using_at:This analytic looks for the execution of `at.exe` with command-line arguments utilized to create a Scheduled Task on a remote endpoint. Red Teams and adversaries alike may abuse the Task Scheduler for lateral movement and remote code execution. The `at.exe` binary internally leverages the AT protocol which was deprecated starting with Windows 8 and Windows Server 2012 but may still work on previous versions of Windows. Furthermore, attackers may enable this protocol on demand by changing a sytem registry key.",Endpoint Detection and Response
"scheduled_task_deleted_or_created_via_cmd:The following analytic identifies the creation or deletion of a scheduled task using schtasks.exe with flags - create or delete being passed on the command-line. This has been associated with the Dragonfly threat actor, and the SUNBURST attack against Solarwinds. This analytic replaces ""Scheduled Task used in BadRabbit Ransomware"".",Endpoint Detection and Response
scheduled_task_initiation_on_remote_endpoint:This analytic looks for the execution of `schtasks.exe` with command-line arguments utilized to start a Scheduled Task on a remote endpoint. Red Teams and adversaries alike may abuse the Task Scheduler for lateral movement and remote code execution.,Endpoint Detection and Response
scheduled_tasks_used_in_badrabbit_ransomware:This search looks for flags passed to schtasks.exe on the command-line that indicate that task names related to the execution of Bad Rabbit ransomware were created or deleted. Deprecated because we already have a similar detection,Endpoint Detection and Response
schtasks_run_task_on_demand:This analytic identifies an on demand run of a Windows Schedule Task through shell or command-line. This technique has been used by adversaries that force to run their created Schedule Task as their persistence mechanism or for lateral movement as part of their malicious attack to the compromised machine.,Endpoint Detection and Response
schtasks_scheduling_job_on_remote_system:This analytic looks for the execution of `schtasks.exe` with command-line arguments utilized to create a Scheduled Task on a remote endpoint. Red Teams and adversaries alike may abuse the Task Scheduler for lateral movement and remote code execution.,Endpoint Detection and Response
schtasks_used_for_forcing_a_reboot:This search looks for flags passed to schtasks.exe on the command-line that indicate that a forced reboot of system is scheduled.,Endpoint Detection and Response
screensaver_event_trigger_execution:This analytic is developed to detect possible event trigger execution through screensaver registry entry modification for persistence or privilege escalation. This technique was seen in several APT and malware where they put the malicious payload path to the SCRNSAVE.EXE registry key to redirect the execution to their malicious payload path. This TTP is a good indicator that some attacker may modify this entry for their persistence and privilege escalation.,Endpoint Detection and Response
script_execution_via_wmi:This search looks for scripts launched via WMI.,Endpoint Detection and Response
sdclt_uac_bypass:This search is to detect a suspicious sdclt.exe registry modification. This technique is commonly seen when attacker try to bypassed UAC by using sdclt.exe application by modifying some registry that sdclt.exe tries to open or query with payload file path on it to be executed.,Endpoint Detection and Response
sdelete_application_execution:This analytic is to detect the execution of sdelete.exe application sysinternal tools. This tool is one of the most use tool of malware and adversaries to remove or clear their tracks and artifact in the targetted host. This tool is designed to delete securely a file in file system that remove the forensic evidence on the machine. A good TTP query to check why user execute this application which is not a common practice.,Endpoint Detection and Response
"searchprotocolhost_with_no_command_line_with_network:The following analytic identifies searchprotocolhost.exe with no command line arguments and with a network connection. It is unusual for searchprotocolhost.exe to execute with no command line arguments present. This particular behavior is common with malicious software, including Cobalt Strike. During investigation, identify any network connections and parallel processes. Identify any suspicious module loads related to credential dumping or file writes. searchprotocolhost.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.","DNS Global Load Balancer
Endpoint Detection and Response
Application Load Balancer
Network Communication"
"secretdumps_offline_ntds_dumping_tool:This analytic detects a potential usage of secretsdump.py tool for dumping credentials (ntlm hash) from a copy of ntds.dit and SAM.Security,SYSTEM registrry hive. This technique was seen in some attacker that dump ntlm hashes offline after having a copy of ntds.dit and SAM/SYSTEM/SECURITY registry hive.",Endpoint Detection and Response
sensitive_kubernetes_mount_pod_detected:<p>This search looks for pod start events with a mount host path that is classified as sensitive. Some pods will do this as part of normal operations but this is also a way for an attacker to do privilege escalation and lateral movement.</p><p><b>Alert:</b> Low</p>,Kubernetes
"serviceprincipalnames_discovery_with_powershell:The following analytic identifies `powershell.exe` usage, using Script Block Logging EventCode 4104, related to querying the domain for Service Principle Names. typically, this is a precursor activity related to kerberoasting or the silver ticket attack. \What is a ServicePrincipleName? \A service principal name (SPN) is a unique identifier of a service instance. SPNs are used by Kerberos authentication to associate a service instance with a service logon account. This allows a client application to request that the service authenticate an account even if the client does not have the account name.\The following analytic identifies the use of KerberosRequestorSecurityToken class within the script block. Using .NET System.IdentityModel.Tokens.KerberosRequestorSecurityToken class in PowerShell is the equivelant of using setspn.exe. \During triage, review parallel processes for further suspicious activity.",Windows Security
"serviceprincipalnames_discovery_with_setspn:The following analytic identifies `setspn.exe` usage related to querying the domain for Service Principle Names. typically, this is a precursor activity related to kerberoasting or the silver ticket attack. \What is a ServicePrincipleName? \A service principal name (SPN) is a unique identifier of a service instance. SPNs are used by Kerberos authentication to associate a service instance with a service logon account. This allows a client application to request that the service authenticate an account even if the client does not have the account name.\Example usage includes the following \1. setspn -T offense -Q */* 1. setspn -T attackrange.local -F -Q MSSQLSvc/* 1. setspn -Q */* > allspns.txt 1. setspn -q \Values \1. -F = perform queries at the forest, rather than domain level 1. -T = perform query on the specified domain or forest (when -F is also used) 1. -Q = query for existence of SPN \During triage, review parallel processes for further suspicious activity.",Endpoint Detection and Response
"services_escalate_exe:The following analytic identifies the use of `svc-exe` with Cobalt Strike. The behavior typically follows after an adversary has already gained initial access and is escalating privileges. Using `svc-exe`, a randomly named binary will be downloaded from the remote Teamserver and placed on disk within `C:\Windows\400619a.exe`. Following, the binary will be added to the registry under key `HKLM\System\CurrentControlSet\Services\400619a\` with multiple keys and values added to look like a legitimate service. Upon loading, `services.exe` will spawn the randomly named binary from `\\127.0.0.1\ADMIN$\400619a.exe`. The process lineage is completed with `400619a.exe` spawning rundll32.exe, which is the default `spawnto_` value for Cobalt Strike. The `spawnto_` value is arbitrary and may be any process on disk (typically system32/syswow64 binary). The `spawnto_` process will also contain a network connection. During triage, review parallel procesess and identify any additional file modifications.",Endpoint Detection and Response
"services_lolbas_execution_process_spawn:The following analytic identifies `services.exe` spawning a LOLBAS execution process. When adversaries execute code on remote endpoints abusing the Service Control Manager and creating a remote malicious service, the executed command is spawned as a child process of `services.exe`. The LOLBAS project documents Windows native binaries that can be abused by threat actors to perform tasks like executing malicious code. Looking for child processes of services.exe that are part of the LOLBAS project can help defenders identify lateral movement activity.",Endpoint Detection and Response
"set_default_powershell_execution_policy_to_unrestricted_or_bypass:Monitor for changes of the ExecutionPolicy in the registry to the values ""unrestricted"" or ""bypass,"" which allows the execution of malicious scripts.",Endpoint Detection and Response
"shim_database_file_creation:This search looks for shim database files being written to default directories. The sdbinst.exe application is used to install shim database files (.sdb). According to Microsoft, a shim is a small library that transparently intercepts an API, changes the parameters passed, handles the operation itself, or redirects the operation elsewhere.",Endpoint Detection and Response
"shim_database_installation_with_suspicious_parameters:This search detects the process execution and arguments required to silently create a shim database.  The sdbinst.exe application is used to install shim database files (.sdb). A shim is a small library which transparently intercepts an API, changes the parameters passed, handles the operation itself, or redirects the operation elsewhere.",Endpoint Detection and Response
"short_lived_scheduled_task:The following analytic leverages Windows Security EventCode 4698, `A scheduled task was created` and Windows Security EventCode 4699, `A scheduled task was deleted` to identify scheduled tasks created and deleted in less than 30 seconds. This behavior may represent a lateral movement attack abusing the Task Scheduler to obtain code execution. Red Teams and adversaries alike may abuse the Task Scheduler for lateral movement and remote code execution.",Windows Security
short_lived_windows_accounts:This search detects accounts that were created and deleted in a short time period.,Change Events Data
shortlived_account_detected:Detects when a account or credential is created and then removed a short time later. This may be an indication of malicious activities.,User Activity Audit
"showcase_emails_with_lookalike_domains:<p>Emailing from a domain name that is similar to your own is a common phishing technique, such as splunk.com receiving an email from spiunk.com. This search will detect those similar domains.</p><p><b>Alert Volume:</b> Very Low</p>",Email
"showcase_external_emails_with_internal_domain:<p>Phishers will often try to send emails where the from address uses your organization's domain name, e.g., emailing finance from yourceo@yourcompany.com. Detect that now!</p><p><b>Alert Volume:</b> Very Low</p>",Email
showcase_first_git:<p>Find users who accessed a git repository for the first time.</p><p><b>Alert Volume:</b> High</p>,Web Server
"showcase_first_git_peer:<p>Find users who accessed a git repository for the first time, where their peer group also hasn't accessed it before.</p><p><b>Alert Volume:</b> Medium</p>",Web Server
showcase_first_logon:<p>Find users who logged into a new server for the first time.</p><p><b>Alert Volume:</b> Very High</p>,"Windows Security
Authentication"
showcase_first_logon_jump_server:<p>Detect a user who is logging into a jump server that neither they nor any of their peers have accessed before.</p>,"Windows Security
Authentication"
showcase_first_seen_domain_controller:<p>A common indicator for lateral movement is when a user starts logging into new domain controllers.</p><p><b>Alert Volume:</b> Medium</p>,Windows Security
"showcase_first_usb:<p>Find systems the first time they generate Windows Event ID 20001, which for some customers occurs when a USB drive is plugged in.</p><p><b>Alert Volume:</b> Medium</p>","DLP
Endpoint Detection and Response"
showcase_git_downloads:<p>Find users who have downloaded more files from git than normal.</p><p><b>Alert Volume:</b> High</p>,Web Server
showcase_high_entropy_processes:<p>Some malware will launch processes with randomized filenames.</p><p><b>Alert Volume:</b> Medium</p>,"Endpoint Detection and Response
Windows Security"
showcase_hosts_where_sourcetypes_go_silent:<p>A frequent concern of SOCs is that their data feeds will disappear. This search will look on a host-by-host basis for when your security sources stop reporting home.</p><p><b>Alert Volume:</b> Medium</p>,Any Splunk Logs
showcase_hosts_with_many_timestamps:<p>One technique for foiling correlation searches is to alter the system time. This search will detect this scenario.</p><p><b>Alert Volume:</b> Low (and should be fixed)</p>,Any Splunk Logs
"showcase_huge_volume_dns_requests:<p>A common method for Data Exfiltration is to send out many DNS or Ping requests, embedding data into the payload. This is often not logged.</p><p><b>Alert Volume:</b> Low</p>",Network Communication
"showcase_huge_volume_dns_volume:<p>A common method of data exfiltration is to send out a huge volume (in bytes) of DNS or ping requests, embedding data into the payload. This is often not logged.</p><p><b>Alert Volume:</b> Low</p>",Network Communication
"showcase_increase_in_interactively_logged_on_users:<p>Most systems will have a relatively predictable number of interactively logged on users. This search will look for systems that have dramatically more than they typically do, with a per-user baseline.</p><p><b>Alert Volume:</b> Medium</p>",Windows Security
"showcase_increase_in_runas:<p>Privilege escalation (either via RunAs or Scheduled Tasks) create Windows Security EventID 4648 events. This search will baseline per (original, unprivileged) user and then track deviations.</p><p><b>Alert Volume:</b> Low</p>",Windows Security
"showcase_increase_interactive_logon:<p>Typically non-admin users will only interactively log into one system per day. A user who starts loggin into many can indicate account compromise and lateral movement. (<a href=""https://car.mitre.org/wiki/CAR-2013-02-012"">MITRE CAR Reference</a>)</p><p><b>Alert Volume:</b> Low</p>",Windows Security
"showcase_lookalike_filenames:<p>To evade analysts, attackers will create a service with a name similar to that of a standard Windows service. This search looks for small differences. Idea from David Bianco, formerly of Sqrrl (<a href=""http://detect-respond.blogspot.com/2016/11/hunting-for-malware-critical-process.html"">link</a>).</p><p><b>Alert Volume:</b> Very Low</p>","Endpoint Detection and Response
Windows Security"
showcase_many_hosts:<p>Find users who log into more hosts than they typically do.</p><p><b>Alert Volume:</b> Low</p>,"Windows Security
Authentication"
"showcase_network_dc_dest:<p>This will typically detect scanning activity, along with lateral movement activity.</p><p><b>Alert Volume:</b> Low</p>",Network Communication
"showcase_new_ad_domain:<p>New AD domain names in your normal domain controller logs are a symptom of many Pass the Hash tools. While some of the latest don't produce these artifacts, this remains a very valuable detection mechanism.</p><p><b>Alert Volume:</b> Low</p>",Windows Security
"showcase_new_host_with_suspicious_cmd_launch:<p>Very rarely would cmd.exe, regedit.exe, or powershell.exe be launched by services.exe. This search will detect that malware persistence strategy. (<a href=""https://car.mitre.org/wiki/CAR-2014-05-002"">MITRE CAR Reference</a>)</p><p><b>Alert Volume:</b> Very Low (for most companies)</p>","Endpoint Detection and Response
Windows Security"
"showcase_new_interactive_service_logon:<p>In most environments, service accounts should not log on interactively. This search finds new user/host combinations for accounts starting with ""svc_."" </p><p><b>Alert Volume:</b> Low</p>","Windows Security
Authentication"
"showcase_new_local_admin_account:<p>Local admin accounts are used by legitimate technicians, but they're also used by attackers. This search looks for newly created accounts that are elevated to local admins.</p><p><b>Alert Volume:</b> Medium</p>",Windows Security
"showcase_new_logon_type:<p>Windows defines several logon types (Interactive, RemoteInteractive, Network, etc.). Established users rarely generate new logon types. This search will look for that scenario. (<a href=""https://car.mitre.org/wiki/CAR-2013-02-012"">MITRE CAR Reference</a>)</p><p><b>Alert Volume:</b> Low</p>",Windows Security
"showcase_new_parent_process_for_cmd:<p>cmd.exe and regedit.exe tend to be used in the same ways. New parent processes can be suspicious. (<a href=""https://car.mitre.org/wiki/CAR-2013-02-003"">MITRE CAR Reference</a>)</p><p><b>Alert Volume:</b> Medium</p>","Endpoint Detection and Response
Windows Security"
"showcase_new_path_for_common_filename:<p>Simpler malware will hide in plain sight with a filename like explorer.exe, running in the user profile. This detection will look for new paths, for common / expected executables. (<a href=""https://car.mitre.org/wiki/CAR-2013-05-002"">MITRE CAR Reference</a>)</p><p><b>Alert Volume:</b> Very Low (for most companies)</p>","Endpoint Detection and Response
Windows Security"
"showcase_new_path_for_familiar_filename:<p>Processes are typically launched from the same path. When those paths change, it can be a malicious process masquerading as a valid one, to hide in task manager. (<a href=""https://car.mitre.org/wiki/CAR-2013-05-004"">MITRE CAR Reference</a>)</p><p><b>Alert Volume:</b> Medium</p>","Endpoint Detection and Response
Windows Security"
"showcase_new_runas:<p>Privilege escalation (either via RunAs or Scheduled Tasks) create Windows Security EventID 4648 events. This search will find new usernames / host combinations, which will track privilege escalation.</p><p><b>Alert Volume:</b> Medium</p>",Windows Security
showcase_new_service_creations:<p>New service creations are uncommon for most hosts. This search will look for both new executables and executables running from new paths launched by services.exe.</p><p><b>Alert Volume:</b> High</p>,"Endpoint Detection and Response
Windows Security"
showcase_new_sfdc_clients:<p>Salesforce.com contains the most critical information for many companies. This search looks for users who connect to SFDC's reporting API with new clients. </p><p><b>Alert Volume:</b> Low</p>,SFDC
showcase_new_sfdc_event_type:<p>Salesforce.com supports a variety of different event types in their event logs. This search detects users who suddenly query event types associated with data exfiltration</p><p><b>Alert Volume:</b> Medium</p>,SFDC
showcase_new_sfdc_tables:<p>Salesforce.com supports a simplified query language called SOQL. This search detects users who begin querying new sensitive tables.</p><p><b>Alert Volume:</b> Low</p>,SFDC
showcase_new_sfdc_tables_peer:<p>Salesforce.com supports a simplified query language called SOQL. This search detects users who begin querying sensitive tables that have never been contacted by peer group.</p><p><b>Alert Volume:</b> Low</p>,SFDC
"showcase_new_suspicious_exe_launch_for_user:<p>Some files rarely get used by legitimate activities, such as at.exe. This search will detect those executables being launched, regardless of the circumstance. (<a href=""https://car.mitre.org/wiki/CAR-2013-05-004"">MITRE CAR Reference</a>)</p><p><b>Alert Volume:</b> Low</p>","Endpoint Detection and Response
Windows Security"
showcase_remote_powershell_launches:<p>It's unusual for new users to remotely launch PowerShell on another system. This will track the first time per  user + host combination that powershel is remotely started.</p><p><b>Alert Volume:</b> Low (for most companies)</p>,"Endpoint Detection and Response
Windows Security"
"showcase_renamed_executables:<p>Oftentimes, attackers will execute a temporary file, and rename it to something innocuous (e.g. svchost.exe) to maintain persistence. This search will look for renamed executables. (<a href=""https://car.mitre.org/wiki/CAR-2013-05-009"">MITRE CAR Reference</a>)</p><p><b>Alert Volume:</b> Low</p>","Endpoint Detection and Response
Windows Security"
"showcase_series_attacker_tools_filename:<p>It's uncommon to see attacker tools used in rapid succession on an endpoint. This search will identify tools by filename, and look for multiple executions. (<a href=""https://car.mitre.org/wiki/CAR-2013-04-002"">MITRE CAR Reference</a>)</p><p><b>Alert Volume:</b> Low</p>","Endpoint Detection and Response
Windows Security"
"showcase_series_attacker_tools_hashes:<p>It's uncommon to see attacker tools used in rapid succession on an endpoint. This search will identify tools by file hash, and look for multiple executions. (<a href=""https://car.mitre.org/wiki/CAR-2013-04-002"">MITRE CAR Reference</a>)</p><p><b>Alert Volume:</b> Low</p>",Endpoint Detection and Response
"showcase_series_discovery_tools_filename:<p>It's uncommon to see many host discovery tools launched on an endpoint, except in very specific situations. This search will identify tools by filename, and look for many launches. (<a href=""https://car.mitre.org/wiki/CAR-2016-03-001"">MITRE CAR Reference</a>)</p><p><b>Alert Volume:</b> Low (unless your company specifically does this)</p>","Endpoint Detection and Response
Windows Security"
"showcase_series_discovery_tools_hashes:<p>It's uncommon to see many discovery tools launched on an endpoint, except in specific situations. This search will identify tools by file hash, and look for several in quick succession. (<a href=""https://car.mitre.org/wiki/CAR-2016-03-001"">MITRE CAR Reference</a>)</p><p><b>Alert Volume:</b> Low (unless your company specifically does this)</p>",Endpoint Detection and Response
"showcase_short_lived_accounts:<p>A technique used by attackers is to create an account, take some actions, and then delete it right away. This search will find those accounts on the local system.</p><p><b>Alert Volume:</b> Low</p>",Windows Security
showcase_significant_printing:<p>Find users who printed more pages than normal.</p><p><b>Alert Volume:</b> Medium</p>,User Activity Audit
"showcase_spike_in_outgoing_email:<p>Both to detect data exfiltration and compromised account, we can analyze users that are sending out dramatically more data than normal. This search looks per source email address for big increases in volume.</p><p><b>Alert Volume:</b> Low</p>",Email
showcase_spike_in_password_reset_emails:<p>Sending password reset emails is a common phishing technique. Protect your users by identifying spikes in the number of suspicious emails entering your environment.</p><p><b>Alert Volume:</b> Very Low</p>,Email
"showcase_spike_in_sfdc_document_downloads:<p>Salesforce.com contains the most critical information for many companies. This example tracks the number of documents downloaded per day per user, to detect exfiltration.</p><p><b>Alert Volume:</b> Medium</p>",SFDC
"showcase_spike_in_sfdc_exports:<p>For many organizations, Salesforce.com contains the most critical information in their company. This use case tracks the number of records exported per day (and is based on a real set of data collection).</p><p><b>Alert Volume:</b> Medium</p>",SFDC
"showcase_unique_patient_records_viewed:<p>If a healthcare worker views more patient records than normal or more than their peers, it could be a sign that their system is infected, or that they are exfiltrating patient data.</p><p><b>Alert Volume:</b> Low</p>",Cerner
"showcase_unusual_child_process_for_spoolsv_or_connhost:<p>In late August 2018, a new Windows Zero Day was announced via Twitter, and the only apparent defense is to detect unusual child processes from spoolsv.exe or connhost.exe. SSE already detected the POC, but this specifically looks for any potential detection.</p>",Endpoint Detection and Response
showcase_unusually_long:<p>Oftentimes we're able to detect malware by looking for unusually long command line strings.</p><p><b>Alert Volume:</b> Low</p>,"Endpoint Detection and Response
Windows Security"
silentcleanup_uac_bypass:This search is to detect a suspicious modification of registry that may related to UAC bypassed. This registry will be trigger once the attacker abuse the silentcleanup task schedule to gain high privilege execution that will bypass User control account.,Endpoint Detection and Response
single_letter_process_on_endpoint:This search looks for process names that consist only of a single letter.,Endpoint Detection and Response
"slui_runas_elevated:The following analytic identifies the Microsoft Software Licensing User Interface Tool, `slui.exe`, elevating access using the `-verb runas` function. This particular bypass utilizes a registry key/value. Identified by two sources, the registry keys are `HKCU\Software\Classes\exefile\shell` and `HKCU\Software\Classes\launcher.Systemsettings\Shell\open\command`. To simulate this behavior, multiple POC are available. The analytic identifies the use of `runas` by `slui.exe`.",Endpoint Detection and Response
"slui_spawning_a_process:The following analytic identifies the Microsoft Software Licensing User Interface Tool, `slui.exe`, spawning a child process. This behavior is associated with publicly known UAC bypass. `slui.exe` is commonly associated with software updates and is most often spawned by `svchost.exe`. The `slui.exe` process should not have child processes, and any processes spawning from it will be running with elevated privileges. During triage, review the child process and additional parallel processes. Identify any file modifications that may have lead to the bypass.",Endpoint Detection and Response
smb_traffic_spike:This search looks for spikes in the number of Server Message Block (SMB) traffic connections.,Network Communication
"soar_covid_19_indicator_check:The playbook is a self-contained set of actions that takes MD5 file hashes, IPs, domains, and URLs as input. It then leverages the lookups in Splunk provided by TA-covidIOCs to determine if the indicators from the SOAR event are COVID-related.","Endpoint Detection and Response
Web Proxy
Network Communication"
soar_ec2_instance_isolation:Isolate an EC2 instance by changing its security group in order to protect it from malicious traffic. This playbook can be started alone or used from another playbook after doing investigation and notification.,AWS
soar_ip_investigate_report:This playbook executes multiple investigative actions to determine if an IP address is malicious and sends a summary of the output in an email.,Network Communication
soar_malicious_insider_containment:This playbook demonstrates an automated response plan to handling malicious insiders within the environment.,AWS
soar_malware_investigation:This playbook investigates and remediates malware infections on the endpoint.,"Windows Security
Authentication"
soar_phishing_remediation_investigation:This playbook investigates and remediates phishing emails with Admin approval.,Email
"soar_prompt_and_block_domain:This playbook utilizes a reputation check to generate the risk level of a domain, and, if a high enough score blocks the domain on for 60 minutes after approval via user prompt.",Web Proxy
soar_ransomware_investigate_contain:This playbook investigates and contains ransomware detected on endpoints.,Anti-Virus or Anti-Malware
soar_threat_hunting:Hunt for internal sightings of malicious files or connections to malicious domains or IP addresses.,"DLP
IDS or IPS
Anti-Virus or Anti-Malware
Host-based IDS"
spectre_and_meltdown_vulnerable_systems:The search is used to detect systems that are still vulnerable to the Spectre and Meltdown vulnerabilities.,Vulnerability Detection
spike_in_file_writes:The search looks for a sharp increase in the number of files written to a particular host,Endpoint Detection and Response
splunk_access_provisioning:Alerts the first time a user gains rights to search an index that they're not supposed to according to the output of a GDPR data source and GDPR user mapping exercise.,Any Splunk Logs
splunk_account_discovery_drilldown_dashboard_disclosure:Splunk drilldown vulnerability disclosure in Dashboard application that can potentially allow exposure of tokens from privilege users. An attacker can create dashboard and share it to privileged user (admin) and detokenize variables using external urls within dashboards drilldown function.,Any Splunk Logs
"splunk_code_injection_via_custom_dashboard_leading_to_rce:This hunting search provides information about a vulnerability in Splunk Enterprise versions below 8.2.9, 8.1.12, 9.0.2, where an authenticated user can execute arbitrary code via the dashboard pdf generation component. Please review events with file=export in the _internal index for the potential targets of exploitation.",Splunk UI Access Logs
"splunk_command_and_scripting_interpreter_delete_usage:The following analytic identifies the use of the risky command - Delete - that may be utilized in Splunk to delete some or all data queried for. In order to use Delete in Splunk, one must be assigned the role. This is typically not used and should generate an anomaly if it is used.",Splunk Search Activity Logs
"splunk_command_and_scripting_interpreter_risky_commands:The Splunk platform contains built-in search processing language (SPL) safeguards to warn you when you are about to unknowingly run a search that contains commands that might be a security risk. This warning appears when you click a link or type a URL that loads a search that contains risky commands. The warning does not appear when you create ad hoc searches. This warning alerts you to the possibility of unauthorized actions by a malicious user. Unauthorized actions include - Copying or transferring data (data exfiltration), Deleting data and Overwriting data. All risky commands may be found here https://docs.splunk.com/Documentation/Splunk/latest/Security/SPLsafeguards#Commands_that_trigger_the_warninga. A possible scenario when this might occur is when a malicious actor creates a search that includes commands that exfiltrate or damage data. The malicious actor then sends an unsuspecting user a link to the search. The URL contains a query string (q) and a search identifier (sid), but the sid is not valid. The malicious actor hopes the user will use the link and the search will run. During analysis, pivot based on user name and filter any user or queries not needed. Queries ran from a dashboard are seen as adhoc queries. When a query runs from a dashboard it will not show in audittrail logs the source dashboard name. The query defaults to adhoc and no Splunk system user activity. In addition, modify this query by removing key commands that generate too much noise, or too little, and create separate queries with higher confidence to alert on.",Splunk Search Activity Logs
"splunk_command_and_scripting_interpreter_risky_spl_mltk:This detection utilizes machine learning model named ""risky_command_abuse"" trained from ""Splunk Command and Scripting Interpreter Risky SPL MLTK Baseline"". It should be scheduled to run hourly to detect whether a user has run searches containing risky SPL from this list https://docs.splunk.com/Documentation/Splunk/latest/Security/SPLsafeguards#Commands_that_trigger_the_warninga with abnormally long running time in the past one hour, comparing with his/her past seven days history. This search uses the trained baseline to infer whether a search is an outlier (isOutlier ~= 1.0) or not (isOutlier~= 0.0)",Splunk Search Activity Logs
"splunk_csrf_in_the_ssg_kvstore_client_endpoint:In Splunk Enterprise versions below 8.1.13, 8.2.10, and 9.0.4, a cross-site request forgery in the Splunk Secure Gateway (SSG) app in the kvstore_client endpoint allows for updating SSG KV store collections via a GET request. SSG is a Splunk Built app included by default with Splunk Enterprise. The vulnerability affects instances with SSG and Splunk Web enabled. This hunting search provides information on affected server specific method and post data that may reveal exploitation of this vulnerability.",Any Splunk Logs
"splunk_data_exfiltration_from_analytics_workspace_using_sid_query:This hunting search allows operator to discover attempts to exfiltrate data by executing a prepositioned malicious search ID in Analytic Workspace in Splunk Enterprise versions 8.2.9,8.1.12,9.0.2. The attack is browser-based. It requires the attacker to compel a victim to initiate a request within their browser (phishing). The attacker cannot exploit the vulnerability at will.",Splunk Search Activity Logs
splunk_digital_certificates_infrastructure_version:This search will check the TLS validation is properly configured on the search head it is run from as well as its search peers after Splunk version 9. Other components such as additional search heads or anything this rest command cannot be distributed to will need to be manually checked.,Any Splunk Logs
"splunk_digital_certificates_lack_of_encryption:On June 14th, 2022, Splunk released a security advisory relating to the authentication that happens between Universal Forwarders and Deployment Servers. In some circumstances, an unauthenticated client can download forwarder bundles from the Deployment Server. In other circumstances, a client may be allowed to publish a forwarder bundle to other clients, which may allow for arbitrary code execution. The fixes for these require upgrading to at least Splunk 9.0 on the forwarder as well. This is a great opportunity to configure TLS across the environment. This search looks for forwarders that are not using TLS and adds risk to those entities.",Any Splunk Logs
"splunk_dos_via_dump_spl_command:In Splunk Enterprise versions below 9.0.5, 8.2.11, and 8.1.14, an attacker can exploit a vulnerability in the dump SPL command to cause a Denial of Service by crashing the Splunk daemon.",Any Splunk Logs
"splunk_dos_via_malformed_s2s_request:On March 24th, 2022, Splunk published a security advisory for a possible Denial of Service stemming from the lack of validation in a specific key-value field in the Splunk-to-Splunk (S2S) protocol. This detection will alert on attempted exploitation in patched versions of Splunk.",Any Splunk Logs
splunk_edit_user_privilege_escalation:A low-privilege user who holds a role that has the edit_user capability assigned to it can escalate their privileges to that of the admin user by providing specially crafted web requests.,Splunk Search Activity Logs
"splunk_endpoint_denial_of_service_dos_zip_bomb:This search allows operator to identify Splunk search app crashes resulting from specially crafted ZIP file using file monitoring that affects UF versions 8.1.11 and 8.2 versions below 8.2.7.1. It is not possible to detect Zip Bomb attack before crash. This search will provide Universal Forwarder errors from uploaded binary files (zip compression) which are used for this attack. If an analyst sees results from this search we suggest you investigate and triage what zip file was uploaded, zip compressed files may have different extensions.",Any Splunk Logs
"splunk_enterprise_information_disclosure:This search allows you to look for evidence of exploitation for CVE-2018-11409, a Splunk Enterprise Information Disclosure Bug.",None
"splunk_http_response_splitting_via_rest_spl_command:A low-privileged user, using a specially crafted search command, can trigger an HTTP response splitting vulnerability with the rest SPL command that lets them potentially access other REST endpoints in the system arbitrarily, including accessing restricted content such as password files. This is because the user is able to inject the rest SPL command into the q parameter of an HTTP GET web request. The vulnerability requires the attacker to phish the victim by tricking them into initiating a request within their browser. The attacker cannot exploit the vulnerability at will.",Splunk Search Activity Logs
"splunk_identified_ssl_tls_certificates:The following analytic uses tags of SSL, TLS and certificate to identify the usage of the Splunk default certificates being utilized in the environment. Recommended guidance is to utilize valid TLS certificates which documentation may be found in Splunk Docs - https://docs.splunk.com/Documentation/Splunk/8.2.6/Security/AboutsecuringyourSplunkconfigurationwithSSL.",None
"splunk_improperly_formatted_parameter_crashes_splunkd:In Splunk Enterprise versions below 8.1.13, 8.2.10, and 9.0.4, when the INGEST\\_EVAL parameter is improperly formatted, it crashes splunkd. This hunting search provides the user, timing and number of times the crashing command was executed.",Splunk Search Activity Logs
"splunk_list_all_nonstandard_admin_accounts:This search will enumerate all Splunk Accounts with administrative rights on this instance.  It deliberately ignores the default admin account since this is assumed to be present.  This search may help in a detection the Cross-Site Scripting Attack listed: In Splunk Enterprise versions below 8.1.13, 8.2.10, and 9.0.4, a View allows for Cross-Site Scripting in an XML View through the 'layoutPanel' attribute in the 'module' tag. The vulnerability affects instances with Splunk Web enabled.",Any Splunk Logs
"splunk_low_privilege_user_can_view_hashed_splunk_password:In Splunk Enterprise versions below 9.0.5, 8.2.11, and 8.1.14, a low-privilege user who holds the user role can see the hashed version of the initial user name and password for the Splunk instance by using the rest SPL command against the conf-user-seed REST endpoint. This can lead to a privilege escalation that lets the user take over the admin account on the instance.",Splunk internal Web Access Logs
"splunk_path_traversal_in_splunk_app_for_lookup_file_edit:In Splunk Enterprise versions below 9.0.5, 8.2.11, and 8.1.14, a low-privilege user with access to the Splunk App for Lookup File Editing can, with a specially crafted web request, trigger a path traversal exploit that can then be used to read and write to restricted areas of the Splunk installation directory, including but not limited to the password hash file for the instance.",Any Splunk Logs
"splunk_persistent_xss_via_url_validation_bypass_w_dashboard:In Splunk Enterprise versions below 9.0.4, 8.2.10, and 8.1.13, a low-privileged user can bypass URL validation to perform a path traversal and access restricted and confidential information by targeting other users on the instance, including the admin user.  The only affected version of bootstrap which shipped with Splunk was version 2.3.1, so the search is targeted at that version alone.",Splunk internal Web Access Logs
"splunk_process_injection_forwarder_bundle_downloads:On June 14th, 2022, Splunk released a security advisory relating to the authentication that happens between Universal Forwarders and Deployment Servers. In some circumstances, an unauthenticated client can download forwarder bundles from the Deployment Server. This hunting search pulls a full list of forwarder bundle downloads where the peer column is the forwarder, the host column is the Deployment Server, and then you have a list of the apps downloaded and the serverclasses in which the peer is a member of. You should look for apps or clients that you do not recognize as being part of your environment.",Any Splunk Logs
"splunk_protocol_impersonation_weak_encryption_configuration:On June 14th, 2022, Splunk released a security advisory relating to TLS validation occuring within the httplib and urllib python libraries shipped with Splunk. In addition to upgrading to Splunk Enterprise 9.0 or later, several configuration settings need to be set. This search will check those configurations on the search head it is run from as well as its search peers. In addition to these settings, the PYTHONHTTPSVERIFY setting in $SPLUNK_HOME/etc/splunk-launch.conf needs to be enabled as well. Other components such as additional search heads or anything this rest command cannot be distributed to will need to be manually checked.",Any Splunk Logs
"splunk_protocol_impersonation_weak_encryption_selfsigned:On June 14th 2022, Splunk released vulnerability advisory addresing Python TLS validation which was not set before Splunk version 9. This search displays events showing WARNING of using Splunk issued default selfsigned certificates.",Any Splunk Logs
splunk_protocol_impersonation_weak_encryption_simplerequest:On Splunk version 9 on Python3 client libraries verify server certificates by default and use CA certificate store. This search warns a user about a failure to validate a certificate using python3 request.,Any Splunk Logs
splunk_rbac_bypass_on_indexing_preview_rest_endpoint:An unauthorized user can use the /services/indexing/preview REST endpoint to overwrite search results if they know the search ID (SID) of an existing search job.,Any Splunk Logs
"splunk_rce_via_splunk_secure_gateway__splunk_mobile_alerts_feature:This hunting search provides information on possible exploitation attempts against Splunk Secure Gateway App Mobile Alerts feature in Splunk versions 9.0, 8.2.x, 8.1.x. An authenticated user can run arbitrary operating system commands remotely through the use of specially crafted requests to the mobile alerts feature in the Splunk Secure Gateway app.",Any Splunk Logs
"splunk_reflected_xss_in_the_templates_lists_radio:Splunk versions below 8.1.12,8.2.9 and 9.0.2 are vulnerable to reflected cross site scripting (XSS). A View allows for a Reflected Cross Site scripting via JavaScript Object Notation (JSON) in a query parameter when ouput_mode=radio.",Splunk internal Web Access Logs
"splunk_risky_command_abuse_disclosed_february_2023:In February 2023, Splunk disclosed several vulnerabilities affecting Splunk Enterprise commands deemed risky. The following hunting search includes the following commands and versions. Command 'createrss' (versions 8.1.13, 8.2.10), pivot (8.1.13,8.2.10,9.0.4), display.page.search.patterns.sensitivity(versions below 8.1.13,8.2.10,9.0.4), search_listener, map, collect (8.1.13,8.2.10,9.0.4). For more information please review Splunk Vulnerabilities Disclosure, February 2023. Link can be found in reference.",Splunk Search Activity Logs
"splunk_stored_xss_via_data_model_objectname_field:Splunk Enterprise versions 8.1.12, 8.2.9, 9.0.2 are vulnerable to persistent cross site scripting via Data Model object name. An authenticated user can inject and store arbitrary scripts that can lead to persistent cross-site scripting (XSS) in the object name Data Model.",Splunk internal Web Access Logs
"splunk_unnecessary_file_extensions_allowed_by_lookup_table_uploads:In Splunk Enterprise versions below 8.1.13, 8.2.10, and 9.0.4, the lookup table uploads let a user upload lookup tables with unnecessary filename extensions. Lookup table file extensions may now only be one of .csv, .csv.gz, .kmz, .kml, .mmdb, or .mmdb.gz. This search provides user activity focus on uploads which aims to help hunt for malicious file uploads.",Any Splunk Logs
"splunk_user_enumeration_attempt:On May 3rd, 2022, Splunk published a security advisory for  username enumeration stemming from verbose login failure messages present on some REST endpoints. This detection will alert on attempted exploitation in patched versions of Splunk as well as actual exploitation in unpatched version of Splunk.",None
"splunk_xss_in_monitoring_console:On May 3rd, 2022, Splunk published a security advisory for a reflective Cross-Site Scripting (XSS) vulnerability stemming from the lack of input validation in the Distributed Monitoring Console app. This detection will alert on attempted exploitation in patched versions of Splunk as well as actual exploitation in unpatched version of Splunk.",Splunk internal Web Access Logs
"splunk_xss_in_save_table_dialog_header_in_search_page:This is a hunting search to find persistent cross-site scripting XSS code that was included while inputing data in 'Save Table' dialog in Splunk Enterprise (8.1.12,8.2.9,9.0.2). A remote user with ""power"" Splunk role can store this code that can lead to persistent cross site scripting.",Splunk internal Web Access Logs
"splunk_xss_via_view:In Splunk Enterprise versions below 8.1.13, 8.2.10, and 9.0.4, a View allows for Cross-Site Scripting in an XML View through the 'layoutPanel' attribute in the 'module' tag. The vulnerability affects instances with Splunk Web enabled. This hunting search shows users action, application and role used for creating views related to this vulnerability.",None
"spoolsv_spawning_rundll32:The following analytic identifies a suspicious child process, `rundll32.exe`, with no command-line arguments being spawned from `spoolsv.exe`. This was identified during our testing of CVE-2021-34527 previously (CVE-2021-1675) or PrintNightmare. Typically, this is not normal behavior for `spoolsv.exe` to spawn a process. During triage, isolate the endpoint and review for source of exploitation. Capture any additional file modification events.",Endpoint Detection and Response
spoolsv_suspicious_loaded_modules:This search is to detect suspicious loading of dll in specific path relative to printnightmare exploitation. In this search we try to detect the loaded modules made by spoolsv.exe after the exploitation.,Microsoft Sysmon Logs
"spoolsv_suspicious_process_access:This analytic identifies a suspicious behavior related to PrintNightmare, or CVE-2021-34527 previously (CVE-2021-1675),  to gain privilege escalation on the vulnerable machine. This exploit attacks a critical Windows Print Spooler Vulnerability to elevate privilege. This detection is to look for suspicious process access made by the spoolsv.exe that may related to the attack.",Microsoft Sysmon Logs
"spoolsv_writing_a_dll:The following analytic identifies a `.dll` being written by `spoolsv.exe`. This was identified during our testing of CVE-2021-34527 previously (CVE-2021-1675) or PrintNightmare. Typically, this is not normal behavior for `spoolsv.exe` to write a `.dll`. Current POC code used will write the suspicious DLL to disk within a path of `\spool\drivers\x64\`. During triage, isolate the endpoint and review for source of exploitation. Capture any additional file modification events.",Endpoint Detection and Response
"spring4shell_payload_url_request:The following analytic is static indicators related to CVE-2022-22963, Spring4Shell. The 3 indicators provide an amount of fidelity that source IP is attemping to exploit a web shell on the destination. The filename and cmd are arbitrary in this exploitation. Java will write a JSP to disk and a process will spawn from Java based on the cmd passed. This is indicative of typical web shell activity.","Web Server
Web Proxy"
sql_injection_with_long_urls:This search looks for long URLs that have several SQL commands visible within them.,"Web Server
Web Proxy"
"sqlite_module_in_temp_folder:This search is to detect a suspicious file creation of sqlite3.dll in %temp% folder. This behavior was seen in IcedID malware where it download sqlite module to parse browser database like for chrome or firefox to stole browser information related to bank, credit card or credentials.",Microsoft Sysmon Logs
"sse_dyndns:<p>Detect outbound communication to Dynamic DNS servers, which are frequently leveraged for command and control by all types of attackers.</p>","Web Proxy
DNS"
sse_hostnotincmdb:<p>Find internal addresses that aren't in your Asset database.</p>,Network Communication
sser_detect_journal_clearing:<p>This use case looks for the fsutil process clearing the update sequence number (USN) change journal.</p><p><b>Alert Volume:</b> Low</p>,"Endpoint Detection and Response
Windows Security"
sser_detect_lateral_movement_with_wmi:<p>This use case looks for WMI being used for lateral movement.</p><p><b>Alert Volume:</b> Low</p>,"Endpoint Detection and Response
Windows Security"
sser_detect_log_clearing_with_wevtutil:<p>This use case looks for the wevutil process clearing the Windows Audit Logs</p><p><b>Alert Volume:</b> Low</p>,"Endpoint Detection and Response
Windows Security"
"sser_fake_windows_processes:<p>This example finds processes normally run from Windows\System32 or Windows\SysWOW64, running from some other location. This can indicate a malicious process trying to hide as a legitimate process.</p><p><b>Alert Volume:</b> Low</p>","Endpoint Detection and Response
Windows Security"
sser_malicious_command_line_executions:<p>Ransomware and other malware variants often execute long commands using command line arguments. This search performs statistical analysis of these CLI arguments to detect potentially malicious executions.</p><p><b>Alert Volume:</b> Medium</p>,"Endpoint Detection and Response
Windows Security"
"sser_monitor_autorun_registry_keys:<p>Attackers often add malware to the <a href=""https://msdn.microsoft.com/en-us/library/windows/desktop/aa376977(v=vs.85).aspx"">Windows Autorun</a> registry keys to maintain persistence. This search looks through registry data for suspicious activities.</p><p><b>Alert Volume:</b> High</p>",Endpoint Detection and Response
"sser_monitor_successful_backups:<p>With good backups, a ransomware attack goes from unrecoverable losses to a manageable nuisance. This shows how you can track successful backups.</p><p><b>Alert Volume:</b> Very High</p>",Backup
sser_monitor_successful_windows_updates:<p>Malware often uses operating system vulnerabilities to infect an endpoint or to spread. This example verifies the Windows updates for specific vulnerabilities exploited by the WannaCry ransomware.</p><p><b>Alert Volume:</b> Very High</p>,Patch Management
"sser_monitor_unsuccessful_backups:<p>With good backups, a ransomware attack goes from unrecoverable losses to a manageable nuisance. This shows how you can analyze failed backups.</p><p><b>Alert Volume:</b> Low</p>",Backup
sser_monitor_unsuccessful_windows_updates:<p>Keeping current with Microsoft updates for Windows is one of the best ways to prevent malware. This example identifies hosts that have failed to implement appropriate updates.</p><p><b>Alert Volume:</b> Low</p>,Patch Management
sser_ransomware_extensions:<p>This example queries your endpoint data to find encrypted files that ransomware will create. You can often even use these extensions to identify the ransomware affecting a given endpoint.</p><p><b>Alert Volume:</b> Low</p>,"Endpoint Detection and Response
Windows Security"
sser_ransomware_note_files:<p>Most ransomware leaves a note on the endpoint containing directions for the victim to pay a ransom. This use case looks for these note files.</p><p><b>Alert Volume:</b> Low</p>,"Endpoint Detection and Response
Windows Security"
sser_ransomware_vulnerabilities:<p>This use case queries your Vulnerability Management logs from solutions like Nessus in order to identify the hosts in your environment that might be vulnerable to ransomware.</p><p><b>Alert Volume:</b> Low</p>,Vulnerability Detection
sser_smb_traffic_allowed:<p>This use case looks for any SMB traffic allowed through your firewall.</p><p><b>Alert Volume:</b> Low</p>,Network Communication
sser_spike_in_smb_traffic:<p>This search looks for hosts with an unusually high increase in SMB network connections.</p><p><b>Alert Volume:</b> Very Low</p>,Network Communication
"sser_tor_traffic:<p>The anonymity of TOR makes it the perfect place to hide C&C, exfiltration, or ransomware payment via bitcoin. This example looks for ransomware activity based on FW logs.</p><p><b>Alert Volume:</b> Low</p>",Network Communication
sser_windows_event_log_clearing_events:<p>This use case looks for Windows event codes that indicate the Windows Audit Logs were tampered with.</p><p><b>Alert Volume:</b> Low</p>,Windows Security
"ssl_certificates_with_punycode:The following analytic utilizes the Certificates Datamodel to look for punycode domains, starting with xn--, found in the SSL issuer email domain. The presence of punycode here does not equate to evil, therefore we need to decode the punycode to determine what it translates to. Remove the CyberChef recipe as needed and decode manually. Note that this is not the exact location of the malicious punycode to trip CVE-2022-3602, but a method to at least identify fuzzing occurring on these email paths. What does evil look like? it will start with",Risk Modifiers
stale_account_usage:<p>Detect long-inactive accounts that suddenly become active.</p>,"Windows Security
Authentication"
"steal_or_forge_authentication_certificates_behavior_identified:This correlation rule focuses on detecting potential threats associated with MITRE ATT&CK T1649 (Steal or Forge Authentication Certificates). The rule is designed to identify instances where 5 or more analytics related to Windows Certificate Services analytic story that are triggered within a specified time frame, which may indicate a potential attack in progress. By aggregating these analytics, security teams can swiftly respond to and investigate any suspicious activities, enhancing their ability to protect critical assets and prevent unauthorized access to sensitive information.",Risk Modifiers
substantial_increase_in_events:Alerts when a statistically significant increase in a particular event is observed.,Any Splunk Logs
substantial_increase_in_port_activity:Alerts when a statistically significant increase in events on a given port is observed.,Network Communication
"sunburst_correlation_dll_and_network_event:The malware sunburst will load the malicious dll by SolarWinds.BusinessLayerHost.exe. After a period of 12-14 days, the malware will attempt to resolve a subdomain of avsvmcloud.com. This detections will correlate both events.",Microsoft Sysmon Logs
supernova_webshell:This search aims to detect the Supernova webshell used in the SUNBURST attack.,Web Proxy
"suspicious_changes_to_file_associations:This search looks for changes to registry values that control Windows file associations, executed by a process that is not typical for legitimate, routine changes to this area.",Endpoint Detection and Response
"suspicious_computer_account_name_change:As part of the sAMAccountName Spoofing (CVE-2021-42278) and Domain Controller Impersonation (CVE-2021-42287) exploitation chain, adversaries need to create a new computer account name and rename it to match the name of a domain controller account without the ending '$'. In Windows Active Directory environments, computer account names always end with `$`. This analytic leverages Event Id 4781, `The name of an account was changed`, to identify a computer account rename event with a suspicious name that does not terminate with `$`. This behavior could represent an exploitation attempt of CVE-2021-42278 and CVE-2021-42287 for privilege escalation.",Windows Security
suspicious_container_image_name:<p>This search looks for image creation events in Kubernetes Audit logs and compares the image names against a known list of names that is likely to be suspicious. This technique is particularly useful for cryptomining attacks. </p><p><b>Alert Volume:</b> Low</p>,"AWS
GCP
Azure"
suspicious_copy_on_system32:This analytic is to detect a suspicious copy of file from systemroot folder of the windows OS. This technique is commonly used by APT or other malware as part of execution (LOLBIN) to run its malicious code using the available legitimate tool in OS. this type of event may seen or may execute of normal user in some instance but this is really a anomaly that needs to be check within the network.,Endpoint Detection and Response
"suspicious_curl_network_connection:The following analytic identifies the use of a curl contacting suspicious remote domains to checkin to Command And Control servers or download further implants. In the context of Silver Sparrow, curl is identified contacting s3.amazonaws.com. This particular behavior is common with MacOS adware-malicious software.",Endpoint Detection and Response
"suspicious_dllhost_no_command_line_arguments:The following analytic identifies DLLHost.exe with no command line arguments. It is unusual for DLLHost.exe to execute with no command line arguments present. This particular behavior is common with malicious software, including Cobalt Strike. During investigation, identify any network connections and parallel processes. Identify any suspicious module loads related to credential dumping or file writes. DLLHost.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",Endpoint Detection and Response
"suspicious_driver_loaded_path:This analytic will detect suspicious driver loaded paths. This technique is commonly used by malicious software like coin miners (xmrig) to register its malicious driver from notable directories where executable or drivers do not commonly exist. During triage, validate this driver is for legitimate business use. Review the metadata and certificate information. Unsigned drivers from non-standard paths is not normal, but occurs. In addition, review driver loads into `ntoskrnl.exe` for possible other drivers of interest. Long tail analyze drivers by path (outside of default, and in default) for further review.",Microsoft Sysmon Logs
suspicious_email_attachment_extensions:This search looks for emails that have attachments with suspicious file extensions.,Email
"suspicious_event_log_service_behavior:The following analytic utilizes Windows Event ID 1100 to identify when Windows event log service is shutdown. Note that this is a voluminous analytic that will require tuning or restricted to specific endpoints based on criticality. This event generates every time Windows Event Log service has shut down. It also generates during normal system shutdown. During triage, based on time of day and user, determine if this was planned. If not planned, follow through with reviewing parallel alerts and other data sources to determine what else may have occurred.",Windows Security
suspicious_file_write:The search looks for files created with names that have been linked to malicious activity.,Endpoint Detection and Response
"suspicious_gpupdate_no_command_line_arguments:The following analytic identifies gpupdate.exe with no command line arguments. It is unusual for gpupdate.exe to execute with no command line arguments present. This particular behavior is common with malicious software, including Cobalt Strike. During investigation, identify any network connections and parallel processes. Identify any suspicious module loads related to credential dumping or file writes. gpupdate.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",Endpoint Detection and Response
suspicious_icedid_rundll32_cmdline:This search is to detect a suspicious rundll32.exe commandline to execute dll file. This technique was seen in IcedID malware to load its payload dll with the following parameter to load encrypted dll payload which is the license.dat.,Endpoint Detection and Response
suspicious_image_creation_in_appdata_folder:This search is to detect a suspicious creation of image in appdata folder made by process that also has a file reference in appdata folder. This technique was seen in remcos rat that capture screenshot of the compromised machine and place it in the appdata and will be send to its C2 server. This TTP is really a good indicator to check that process because it is in suspicious folder path and image files are not commonly created by user in this folder path.,Endpoint Detection and Response
"suspicious_java_classes:This search looks for suspicious Java classes that are often used to exploit remote command execution in common Java frameworks, such as Apache Struts.",Web Server
"suspicious_kerberos_service_ticket_request:As part of the sAMAccountName Spoofing (CVE-2021-42278) and Domain Controller Impersonation (CVE-2021-42287) exploitation chain, adversaries will request and obtain a Kerberos Service Ticket (TGS) with a domain controller computer account as the Service Name. This Service Ticket can be then used to take control of the domain controller on the final part of the attack. This analytic leverages Event Id 4769, `A Kerberos service ticket was requested`, to identify an unusual TGS request where the Account_Name requesting the ticket matches the Service_Name field. This behavior could represent an exploitation attempt of CVE-2021-42278 and CVE-2021-42287 for privilege escalation.",Windows Security
"suspicious_linux_discovery_commands:This search, detects execution of suspicious bash commands from various commonly leveraged bash scripts like (AutoSUID, LinEnum, LinPeas) to perform discovery of possible paths of privilege execution, password files, vulnerable directories, executables and file permissions on a Linux host.\The search logic specifically looks for high number of distinct commands run in a short period of time.",Endpoint Detection and Response
"suspicious_microsoft_workflow_compiler_rename:The following analytic identifies a renamed instance of microsoft.workflow.compiler.exe. Microsoft.workflow.compiler.exe is natively found in C:\Windows\Microsoft.NET\Framework64\v4.0.30319 and is rarely utilized. When investigating, identify the executed code on disk and review. A spawned child process from microsoft.workflow.compiler.exe is uncommon. In any instance, microsoft.workflow.compiler.exe spawning from an Office product or any living off the land binary is highly suspect.",Endpoint Detection and Response
"suspicious_microsoft_workflow_compiler_usage:The following analytic identifies microsoft.workflow.compiler.exe usage. microsoft.workflow.compiler.exe is natively found in C:\Windows\Microsoft.NET\Framework64\v4.0.30319 and is rarely utilized. When investigating, identify the executed code on disk and review. It is not a commonly used process by many applications.",Endpoint Detection and Response
"suspicious_msbuild_path:The following analytic identifies msbuild.exe executing from a non-standard path. Msbuild.exe is natively found in C:\Windows\Microsoft.NET\Framework\v4.0.30319 and C:\Windows\Microsoft.NET\Framework64\v4.0.30319. Instances of Visual Studio will run a copy of msbuild.exe. A moved instance of MSBuild is suspicious, however there are instances of build applications that will move or use a copy of MSBuild.",Endpoint Detection and Response
"suspicious_msbuild_rename:The following analytic identifies renamed instances of msbuild.exe executing. Msbuild.exe is natively found in C:\Windows\Microsoft.NET\Framework\v4.0.30319 and C:\Windows\Microsoft.NET\Framework64\v4.0.30319. During investigation, identify the code executed and what is executing a renamed instance of MSBuild.",Endpoint Detection and Response
"suspicious_msbuild_spawn:The following analytic identifies wmiprvse.exe spawning msbuild.exe. This behavior is indicative of a COM object being utilized to spawn msbuild from wmiprvse.exe. It is common for MSBuild.exe to be spawned from devenv.exe while using Visual Studio. In this instance, there will be command line arguments and file paths. In a malicious instance, MSBuild.exe will spawn from non-standard processes and have no command line arguments. For example, MSBuild.exe spawning from explorer.exe, powershell.exe is far less common and should be investigated.",Endpoint Detection and Response
"suspicious_mshta_child_process:The following analytic identifies child processes spawning from  ""mshta.exe"". The search will return the first time and last time these command-line arguments were used for these executions, as well as the target system, the user, parent process ""mshta.exe"" and its child process.",Endpoint Detection and Response
"suspicious_mshta_spawn:The following analytic identifies wmiprvse.exe spawning mshta.exe. This behavior is indicative of a DCOM object being utilized to spawn mshta from wmiprvse.exe or svchost.exe. In this instance, adversaries may use LethalHTA that will spawn mshta.exe from svchost.exe.",Endpoint Detection and Response
"suspicious_plistbuddy_usage:The following analytic identifies the use of a native MacOS utility, PlistBuddy, creating or modifying a properly list (.plist) file. In the instance of Silver Sparrow, the following commands were executed:\- PlistBuddy -c ""Add :Label string init_verx"" ~/Library/Launchagents/init_verx.plist \- PlistBuddy -c ""Add :RunAtLoad bool true"" ~/Library/Launchagents/init_verx.plist \- PlistBuddy -c ""Add :StartInterval integer 3600"" ~/Library/Launchagents/init_verx.plist \- PlistBuddy -c ""Add :ProgramArguments array"" ~/Library/Launchagents/init_verx.plist \- PlistBuddy -c ""Add :ProgramArguments:0 string /bin/sh"" ~/Library/Launchagents/init_verx.plist \- PlistBuddy -c ""Add :ProgramArguments:1 string -c"" ~/Library/Launchagents/init_verx.plist \Upon triage, capture the property list file being written to disk and review for further indicators. Contain the endpoint and triage further.",Endpoint Detection and Response
"suspicious_plistbuddy_usage_via_osquery:The following analytic identifies the use of a native MacOS utility, PlistBuddy, creating or modifying a properly list (.plist) file. In the instance of Silver Sparrow, the following commands were executed:\- PlistBuddy -c ""Add :Label string init_verx"" ~/Library/Launchagents/init_verx.plist \- PlistBuddy -c ""Add :RunAtLoad bool true"" ~/Library/Launchagents/init_verx.plist \- PlistBuddy -c ""Add :StartInterval integer 3600"" ~/Library/Launchagents/init_verx.plist \- PlistBuddy -c ""Add :ProgramArguments array"" ~/Library/Launchagents/init_verx.plist \- PlistBuddy -c ""Add :ProgramArguments:0 string /bin/sh"" ~/Library/Launchagents/init_verx.plist \- PlistBuddy -c ""Add :ProgramArguments:1 string -c"" ~/Library/Launchagents/init_verx.plist \Upon triage, capture the property list file being written to disk and review for further indicators. Contain the endpoint and triage further.",OSQuery
"suspicious_process_dns_query_known_abuse_web_services:This analytic detects a suspicious process making a DNS query via known, abused text-paste web services, VoIP, instant messaging, and digital distribution platforms used to download external files. This technique is abused by adversaries, malware actors, and red teams to download a malicious file on the target host. This is a good TTP indicator for possible initial access techniques. A user will experience false positives if the following instant messaging is allowed or common applications like telegram or discord are allowed in the corporate network.",Microsoft Sysmon Logs
suspicious_process_file_path:The following analytic will detect a suspicious process running in a file path where a process is not commonly seen and is most commonly used by malicious software. This behavior has been used by adversaries where they drop and run an exe in a path that is accessible without admin privileges.,Endpoint Detection and Response
"suspicious_process_with_discord_dns_query:This analytic identifies a process making a DNS query to Discord, a well known instant messaging and digital distribution platform. Discord can be abused by adversaries, as seen in the WhisperGate campaign, to host and download malicious. external files. A process resolving a Discord DNS name could be an indicator of malware trying to download files from Discord for further execution.",Microsoft Sysmon Logs
"suspicious_reg_exe_process:This search looks for reg.exe being launched from a command prompt not started by the user. When a user launches cmd.exe, the parent process is usually explorer.exe. This search filters out those instances.",Endpoint Detection and Response
"suspicious_regsvr32_register_suspicious_path:Adversaries may abuse Regsvr32.exe to proxy execution of malicious code by using non-standard file extensions to load DLLs. Upon investigating, look for network connections to remote destinations (internal or external). Review additional parrallel processes and child processes for additional activity.",Endpoint Detection and Response
"suspicious_rundll32_dllregisterserver:The following analytic identifies rundll32.exe using dllregisterserver on the command line to load a DLL. When a DLL is registered, the DllRegisterServer method entry point in the DLL is invoked. This is typically seen when a DLL is being registered on the system. Not every instance is considered malicious, but it will capture malicious use of it. During investigation, review the parent process and parrellel processes executing. Capture the DLL being loaded and inspect further. Rundll32.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",Endpoint Detection and Response
"suspicious_rundll32_no_command_line_arguments:The following analytic identifies rundll32.exe with no command line arguments. It is unusual for rundll32.exe to execute with no command line arguments present. This particular behavior is common with malicious software, including Cobalt Strike. During investigation, identify any network connections and parallel processes. Identify any suspicious module loads related to credential dumping or file writes. Rundll32.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",Endpoint Detection and Response
suspicious_rundll32_plugininit:This search is to detect a suspicious rundll32.exe process with plugininit parameter. This technique is commonly seen in IcedID malware to execute its initial dll stager to download another payload to the compromised machine.,Endpoint Detection and Response
"suspicious_rundll32_rename:The following hunting analytic identifies renamed instances of rundll32.exe executing. rundll32.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64. During investigation, validate it is the legitimate rundll32.exe executing and what script content it is loading. This query relies on the original filename or internal name from the PE meta data. Expand the query as needed by looking for specific command line arguments outlined in other analytics.",Endpoint Detection and Response
"suspicious_rundll32_startw:The following analytic identifies rundll32.exe executing a DLL function name, Start and StartW, on the command line that is commonly observed with Cobalt Strike x86 and x64 DLL payloads. Rundll32.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64. Typically, the DLL will be written and loaded from a world writeable path or user location. In most instances it will not have a valid certificate (Unsigned). During investigation, review the parent process and other parallel application execution. Capture and triage the DLL in question. In the instance of Cobalt Strike, rundll32.exe is the default process it opens and injects shellcode into. This default process can be changed, but typically is not.",Endpoint Detection and Response
"suspicious_scheduled_task_from_public_directory:The following detection identifies Scheduled Tasks registering (creating a new task) a binary or script to run from a public directory which includes users\public, \programdata\ and \windows\temp. Upon triage, review the binary or script in the command line for legitimacy, whether an approved binary/script or not. In addition, capture the binary or script in question and analyze for further behaviors. Identify the source and contain the endpoint.",Endpoint Detection and Response
"suspicious_searchprotocolhost_no_command_line_arguments:The following analytic identifies searchprotocolhost.exe with no command line arguments. It is unusual for searchprotocolhost.exe to execute with no command line arguments present. This particular behavior is common with malicious software, including Cobalt Strike. During investigation, identify any network connections and parallel processes. Identify any suspicious module loads related to credential dumping or file writes. searchprotocolhost.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",Endpoint Detection and Response
"suspicious_sqlite3_lsquarantine_behavior:The following analytic identifies the use of a SQLite3 querying the MacOS preferences to identify the original URL the pkg was downloaded from. This particular behavior is common with MacOS adware-malicious software. Upon triage, review other processes in parallel for suspicious activity. Identify any recent package installations.",Endpoint Detection and Response
"suspicious_ticket_granting_ticket_request:As part of the sAMAccountName Spoofing (CVE-2021-42278) and Domain Controller Impersonation (CVE-2021-42287) exploitation chain, adversaries will need to request a Kerberos Ticket Granting Ticket (TGT) on behalf of the newly created and renamed computer account. The TGT request will be preceded by a computer account name event. This analytic leverages Event Id 4781, `The name of an account was changed` and event Id 4768 `A Kerberos authentication ticket (TGT) was requested` to correlate a sequence of events where the new computer account on event id 4781 matches the request account on event id 4768. This behavior could represent an exploitation attempt of CVE-2021-42278 and CVE-2021-42287 for privilege escalation.",Windows Security
suspicious_wav_file_in_appdata_folder:This analytic is to detect a suspicious creation of .wav file in appdata folder. This behavior was seen in Remcos RAT malware where it put the audio recording in the appdata\audio folde as part of data collection. this recording can be send to its C2 server as part of its exfiltration to the compromised machine. creation of wav files in this folder path is not a ussual disk place used by user to save audio format file.,Endpoint Detection and Response
"suspicious_wevtutil_usage:The wevtutil.exe application is the windows event log utility. This searches for wevtutil.exe with parameters for clearing the application, security, setup, trace or system event logs.",Endpoint Detection and Response
suspicious_writes_to_system_volume_information:This search detects writes to the 'System Volume Information' folder by something other than the System process.,Microsoft Sysmon Logs
suspicious_writes_to_windows_recycle_bin:This search detects writes to the recycle bin by a process other than explorer.exe.,Endpoint Detection and Response
"svchost_lolbas_execution_process_spawn:The following analytic identifies `svchost.exe` spawning a LOLBAS execution process. When adversaries execute code on remote endpoints abusing the Task Scheduler and creating a malicious remote scheduled task, the executed command is spawned as a child process of `svchost.exe`. The LOLBAS project documents Windows native binaries that can be abused by threat actors to perform tasks like executing malicious code. Looking for child processes of svchost.exe that are part of the LOLBAS project can help defenders identify lateral movement activity.",Endpoint Detection and Response
"system_info_gathering_using_dxdiag_application:This analytic is to detect a suspicious dxdiag.exe process command-line execution. Dxdiag is used to collect the system info of the target host. This technique has been used by Remcos RATS, various actors, and other malware to collect information as part of the recon or collection phase of an attack. This behavior should rarely be seen in a corporate network, but this command line can be used by a network administrator to audit host machine specifications. Thus in some rare cases, this detection will contain false positives in its results. To triage further, analyze what commands were passed after it pipes out the result to a file for further processing.",Endpoint Detection and Response
system_information_discovery_detection:Detect system information discovery techniques used by attackers to understand configurations of the system to further exploit it.,Endpoint Detection and Response
"system_processes_run_from_unexpected_locations:This search looks for system processes that typically execute from `C:\Windows\System32\` or `C:\Windows\SysWOW64`.  This may indicate a malicious process that is trying to hide as a legitimate process.\This detection utilizes a lookup that is deduped `system32` and `syswow64` directories from Server 2016 and Windows 10.\During triage, review the parallel processes - what process moved the native Windows binary? identify any artifacts on disk and review. If a remote destination is contacted, what is the reputation?",Endpoint Detection and Response
system_user_discovery_with_query:This analytic looks for the execution of `query.exe` with command-line arguments utilized to discover the logged user. Red Teams and adversaries alike may leverage `query.exe` to identify system users on a compromised endpoint for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
system_user_discovery_with_whoami:This analytic looks for the execution of `whoami.exe` without any arguments. This windows native binary prints out the current logged user. Red Teams and adversaries alike may leverage `whoami.exe` to identify system users on a compromised endpoint for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
threat_activity_detected:Alerts when any activity matching threat intelligence is detected.,"Endpoint Detection and Response
DNS
Network Communication
Malware Analysis
Web Proxy
Email"
time_provider_persistence_registry:This analytic is to detect a suspicious modification of time provider registry for persistence and autostart. This technique can allow the attacker to persist on the compromised host and autostart as soon as the machine boot up. This TTP can be a good indicator of suspicious behavior since this registry is not commonly modified by normal user or even an admin.,Endpoint Detection and Response
"tor_traffic:This search looks for network traffic identified as The Onion Router (TOR), a benign anonymity network which can be abused for a variety of nefarious purposes.",Network Communication
trickbot_named_pipe:this search is to detect potential trickbot infection through the create/connected named pipe to the system. This technique is used by trickbot to communicate to its c2 to post or get command during infection.,Microsoft Sysmon Logs
tt01:This threat is generated when an account (or multiple accounts) exhibit behavior outside of the normal baseline that indicates a compromise.,"Anti-Virus or Anti-Malware
Endpoint Detection and Response
IDS or IPS
Physical Security
Network Communication
DLP
DNS
Application Data
Authentication
Web Server
Box
Windows Security
Host-based IDS
Web Proxy
Email"
tt02:This threat is generated when an account or multiple accounts exhibit behavior outside of the normal baseline that indicates a compromise.,"Endpoint Detection and Response
Physical Security
Network Communication
DLP
Application Data
Authentication
Web Server
Box
Windows Security
Web Proxy
Email"
tt03:This threat is generated when a single account or multiple accounts have repeated login failures followed by malicious activity such as data movement or scanning activity.,"Anti-Virus or Anti-Malware
Endpoint Detection and Response
IDS or IPS
Network Communication
DLP
Authentication
Box
Windows Security
Host-based IDS
Web Proxy
Email"
tt04:This is a threat that looks for login anomalies such as a land speed violation followed by malicious activity like unusual machine access or unusual access time.,"Anti-Virus or Anti-Malware
IDS or IPS
Network Communication
DLP
Authentication
Box
Windows Security
Host-based IDS"
tt05:This is a threat rule that looks for potential webshell or external traffic followed up by data movement or unusual data access. Please see the associated anomalies to see what malicious data movement the threat rule is looking for.,"Endpoint Detection and Response
Network Communication
DLP
Web Server
Web Proxy
Email"
tt06:This threat is created by data exfiltration by excessive data transmissions by a device or user in a traditional network setting or via VPN.,"Endpoint Detection and Response
Network Communication
DLP
Application Data
Web Proxy
Email"
"tt07:This threat is based on the compromised account threat, however looks for data exfiltration after account takeover instead of suspicious behavior.","Anti-Virus or Anti-Malware
Endpoint Detection and Response
IDS or IPS
Network Communication
DLP
Authentication
Box
Host-based IDS
Web Proxy
Email"
"tt08:This threat is based on the compromised account threat, however looks for data exfiltration after account takeover instead of suspicious behavior.","Anti-Virus or Anti-Malware
Endpoint Detection and Response
IDS or IPS
Network Communication
DLP
Authentication
Box
Windows Security
Host-based IDS
Web Proxy
Email"
tt09:This threat combines staging data and data exfiltration.,"Anti-Virus or Anti-Malware
Endpoint Detection and Response
IDS or IPS
Network Communication
DLP
Application Data
Box
Host-based IDS
Web Proxy"
tt10:This threat is generated when an account or device exhibits behavior outside of the normal baseline. It further includes data exfiltration activity associated with that account.,"Anti-Virus or Anti-Malware
Endpoint Detection and Response
IDS or IPS
Network Communication
DLP
Application Data
Authentication
Box
Windows Security
Host-based IDS
Web Proxy
Email"
tt11:This threat is generated when an account (or multiple accounts) exhibit behavior outside of the normal baseline that indicates a compromise. It further differentiates itself by including data exfiltration associated with that account.,"Endpoint Detection and Response
Network Communication
DLP
Application Data
Authentication
Web Server
Windows Security
Web Proxy
Email"
tt12:This threat is generated when a device exhibits behavior outside of the normal baseline that indicates a compromise. It further differentiates itself by including data exfiltration associated with that device.,"Endpoint Detection and Response
Physical Security
Network Communication
DLP
Application Data
Authentication
Web Server
Windows Security
Web Proxy
Email"
tt13:This threat is generated when an account (or multiple accounts) exhibit behavior outside of the normal baseline. It further differentiates itself by including data exfiltration associated with that account.,"Endpoint Detection and Response
DNS
Network Communication
DLP
Application Data
Authentication
Web Server
Box
Windows Security
Web Proxy
Email"
tt14:This threat looks for a suspicious first step such as a suspicious powershell command or USB insertion.,"Anti-Virus or Anti-Malware
Endpoint Detection and Response
IDS or IPS
DNS
Network Communication
DLP
Authentication
Windows Security
Host-based IDS
Web Proxy
Email"
tt15:This threat is generated when a device exhibits behavior outside of the normal baseline that indicates a compromise.,"Endpoint Detection and Response
Physical Security
Network Communication
DLP
DNS
Application Data
Authentication
Web Server
Box
Windows Security
Web Proxy
Email"
tt16:This threat is generated when UBA detects activity from a user (or users) that looks like possible lateral movement in the network.,"Anti-Virus or Anti-Malware
IDS or IPS
Network Communication
DLP
Authentication
Windows Security
Host-based IDS
Email"
tt17:This threat looks detects network communication to malicious domains followed by suspicious activity by the device or user.,"Anti-Virus or Anti-Malware
Endpoint Detection and Response
IDS or IPS
Network Communication
DLP
Authentication
Windows Security
Host-based IDS
Web Proxy
Email"
"tt18:This threat is generated when a device exhibits behavior that could be attributed to malware. Examples of indicators of malware are beaconing, suspicous data movement, and unusual VPN access.","Anti-Virus or Anti-Malware
Endpoint Detection and Response
IDS or IPS
Network Communication
DLP
Authentication
Windows Security
Host-based IDS
Web Proxy
Email"
tt19:This threat is a simple rule to look for unusual badge access time as well as multiple failed badge accesses. UBA has the ability to create simple correlation threat rules based on anomalies. This threat is one such rule.,Physical Security
tt20:This threat brings to light users who are possible flight risks.,"Anti-Virus or Anti-Malware
Endpoint Detection and Response
IDS or IPS
Network Communication
DLP
Application Data
Box
Host-based IDS
Web Proxy
Email"
tt21:This threat is generated when a potential flight risk user has staged data but not yet exfiltrated it.,"Anti-Virus or Anti-Malware
IDS or IPS
Network Communication
DLP
Box
Host-based IDS
Web Proxy
Email"
tt22:This threat is generated when UBA detects a potential phishing attempt (email inbound or spear phishing) followed up by suspicious activity from the user or device.,"Anti-Virus or Anti-Malware
Endpoint Detection and Response
IDS or IPS
Network Communication
DLP
Authentication
Windows Security
Host-based IDS
Web Proxy
Email"
tt23:This threat is a simple rule to look for privilege escalation occurring after a suspicious powershell command. UBA has the ability to create simple correlation threat rules based on anomalies. This threat is one such rule.,Windows Security
tt24:This threat is generated when a publicly facing website is possibly under attack. Typical indicators in this threat are things like SQL injection.,Web Server
tt25:This threat is generated when a user (or group of users) exhibit behavior that indicates their account has been compromised or taken over by a remote adversary.,"Anti-Virus or Anti-Malware
IDS or IPS
Physical Security
Network Communication
DLP
Authentication
Box
Windows Security
Host-based IDS
Email"
tt26:Threat is generated when a user or device exhibits suspicious behavior after an intrusion.,"Endpoint Detection and Response
DNS
Network Communication
DLP
Application Data
Authentication
Web Server
Box
Windows Security
Web Proxy
Email"
tt27:This threat is generated when a user (or a group of users) exhibit suspicious behavior involving badge systems.,Physical Security
"tt28:This threat is generated when a user (or group of users) exhibit general suspicious behavior, specifically patterns of behavior that are outside the normal baseline for the user.","Anti-Virus or Anti-Malware
Endpoint Detection and Response
IDS or IPS
DNS
Network Communication
DLP
Application Data
Authentication
Web Server
Box
Windows Security
Host-based IDS
Web Proxy
Email"
tt29:This threat is generated when a user (or group of users) exhibit behavior that indicates the user is involved in data collection.,"Anti-Virus or Anti-Malware
Endpoint Detection and Response
IDS or IPS
Network Communication
DLP
Application Data
Box
Host-based IDS
Web Proxy
Email"
"tt30:This threat is generated when a suspicious domain or IP address is visited by a user; after which that user or device starts to display ""malware like"" activity.","Anti-Virus or Anti-Malware
Endpoint Detection and Response
IDS or IPS
DNS
Network Communication
DLP
Authentication
Windows Security
Host-based IDS
Web Proxy
Email"
"tt31:This threat is a catch all threat that contains external alarms from third party tools (e.g., IDS, IPS, DLP).","DLP
IDS or IPS
Anti-Virus or Anti-Malware
Host-based IDS"
tt32:This threat is generated when there is suspicious malware activity following strange HTTP redirects.,"Anti-Virus or Anti-Malware
Endpoint Detection and Response
IDS or IPS
Network Communication
DLP
Authentication
Windows Security
Host-based IDS
Web Proxy
Email"
tt33:This threat is generated when there is suspicious malware activity following a blacklisted or malicious domain visit.,"Anti-Virus or Anti-Malware
Endpoint Detection and Response
IDS or IPS
Network Communication
DLP
Authentication
Windows Security
Host-based IDS
Web Proxy
Email"
tt34:This threat is generated when there is suspicious activity surrounding a public cloud file share followed by malware activity.,"Anti-Virus or Anti-Malware
Endpoint Detection and Response
IDS or IPS
Network Communication
DLP
Authentication
Box
Windows Security
Host-based IDS
Web Proxy
Email"
tt35:This threat is generated when an internal website is accessed from outside the network. ,Web Server
uac_bypass_mmc_load_unsigned_dll:This search is to detect a suspicious loaded unsigned dll by MMC.exe application. This technique is commonly seen in attacker that tries to bypassed UAC feature or gain privilege escalation. This is done by modifying some CLSID registry that will trigger the mmc.exe to load the dll path,Microsoft Sysmon Logs
uac_bypass_with_colorui_com_object:This search is to detect a possible uac bypass using the colorui.dll COM Object. this technique was seen in so many malware and ransomware like lockbit where it make use of the colorui.dll COM CLSID to bypass UAC.,Microsoft Sysmon Logs
"uc0020:Any communication through the firewall not explicitly granted by policy could indicate either a misconfiguration or even malicious actions, putting your security and compliance at risk.",Network Communication
"uc0030:Detect a system with a malware detection that was not properly cleaned, as they carry a high risk of damage or disclosure of data.",Anti-Virus or Anti-Malware
uc0107:The GDPR requires that only authorized individuals access personal data. Alert when the account of a past employee is used to log into GDPR-tagged systems,"Windows Security
Authentication"
uc0108:Monitor your security controls and prove your GDPR compliance by detecting brute force (or password guessing) attacks on GDPR-tagged systems.,"Windows Security
Authentication"
uc0109:Monitor your security controls and prove your GDPR compliance by detecting slow and low brute force (or password guessing) attacks on GDPR-tagged systems that occur gradually over the day.,"Windows Security
Authentication"
"uc0110:GDPR requires an audit trail for all activities, which means we should be receiving events constantly. Find GDPR-tagged systems that are no longer reporting events but should be.",Any Splunk Logs
"uc0111:To ensure you have a GDPR-mandated audit trail with individual accounts for each person, detect when the same account is logged into twice in a short period of time but from locations very far away, to a GDPR-tagged system.","AWS
SFDC
Authentication"
uc0112:Any GDPR-tagged systems not receiving updates could jeopardize your GDPR status due to Article 32. Detect systems where the Windows Update service is disabled.,Patch Management
"uc0114:Alert Data Protection Officers to new systems that become involved in processing GDPR-scoped data via network communication logs, so DPOs can ensure the systems are authorized and documented.",Network Communication
"uc0115:Alerts when a GDPR-tagged system has out of date malware definitions, which would conflict with GDPR's requirement to maintain a secure environment.",Anti-Virus or Anti-Malware
"unauthorized_login_attempt:<p>Most login failures are due to failed passwords. Login failure to sensitive systems where the users simply aren't authorized, though, can indicate malicious intent. Detect that.</p>","Windows Security
Authentication"
unauthorized_web_browsing:<p>Detect users who are persistently attempting to violate your proxy policy.</p>,Web Proxy
uncommon_processes_on_endpoint:This search looks for applications on the endpoint that you have marked as uncommon.,Endpoint Detection and Response
uninstall_app_using_msiexec:This search is to detect a suspicious un-installation of application using msiexec. This technique was seen in conti leak tool and script where it tries to uninstall AV product using this commandline. This commandline to uninstall product is not a common practice in enterprise network.,Endpoint Detection and Response
"unknown_process_using_the_kerberos_protocol:The following analytic identifies a process performing an outbound connection on port 88 used by default by the network authentication protocol Kerberos. Typically, on a regular Windows endpoint, only the lsass.exe process is the one tasked with connecting to the Kerberos Distribution Center to obtain Kerberos tickets. Identifying an unknown process using this protocol may be evidence of an adversary abusing the Kerberos protocol.","DNS Global Load Balancer
Endpoint Detection and Response
Application Load Balancer
Network Communication"
unload_sysmon_filter_driver:Attackers often disable security tools to avoid detection. This search looks for the usage of process `fltMC.exe` to unload a Sysmon Driver that will stop sysmon from collecting the data.,Endpoint Detection and Response
"unloading_amsi_via_reflection:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable on critical endpoints or all. \This analytic identifies the behavior of AMSI being tampered with. Implemented natively in many frameworks, the command will look similar to `SEtValuE($Null,(New-OBJEct COLlECtionS.GenerIC.HAshSEt{[StrINg]))}$ReF=[ReF].AsSeMbLY.GeTTyPe(""System.Management.Automation.Amsi""+""Utils"")` taken from Powershell-Empire. \During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",Windows Security
unroutable_activity_detected:Alerts when activity to or from a host that is unrouteable is detected.,Network Communication
unsigned_image_loaded_by_lsass:This search detects loading of unsigned images by LSASS. Deprecated because too noisy.,Microsoft Sysmon Logs
unsuccessful_netbackup_backups:This search gives you the hosts where a backup was attempted and then failed.,Backup
untriaged_notable_events:Alerts when notable events have not been triaged,Ticket Management
unusual_aws_regions:Looks for activity in IaaS Regions that have not been used before across the organization.,"AWS
GCP
Azure"
"unusual_number_of_computer_service_tickets_requested:The following hunting analytic leverages Event ID 4769, `A Kerberos service ticket was requested`, to identify an unusual number of computer service ticket requests from one source. When a domain joined endpoint connects to a remote endpoint, it first will request a Kerberos Ticket with the computer name as the Service Name. An endpoint requesting a large number of computer service tickets for different endpoints could represent malicious behavior like lateral movement, malware staging, reconnaissance, etc.\The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual number of service requests. To customize this analytic, users can try different combinations of the `bucket` span time,  the calculation of the `upperBound` field as well as the Outlier calculation. This logic can be used for real time security monitoring as well as threat hunting exercises.\",Windows Security
"unusual_number_of_kerberos_service_tickets_requested:The following hunting analytic leverages Kerberos Event 4769, A Kerberos service ticket was requested, to identify a potential kerberoasting attack against Active Directory networks. Kerberoasting allows an adversary to request kerberos tickets for domain accounts typically used as service accounts and attempt to crack them offline allowing them to obtain privileged access to the domain.\The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual number service ticket requests. To customize this analytic, users can try different combinations of the `bucket` span time and the calculation of the `upperBound` field.",Windows Security
"unusual_number_of_remote_endpoint_authentication_events:The following hunting analytic leverages Event ID 4624, `An account was successfully logged on`, to identify an unusual number of remote authentication attempts coming from one source. An endpoint authenticating to a large number of remote endpoints could represent malicious behavior like lateral movement, malware staging, reconnaissance, etc.\The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual high number of authentication events. To customize this analytic, users can try different combinations of the `bucket` span time,  the calculation of the `upperBound` field as well as the Outlier calculation. This logic can be used for real time security monitoring as well as threat hunting exercises.\",Windows Security
unusual_volume_of_network_activity:Detects unusual network traffic that may be indicative of a DoS attack as indicated by a high number of unique sources or a high volume of firewall packets,Network Communication
unusually_long_command_line:Command lines that are extremely long may be indicative of malicious activity on your hosts.,Endpoint Detection and Response
"update_service:Splunk can detect the status of services, allowing us to find hosts where the Windows Update service is disabled.",Endpoint Detection and Response
user_discovery_with_env_vars_powershell:This analytic looks for the execution of `powershell.exe` with command-line arguments that leverage PowerShell environment variables to identify the current logged user. Red Teams and adversaries may leverage this method to identify the logged user on a compromised endpoint for situational awareness and Active Directory Discovery.,Endpoint Detection and Response
user_discovery_with_env_vars_powershell_script_block:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the use of PowerShell environment variables to identify the current logged user. Red Teams and adversaries may leverage this method to identify the logged user on a compromised endpoint for situational awareness and Active Directory Discovery.,Windows Security
"user_login_local_credentials:<p>Categorically, most interactive logins should use domain credentials. Detect when a new user logs on with local credentials that bypass most centralized logging and policy systems, but not Splunk!</p>",Windows Security
"user_login_unauthorized_geo:<p>For regulated environments, detect users logging into servers where they're not permitted.</p>","AWS
Authentication"
user_many_dlp_events:<p>Detect users that have many DLP events in a short period of time.</p>,DLP
usn_journal_deletion:The fsutil.exe application is a legitimate Windows utility used to perform tasks related to the file allocation table (FAT) and NTFS file systems. The update sequence number (USN) change journal provides a log of all changes made to the files on the disk. This search looks for fsutil.exe deleting the USN journal.,Endpoint Detection and Response
vbscript_execution_using_wscript_app:This analytic is to detect a suspicious wscript commandline to execute vbscript. This technique was seen in several malware to execute malicious vbs file using wscript application. commonly vbs script is associated to cscript process and this can be a technique to evade process parent child detections or even some av script emulation system.,Endpoint Detection and Response
verclsid_clsid_execution:This analytic is to detect a possible abuse of verclsid to execute malicious file through generate CLSID. This process is a normal application of windows to verify the CLSID COM object before it is instantiated by Windows Explorer. This hunting query can be a good pivot point to analyze what is he CLSID or COM object pointing too to check if it is a valid application or not.,Endpoint Detection and Response
"vmware_server_side_template_injection_hunt:The following hunting analytic identifies the server side template injection related to CVE-2022-22954, however is a variation found within the same endpoint of the URL scheme.","Web Server
Web Proxy"
vulnerability_scanner_detected_by_events:Detects a potential vulnerability scanner by detecting devices that have triggered a large number of unique events. Vulnerability scanners generally trigger a high number unique events when scanning a host since each vulnerability check tends to trigger a unique event.,IDS or IPS
vulnerability_scanner_detected_by_targets:Detects a potential vulnerability scanner by detecting devices that have triggered events against a large number of unique targets. Vulnerability scanners generally trigger events against a high number of unique hosts when they are scanning a network for vulnerable hosts.,IDS or IPS
"w3wp_spawning_shell:This query identifies a shell, PowerShell.exe or Cmd.exe, spawning from W3WP.exe, or IIS. In addition to IIS logs, this behavior with an EDR product will capture potential webshell activity, similar to the HAFNIUM Group abusing CVEs, on publicly available Exchange mail servers. During triage, review the parent process and child process of the shell being spawned. Review the command-line arguments and any file modifications that may occur. Identify additional parallel process, child processes, that may highlight further commands executed. After triaging, work to contain the threat and patch the system that is vulnerable.",Endpoint Detection and Response
watchlisted_event_observed:Alerts when an event is discovered including text has been identified as important. This rule triggers whenever an event is discovered with the tag of &quot;watchlist&quot;.,Any Splunk Logs
wbadmin_delete_system_backups:This search looks for flags passed to wbadmin.exe (Windows Backup Administrator Tool) that delete backup files. This is typically used by ransomware to prevent recovery.,Endpoint Detection and Response
"wbemprox_com_object_execution:The following analytic identifies a potential suspicious process loading a COM object from wbemprox.dll or faskprox.dll. The Microsoft Component Object Model (COM) is a platform-independent, distributed, object-oriented system for creating binary software components that can interact. This feature is being abused by several threat actors, adversaries or even red teamers to gain privilege escalation or even to evade detections. This TTP is a good indicator that a process is loading possible known .dll modules that were known for its COM object.",Microsoft Sysmon Logs
"web_jsp_request_via_url:The following analytic identifies the common URL requests used by a recent CVE - CVE-2022-22965, or Spring4Shell, to access a webshell on the remote webserver. The filename and cmd are arbitrary in this exploitation. Java will write a JSP to disk and a process will spawn from Java based on the cmd passed. This is indicative of typical web shell activity.","Web Server
Web Proxy"
web_servers_executing_suspicious_processes:This search looks for suspicious processes on all systems labeled as web servers.,Endpoint Detection and Response
"web_spring4shell_http_request_class_module:The following analytic identifies the payload related to Spring4Shell, CVE-2022-22965. This analytic uses Splunk Stream HTTP to view the http request body, form data. STRT reviewed all the current proof of concept code and determined the commonality with the payloads being passed used the same fields ""class.module.classLoader.resources.context.parent.pipeline.first"".",Web Server
"web_spring_cloud_function_functionrouter:The following analytic identifies activity related to the web application Spring Cloud Function that was recently idenfied as vulnerable. This is CVE-2022-22963. Multiple proof of concept code was released. The URI that is hit includes `functionrouter`. The specifics of the exploit include a status of 500. In this query we did not include it, but for filtering you can add Web.status=500. The exploit data itself (based on all the POCs) is located in the form_data field. This field will include all class.modules being called.","Web Server
Web Proxy"
web_uploads_to_noncorporate_sites_by_users:Alerts on high volume web uploads by a user to non-corporate domains.,Web Proxy
wermgr_process_connecting_to_ip_check_web_services:this search is designed to detect suspicious wermgr.exe process that tries to connect to known IP web services. This technique is know for trickbot and other trojan spy malware to recon the infected machine and look for its ip address without so much finger print on the commandline process. Since wermgr.exe is designed for error handling process of windows it is really suspicious that this process is trying to connect to this IP web services cause that maybe cause of some malicious code injection.,Microsoft Sysmon Logs
"wermgr_process_create_executable_file:this search is designed to detect potential malicious wermgr.exe process that drops or create executable file. Since wermgr.exe is an application trigger when error encountered in a process, it is really un ussual to this process to drop executable file. This technique is commonly seen in trickbot malware where it injects it code to this process to execute it malicious behavior like downloading other payload",Microsoft Sysmon Logs
"wermgr_process_spawned_cmd_or_powershell_process:This search is designed to detect suspicious cmd and powershell process spawned by wermgr.exe process. This suspicious behavior are commonly seen in code injection technique technique like trickbot to execute a shellcode, dll modules to run malicious behavior.",Endpoint Detection and Response
"wget_download_and_bash_execution:The following analytic identifies the use of wget on Linux or MacOS attempting to download a file from a remote source and pipe it to bash. This is typically found with coinminers and most recently with CVE-2021-44228, a vulnerability in Log4j.",Endpoint Detection and Response
"windows_access_token_manipulation_sedebugprivilege:The following analytic identifies a suspicious process enabling the ""SeDebugPrivilege"" privilege token. SeDebugPrivilege allows a process to inspect and adjust the memory of other processes, and has long been a security concern. SeDebugPrivilege allows the token bearer to access any process or thread, regardless of security descriptors, per Palantir. This technique is abused by adversaries to gain debug privileges with their malicious software to be able to access or debug a process to dump credentials or to inject malicious code.",Windows Security
windows_access_token_manipulation_winlogon_duplicate_token_handle:The following analytic identifies a process requesting access to winlogon.exe attempting to duplicate its handle. This technique was seen in several adversaries to gain privileges for their process. Winlogon.exe is the common targeted process of this technique because it contains high privileges and security tokens.,Microsoft Sysmon Logs
"windows_access_token_winlogon_duplicate_handle_in_uncommon_path:The following analytic identifies a process requesting access in winlogon.exe to duplicate its handle with a non-common or public process source path. This technique was seen where adversaries attempt to gain privileges to their process. This duplicate handle access technique, may refer to a malicious process duplicating the process token of winlogon.exe and using it to a new process instance. Winlogon.exe is the common targeted process of this technique because it contains high privileges and security tokens.",Microsoft Sysmon Logs
"windows_ad_adminsdholder_acl_modified:The following analytic identifies the modification of the Access Control List for the AdminSDHolder object within a Windows domain. Specifically, the detection triggers on the addition of a new rule to the existing ACL. AdminSDHolder is an object located in the System Partition in Active Directory and is used as a security template for objects that are members of certain privileged groups. Objects in these groups are enumerated and any objects with security descriptors that dont match the AdminSDHolder ACL are flagged for updating. The Security Descriptor propagator (SDProp) process runs every 60 minutes on the PDC Emulator and re-stamps the object Access Control List (ACL) with the security permissions set on the AdminSDHolder. An adversary who has obtained privileged access to a Windows Domain may modify the AdminSDHolder ACL to establish persistence and allow an unprivileged user to take control of a domain.",Windows Security
"windows_ad_cross_domain_sid_history_addition:The following analytic looks for changes to the sIDHistory AD attribute of user or computer objects within different domains. The SID history AD attribute allows users to inherit permissions from a separate AD account without group changes. Initially developed for access continuity when migrating user accounts to different domains, this attribute can also be abused by adversaries for inter-domain privilege escalation and persistence.",Windows Security
windows_ad_domain_controller_audit_policy_disabled:This analytic looks for audit policies being disabled on a domain controller.,Windows Security
"windows_ad_domain_controller_promotion:This analytic identifies a genuine DC promotion event. Identifying when a computer assigns itself the necessary SPNs to function as a domain controller. Note these events are triggered on the existing domain controllers, not the newly joined domain controller. This detection will serve to identify rogue DCs added to the network. There are 2x detections within this analytic story which identify DCShadow attacks, if you do not currently possess the logging for these detections, remove the where clause within this detection to identify DCShadow activity.",Windows Security
"windows_ad_domain_replication_acl_addition:This analytic detects the addition of the permissions necessary to perform a DCSync attack. In order to replicate AD objects, the initiating user or computer must have the following permissions on the domain. - DS-Replication-Get-Changes - DS-Replication-Get-Changes-All Certain Sync operations may require the additional permission of DS-Replication-Get-Changes-In-Filtered-Set. By default, adding DCSync permissions via the Powerview Add-ObjectACL operation adds all 3. This alert identifies where this trifecta has been met, and also where just the base level requirements have been met.",Windows Security
"windows_ad_dsrm_account_changes:Aside from being used to promote genuine domain controllers, the DSRM (Directory Services Restore Mode) account can be used to persist within a Domain. A DC can be configured to allow the DSRM account to logon & be used in the same way as a local administrator account. This detection is looking for alterations to the behaviour of the account via registry.",Endpoint Detection and Response
"windows_ad_dsrm_password_reset:Aside from being used to promote genuine domain controllers, the DSRM (Directory Services Restore Mode) account can be used to persist within a Domain. A DC can be configured to allow the DSRM account to logon & be used in the same way as a local administrator account. This detection is looking for any password reset attempts against that account.",Change Events Data
windows_ad_privileged_account_sid_history_addition:This detection identifies when the SID of a privileged user is added to the SID History attribute of another user. Useful for tracking SID history abuse across multiple domains. This detection leverages the Asset and Identities framework. See the implementation section for further details on configuration.,Windows Security
"windows_ad_replication_request_initiated_by_user_account:This alert was written to detect activity associated with the DCSync attack. When a domain controller receives a replication request, the user account permissions are validated, however no checks are performed to validate the request was initiated by a Domain Controller. Once an attacker gains control of an account with the necessary privileges, they can request password hashes for any or all users within the domain. This alert detects when a user account creates a handle to domainDNS with the necessary replication permissions.",Windows Security
"windows_ad_replication_request_initiated_from_unsanctioned_location:This alert was written to detect activity associated with the DCSync attack performed by computer accounts. When a domain controller receives a replication request, the account permissions are validated, however no checks are performed to validate the request was initiated by a Domain Controller. Once an attacker gains control of an account with the necessary privileges, they can request password hashes for any or all users within the domain. This alert detects when a computer account account creates a handle to domainDNS with the necessary replication permissions. These requests are then filtered to exclude where the events originate from a known domain controller IP address.",Windows Security
windows_ad_replication_service_traffic:This search looks for evidence of Active Directory replication traffic [MS-DRSR] from unexpected sources. This traffic is often seen exclusively between Domain Controllers for AD database replication. Any detections from non-domain controller source to a domain controller may indicate the usage of DCSync or DCShadow credential dumping techniques.,Network Communication
"windows_ad_rogue_domain_controller_network_activity:This detection is looking at zeek wiredata for specific replication RPC calls being performed from a device which is not a domain controller. If you would like to capture these RPC calls using Splunk Stream, please vote for my idea here https://ideas.splunk.com/ideas/APPSID-I-619 ;)",Zeek
"windows_ad_same_domain_sid_history_addition:The following analytic looks for changes to the sIDHistory AD attribute of user or computer objects which exist within the same domain. The SID history AD attribute allows users to inherit permissions from a separate AD account without group changes. Initially developed for access continuity when migrating user accounts to different domains, this attribute can also be abused by adversaries to stealthily grant access to a backdoor account within the same domain. This analytic was written to pick up on activity via Mimikatz sid::patch. Please note there are additional avenues to abuse SID history such as DCShadow & Golden / Diamond tickets which won't be detected using these event codes.",Windows Security
"windows_ad_serviceprincipalname_added_to_domain_account:The following analytic identifies the addition of a Service Principal Name to a domain account. While this event may be part of a legitimate action part of certain administrative operations, it may also be evidence of a persistence attack. Domain accounts with Servce Principal Names are vulnerable to a technique called Kerberoasting that enables attackers to potentially obtain the cleartext password of the account by performing offline cracking. An adversary who has obtained privileged access to a domain environment may add an SPN to a privileged account to then leverage the Kerberoasting technique and attempt to obtain its clertext password.",Windows Security
"windows_ad_short_lived_domain_account_serviceprincipalname:The following analytic identifies the addition of a Service Principal Name to a domain account that is quickly deleted within 5 minutes or less. While this event may be part of a legitimate action part of certain administrative operations, it may also be evidence of a persistence attack. Domain accounts with Service Principal Names are vulnerable to a technique called Kerberoasting that enables attackers to potentially obtain the cleartext password of the account by performing offline cracking. An adversary who has obtained privileged access to a domain environment may add an SPN to a privileged account to then leverage the Kerberoasting technique and attempt to obtain its clertext password. To clean things up, the adversary may delete the SPN which will trigger this detection.",Windows Security
"windows_ad_short_lived_domain_controller_spn_attribute:The following analytic identifies when either a global catalog SPN or a DRS RPC SPN are temporarily added to an Active Directory computer object, both of which can be evidence of a DCShadow attack. DCShadow allows an attacker who has obtained privileged access to register a rogue Domain Controller (DC). Once registered, the rogue DC may be able to inject and replicate changes into the AD infrastructure for any domain object, including credentials and keys. This technique was initially released in 2018 by security researchers Benjamin Delpy and Vincent Le Toux. No event logs are written for changes to AD attributes, allowing for stealthy backdoors to be implanted in the domain, or metadata such as timestamps overwritten to cover tracks.",Windows Security
"windows_ad_short_lived_server_object:The following analytic identifies a change in an Active Directory environment that could represent evidence of the DCShadow attack. DCShadow allows an attacker who has obtained privileged access to register a rogue Domain Controller (DC). Once registered, the rogue DC may be able to inject and replicate changes in the AD infrastructure for any domain object, including credentials and keys. This technique was initially released in 2018 by security researchers Benjamin Delpy and Vincent Le Toux. Specifically, the detection will trigger when a possible rogue Domain Controller computer object is created and quickly deleted within 30 seconds or less in an Active Directory domain. This behavior was identfied by simulating the DCShadow attack with Mimikatz.",Windows Security
"windows_ad_sid_history_attribute_modified:The following analytic leverages event code `5136` to identify a modification of the SID History AD attribute. The SID history AD attribute allows users to inherit permissions from a separate AD account without group changes. Initially developed for access continuity when migrating user accounts to different domains, this attribute can also be abused by adversaries to stealthily grant access to a backdoor account within the same domain.",Windows Security
"windows_adfind_exe:This search looks for the execution of `adfind.exe` with command-line arguments that it uses by default specifically the filter or search functions. It also considers the arguments necessary like objectcategory, see readme for more details: https://www.joeware.net/freetools/tools/adfind/usage.htm. AdFind.exe is a powerful tool that is commonly used for querying and retrieving information from Active Directory (AD). While it is primarily designed for AD administration and management, it has been seen used before by Wizard Spider, FIN6 and actors whom also launched SUNBURST.",Endpoint Detection and Response
"windows_administrative_shares_accessed_on_multiple_hosts:The following analytic leverages Event IDs 5140 or 5145 to identify a source computer accessing windows administrative shares (C$, Admin$ and IPC$ ) across a large number remote endpoints. Specifically, the logic will trigger when a source endpoint accesses administrative shares across 30 or more target computers within a 5 minute timespan. This behavior could represent an adversary who is enumerating network shares across an Active Directory environment in the search for sensitive files, a common technique leveraged by red teamers and threat actors. As environments differ across organizations, security teams should customize the thresholds of this detection as needed.",Windows Security
"windows_admon_default_group_policy_object_modified:The following analytic leverages Splunks Admon to identify the modification of a default Group Policy Object. A fresh installation of an Active Directory network will typically contain two default group policy objects `Default Domain Controllers Policy` and `Default Domain Policy`. The default domain controllers policy is used to enforce and set policies to all the domain controllers within the domain environment. The default domain policy is linked to all users and computers by default. An adversary who has obtained privileged access to an Active Directory network may modify the default group policy objects to obtain further access, deploy persistence or execute malware across a large number of hosts. Security teams should monitor the modification of the default GPOs.",Application Data
"windows_admon_group_policy_object_created:The following analytic leverages Splunks Admon to identify the creation of a new Group Policy Object. With GPOs, system administrators can manage and configure applications, software operations, and user settings throughout an entire organization. GPOs can be abused and leveraged by adversaries to escalate privileges or deploy malware across an Active Directory network. As an example, the Lockbit ransomware malware will create new group policies on the domain controller that are then pushed out to every device on the network. Security teams should monitor the creation of new Group Policy Objects.",Application Data
"windows_apache_benchmark_binary:The following analytic identifies a default behavior of a MetaSploit payload. MetaSploit uses Apache Benchmark to generate payloads. The payloads contain standard artifacts including ""Apache Benchmark"" and the original file name is always ab.exe. During triage, review the process and it's path. It is possible network connections spawned from it. Review parallel processes for further behaviors.",Endpoint Detection and Response
windows_app_layer_protocol_qakbot_namedpipe:The following analytic identifies a suspicious process creating or connecting to a possible Qakbot named pipe . This technique was seen in Qakbot malware that creates named pipe after injecting its code in legitimate process to communicate on other process that also has an injected code to steal information on the compromised host. This Anomaly detection can be a good pivot for possible Qakbot infection. This detection looks for possible random generated named pipe (in GUID form) created by known process being abused by Qakbot.,Microsoft Sysmon Logs
"windows_app_layer_protocol_wermgr_connect_to_namedpipe:The following analytic identifies a suspicious wermgr.exe process creating or connecting to a named pipe. Wermgr.exe is part of Windows OS Problem reporting application responsible for reporting problems, fault or error happen on the Windows OS. This file is being abused by several Threat actors and malware such as Trickbot and Qakbot to execute their malicious code. This anomaly detection can be a good pivot on possible wermgr.exe processes having injected malicious code that might be related to qakbot infection that communicates via named pipe.",Microsoft Sysmon Logs
"windows_application_layer_protocol_rms_radmin_tool_namedpipe:The following analytic identifies the use of default or publicly known named pipes used by RMX remote admin tool. A named pipe is a named, one-way or duplex pipe for communication between the pipe server and one or more pipe clients. RMX Tool uses named pipes in many way as part of its communication for its server and client component. This tool was abuse by several adversaries and malware like Azorult to collect data to the targeted host. This TTP is a good indicator that this tool was install in production premise and need to check if the user has a valid reason why it need to install this legitimate application.",Microsoft Sysmon Logs
"windows_autostart_execution_lsass_driver_registry_modification:The following analytic identifies the abuse of two undocumented registry keys that allow for a DLL to load into lsass.exe to potentially capture credentials. Upon successful modification of \CurrentControlSet\Services\NTDS\DirectoryServiceExtPt or \CurrentControlSet\Services\NTDS\LsaDbExtPt, a DLL either remote or local will be set as the value and load up into lsass.exe. Based on POC code a text file may be written to disk with credentials.",Endpoint Detection and Response
"windows_binary_proxy_execution_mavinject_dll_injection:Adversaries may abuse mavinject.exe to inject malicious DLLs into running processes (i.e. Dynamic-link Library Injection), allowing for arbitrary code execution (ex. C:\Windows\system32\mavinject.exe PID /INJECTRUNNING PATH_DLL). In addition to Dynamic-link Library Injection, Mavinject.exe can also be abused to perform import descriptor injection via its /HMODULE command-line parameter (ex. mavinject.exe PID /HMODULE=BASE_ADDRESS PATH_DLL ORDINAL_NUMBER). This command would inject an import table entry consisting of the specified DLL into the module at the given base address. During triage, review file modifcations and parallel processes.",Endpoint Detection and Response
"windows_boot_or_logon_autostart_execution_in_startup_folder:This analytic will identify suspicious files dropped or created in the Windows %startup% folder. This technique is a common way to gain persistence on a targeted host. Threat actor, adversaries and red teamer abuse this folder path to automatically execute their malicious sample upon boot or restart of the infected host. This TTP detection is a good indicator that a suspicious process wants to gain persistence on the targeted host. We suggest to verify the process name by using the process guid field, the file created and also the user and the computer name for further investigation.",Endpoint Detection and Response
"windows_bootloader_inventory:The following hunting query utilizes a PowerShell Scripted input that captures the bootloader paths for each Windows endpoint it is deployed to. The template inputs.conf is located in the references link. By default, it only captures the path, but may be modified to capture everything that BCDedit provides. It can be verbose, but may be worth it.",Windows Security
windows_cached_domain_credentials_reg_query:The following analytic identifies a process command line related to the discovery of cache domain credential logon count in the registry. This Technique was being abused by several post exploitation tool like Winpeas where it query CachedLogonsCount registry value in Winlogon registry. This value can be good information about the login caching setting on the Windows OS target host. A value of 0 means login caching is disable and values > 50 caches only 50 login attempts. By default all versions of Windows 10 save cached logins except Windows Server 2008.,Endpoint Detection and Response
"windows_change_default_file_association_for_no_file_ext:This analytic is developed to detect suspicious process commandline to change or set the default file association of a file without file extension with notepad.exe. This technique was seen in some APT and ransomware Prestige where it set/modify the default process to run file association, like .txt to notepad.exe.",Endpoint Detection and Response
"windows_com_hijacking_inprocserver32_modification:The following analytic identifies the use of reg.exe performing an add to the InProcServer32, which may be related to COM hijacking. Adversaries can use the COM system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary's code will be executed instead.",Endpoint Detection and Response
windows_command_and_scripting_interpreter_hunting_path_traversal:The following analytic identifies path traversal command-line execution and should be used to tune and driver other more higher fidelity analytics. This technique was seen in malicious document that execute malicious code using msdt.exe and path traversal technique that serve as defense evasion. This Hunting query is a good pivot to look for possible suspicious process and command-line that runs execute path traversal technique to run malicious code. This may help you to find possible downloaded malware or other lolbin execution.,Endpoint Detection and Response
windows_command_and_scripting_interpreter_path_traversal_exec:The following analytic identifies path traversal command-line execution. This technique was seen in malicious document that execute malicious code using msdt.exe and path traversal technique that serve as defense evasion. This TTP is a good pivot to look for more suspicious process and command-line that runs before and after this execution. This may help you to find possible downloaded malware or other lolbin execution.,Endpoint Detection and Response
"windows_command_shell_dcrat_forkbomb_payload:The following analytic identifies DCRat ""forkbomb"" payload feature. This technique was seen in dark crystal RAT backdoor capabilities where it will execute several cmd child process executing ""notepad.exe & pause"". This analytic detects the multiple cmd.exe and child process notepad.exe  execution using batch script in the targeted host within 30s timeframe. this TTP can be a good pivot to check DCRat infection.",Endpoint Detection and Response
"windows_command_shell_fetch_env_variables:The following analytic identifies a suspicious process command line fetching the environment variables with a non-shell parent process. This technique was seen in qakbot malware where it fetches the environment variable in the target or compromised host. This TTP detection is a good pivot of possible malicious behavior since the command line is executed by a common non-shell process like cmd.exe , powershell.exe and many more. This can also be a good sign that the parent process has a malicious code injected to it to execute this command.",Endpoint Detection and Response
"windows_computer_account_created_by_computer_account:The following analytic identifes a Computer Account creating a new Computer Account with specific a Service Principle Name - ""RestrictedKrbHost"". The RestrictedKrbHost service class allows client applications to use Kerberos authentication when they do not have the identity of the service but have the server name.",Windows Security
"windows_computer_account_requesting_kerberos_ticket:The following analytic identifies a ComputerAccount requesting a Kerberos Ticket. typically, a user account requests a Kerberos ticket. This behavior was identified with KrbUpRelay, but additional Kerberos attacks have exhibited similar behavior.",Windows Security
"windows_computer_account_with_spn:The following analytic identifies two SPNs, HOST and RestrictedKrbHost, added using the KrbRelayUp behavior. This particular behavior has been found in other Kerberos based attacks.",Windows Security
windows_connhost_exe_started_forcefully:The search looks for the Console Window Host process (connhost.exe) executed using the force flag -ForceV1. This is not regular behavior in the Windows OS and is often seen executed by the Ryuk Ransomware. DEPRECATED This event is actually seen in the windows 10 client of attack_range_local. After further testing we realized this is not specific to Ryuk. ,Endpoint Detection and Response
"windows_create_local_account:The following analytic identifies a new local user account added to a computer. Note that, this should be restricted to critical assets.",Change Events Data
"windows_credential_dumping_lsass_memory_createdump:The following analytic identifies the use of CreateDump.exe being used to perform a process dump. This particular binary is not native to Windows, but is found to be brought in my many different third party applications including PowerShell 7.",Endpoint Detection and Response
"windows_credentials_from_password_stores_chrome_extension_access:The following analytic identifies a non-chrome process accessing Chrome extensions file. This file stores various settings and information related to the browser's extensions on your computer. Threat actor, adversaries and malware author also abused this file to attempt to extract sensitive information from the chrome browser of the target host. This anomaly detection can be a good pivot of analysis for suspicious process aside from chrome.exe and explorer.exe executable.",Windows Security
"windows_credentials_from_password_stores_chrome_localstate_access:The following analytic identifies a non-chrome process accessing Chrome user data ""local state"" file. This file stores various settings and information related to the browser's operation on your computer. Threat actor, adversaries and malware author also abused this file to attempt to extract the encrypted master key to decrypt password saved in chrome browser. This anomaly detection can be a good pivot of analysis for suspicious process aside from chrome.exe and explorer.exe executable.",Windows Security
"windows_credentials_from_password_stores_chrome_login_data_access:The following analytic identifies a non-chrome process accessing Chrome user data ""login data"" file. This sqlite db file stores various information related to the browser's operation on your computer. Threat actor, adversaries and malware author also abused this file to attempt to extract and decrypt password saved in chrome browser. This anomaly detection can be a good pivot of analysis for suspicious process aside from chrome.exe and explorer.exe executable.",Windows Security
"windows_credentials_from_password_stores_query:The following analytic identifies a process execution of Windows OS cmdkey.exe tool. This tool is being abused or used by several post exploitation tool such as winpeas that being used by ransomware prestige to list stored user names, passwords or credentials in the targeted Windows OS host. This information can be used by the attacker to gain privilege escalation and persistence in the targeted hosts for further attacks.",Endpoint Detection and Response
"windows_credentials_in_registry_reg_query:The following analytic identifies a process command line related to the discovery of possible password or credentials in the registry. This technique is being abused by adversaries or post exploitation tools like winpeas to steal credentials in the registry in the targeted host. Registry can contain several sensitive information like username and credentials that can be used for privilege escalation, persistence or even in lateral movement. This Anomaly detection can be a good pivot to detect a suspicious process querying a registry related to password or private keys.",Endpoint Detection and Response
"windows_curl_download_to_suspicious_path:The following analytic identifies the use of Windows Curl.exe downloading a file to a suspicious location. \-O or --output is used when a file is to be downloaded and placed in a specified location. \During triage, review parallel processes for further behavior. In addition, identify if the download was successful. If a file was downloaded, capture and analyze.",Endpoint Detection and Response
"windows_curl_upload_to_remote_destination:The following analytic identifies the use of Windows Curl.exe uploading a file to a remote destination. \`-T` or `--upload-file` is used when a file is to be uploaded to a remotge destination. \`-d` or `--data` POST is the HTTP method that was invented to send data to a receiving web application, and it is, for example, how most common HTML forms on the web work. \HTTP multipart formposts are done with `-F`, but this appears to not be compatible with the Windows version of Curl. Will update if identified adversary tradecraft. \Adversaries may use one of the three methods based on the remote destination and what they are attempting to upload (zip vs txt). During triage, review parallel processes for further behavior. In addition, identify if the upload was successful in network logs. If a file was uploaded, isolate the endpoint and review.",Endpoint Detection and Response
"windows_data_destruction_recursive_exec_files_deletion:The following analytic identifies a suspicious process recursively deleting files in a compromised host. This behavior was seen in several destructive malware, wiper like caddy wiper, doublezero, and now swiftslicer that delete or overwrite files with random generated strings to make it unrecoverable. This analytic can also catch a possible recursive file write on multiple files using Sysmon Event 23. Sysmon treats the modified file as a deleted one as soon as it was overwritten. This analytic can be a good indicator that a possible destructive malware is running in a host machine or a big software application is being uninstalled.",Microsoft Sysmon Logs
"windows_defacement_modify_transcodedwallpaper_file:The following analytic identifies a modification to the Transcodedwallpaper file in the wallpaper theme directory to change the wallpaper of the host machine. This technique was seen in adversaries attempting to deface or change the desktop wallpaper of the targeted host. During our testing, the common process that affects or changes the wallpaper if a user changes it via desktop personalized setting is explorer.exe.",Endpoint Detection and Response
"windows_default_group_policy_object_modified:The following analytic leverages Event ID 5136 to identify the modification of a default Group Policy Object. A fresh installation of an Active Directory network will typically contain two default group policy objects `Default Domain Controllers Policy` and `Default Domain Policy`. The default domain controllers policy is used to enforce and set policies to all the domain controllers within the domain environment. The default domain policy is linked to all users and computers by default. An adversary who has obtained privileged access to an Active Directory network may modify the default group policy objects to obtain further access, deploy persistence or execute malware across a large number of hosts. Security teams should monitor the modification of the default GPOs.",Windows Security
"windows_default_group_policy_object_modified_with_gpme:The following analytic leverages the Endpoint datamodel to identify the potential edition of a default Group Policy Object. A fresh installation of an Active Directory network will typically contain two default group policy objects `Default Domain Controllers Policy` and `Default Domain Policy`. The default domain controllers policy is used to enforce and set policies to all the domain controllers within the domain environment. The default domain policy is linked to all users and computers by default. An adversary who has obtained privileged access to an Active Directory network may modify the default group policy objects to obtain further access, deploy persistence or execute malware across a large number of hosts. Security teams should monitor the edition of the default GPOs.",Endpoint Detection and Response
"windows_defender_exclusion_registry_entry:This analytic will detect a suspicious process that modify a registry related to windows defender exclusion feature. This registry is abused by adversaries, malware author and red teams to bypassed Windows Defender Anti-Virus product by excluding folder path, file path, process, extensions and etc. from its real time or schedule scan to execute their malicious code. This is a good indicator for a defense evasion and to look further for events after this behavior.",Endpoint Detection and Response
"windows_deleted_registry_by_a_non_critical_process_file_path:This analytic is to detect deletion of registry with suspicious process file path. This technique was seen in Double Zero wiper malware where it will delete all the subkey in HKLM, HKCU and HKU registry hive as part of its destructive payload to the targeted hosts. This anomaly detections can catch possible malware or advesaries deleting registry as part of defense evasion or even payload impact but can also catch for third party application updates or installation. In this scenario false positive filter is needed.",Endpoint Detection and Response
"windows_disable_change_password_through_registry:This analytic is to detect a suspicious registry modification to disable change password feature of the windows host. This registry modification may disables the Change Password button on the Windows Security dialog box (which appears when you press Ctrl+Alt+Del). As a result, users cannot change their Windows password on demand. This technique was seen in some malware family like ransomware to prevent the user to change the password after ownning the network or a system during attack. This windows feature may implemented by administrator to prevent normal user to change the password of a critical host or server, In this type of scenario filter is needed to minimized false positive.",Endpoint Detection and Response
windows_disable_lock_workstation_feature_through_registry:This analytic is to detect a suspicious registry modification to disable Lock Computer windows features. This registry modification prevent the user from locking its screen or computer that are being abused by several malware for example ransomware. This technique was used by threat actor to make its payload more impactful to the compromised host.,Endpoint Detection and Response
"windows_disable_logoff_button_through_registry:This analytic is to detect a suspicious registry modification to disable logoff feature in windows host. This registry when enable will prevent users to log off of the system by using any method, including programs run from the command line, such as scripts. It also disables or removes all menu items and buttons that log the user off of the system. This technique was seen abused by ransomware malware to make the compromised host un-useful and hard to remove other registry modification made on the machine that needs restart to take effect. This windows feature may implement by administrator in some server where shutdown is critical. In that scenario filter of machine and users that can modify this registry is needed.",Endpoint Detection and Response
"windows_disable_memory_crash_dump:The following analytic identifies a process that is attempting to disable the ability on Windows to generate a memory crash dump. This was recently identified being utilized by HermeticWiper. To disable crash dumps, the value must be set to 0. This feature is typically modified to perform a memory crash dump when a computer stops unexpectedly because of a Stop error (also known as a blue screen, system crash, or bug check).",Endpoint Detection and Response
windows_disable_notification_center:The following search identifies a modification of registry to disable the windows notification center feature in a windows host machine. This registry modification removes notification and action center from the notification area on the task bar. This modification are seen in RAT malware to cover their tracks upon downloading other of its component or other payload.,Endpoint Detection and Response
windows_disable_shutdown_button_through_registry:This analytic is to detect a suspicious registry modification to disable shutdown button on the logon user. This technique was seen in several malware especially in ransomware family like killdisk malware variant to make the compromised host un-useful and hard to remove other registry modification made on the machine that needs restart to take effect. This windows feature may implement by administrator in some server where shutdown is critical. In that scenario filter of machine and users that can modify this registry is needed.,Endpoint Detection and Response
windows_disable_windows_event_logging_disable_http_logging:The following analytic identifies AppCmd.exe being utilized to disable HTTP logging on IIS. Adversaries may perform this action to disable logging and delete the logs so remove any trace or events on disk.,Endpoint Detection and Response
windows_disable_windows_group_policy_features_through_registry:This analytic is to detect a suspicious registry modification to disable windows features. These techniques are seen in several ransomware malware to impair the compromised host to make it hard for analyst to mitigate or response from the attack. Disabling these known features make the analysis and forensic response more hard. Disabling these feature is not so common but can still be implemented by the administrator for security purposes. In this scenario filters for users that are allowed doing this is needed.,Endpoint Detection and Response
"windows_disableantispyware_registry:The search looks for the Registry Key DisableAntiSpyware set to disable. This is consistent with Ryuk infections across a fleet of endpoints. This particular behavior is typically executed when an ransomware actor gains access to an endpoint and beings to perform execution. Usually, a batch (.bat) will be executed and multiple registry and scheduled task modifications will occur. During triage, review parallel processes and identify any further file modifications. Endpoint should be isolated.",Endpoint Detection and Response
"windows_diskcryptor_usage:The following analytic identifies DiskCryptor  process name of dcrypt.exe or internal name dcinst.exe. This utility has been utilized by adversaries to encrypt disks manually during an operation. In addition, during install, a dcrypt.sys driver is installed and requires a reboot in order to take effect. There are no command-line arguments used.",Endpoint Detection and Response
"windows_diskshadow_proxy_execution:DiskShadow.exe is a Microsoft Signed binary present on Windows Server. It has a scripting mode intended for complex scripted backup operations. This feature also allows for execution of arbitrary unsigned code. This analytic looks for the usage of the scripting mode flags in executions of DiskShadow. During triage, compare to known backup behavior in your environment and then review the scripts called by diskshadow.",Endpoint Detection and Response
"windows_dism_remove_defender:The following analytic identifies the use of the Windows Disk Image Utility, `dism.exe`, to remove Windows Defender. Adversaries may use `dism.exe` to disable Defender before completing their objective.",Endpoint Detection and Response
"windows_dll_search_order_hijacking_hunt:The following hunting analytic is an experimental query built against a accidental feature using the latest Sysmon TA 3.0 (https://splunkbase.splunk.com/app/5709/) which maps the module load (ImageLoaded) to process_name. This analytic will deprecate once this is fixed. This hunting analytic identifies known libraries in Windows that may be used in a DLL search order hijack or DLL Sideloading setting. This may require recompiling the DLL, moving the DLL or moving the vulnerable process. The query looks for any running out of system32 or syswow64. Some libraries natively run out of other application paths and will need to be added to the exclusion as needed. The lookup is comprised of Microsoft native libraries identified within the Hijacklibs.net project.",Endpoint Detection and Response
"windows_dll_search_order_hijacking_hunt_with_sysmon:The following hunting analytic is an experimental query built against a accidental feature using the latest Sysmon TA 3.0 (https://splunkbase.splunk.com/app/5709/) which maps the module load (ImageLoaded) to process_name. This analytic will deprecate once this is fixed. This hunting analytic identifies known libraries in Windows that may be used in a DLL search order hijack or DLL Sideloading setting. This may require recompiling the DLL, moving the DLL or moving the vulnerable process. The query looks for any running out of system32 or syswow64. Some libraries natively run out of other application paths and will need to be added to the exclusion as needed. The lookup is comprised of Microsoft native libraries identified within the Hijacklibs.net project.",Microsoft Sysmon Logs
"windows_dll_search_order_hijacking_with_iscsicpl:The following analytic identifies a recently disclosed search ordler DLL hijack in iscsicpl.exe. The malicious DLL must be in a new path and iscsicpl.exe, upon load, will execute the payload. The analytic is restricted to Windows shells. Two proof of concepts were identified and utilized to determine the behavior. The command-line is an option to go after, but most likely identifying a child process off iscsicpl.exe will be more effective. Monitoring for suspicious DLL loads is also an option.",Endpoint Detection and Response
"windows_dns_gather_network_info:The following analytic identifies a process command line used to enumerate DNS records. Adversaries, threat actors, or red teamers may employ this technique to gather information about a victim's DNS, which can be utilized during targeting. This method was also observed as part of a tool used by the Sandworm APT group in a geopolitical cyber warfare attack. By using the dnscmd.exe Windows application, an attacker can enumerate DNS records for specific domains within the targeted network, potentially aiding in further attacks. This anomaly detection can serve as a valuable starting point for identifying users and hostnames that may be compromised or targeted by adversaries seeking to collect data information.",Endpoint Detection and Response
"windows_dnsadmins_new_member_added:The following analytic leverages Event ID 4732 to identify the addition of a new member to the DnsAdmins group within Active Directory. . Members of the DnsAdmin group can manage the DNS service which most of the times runs on the Domain Controller. By abusing legitimate DNS management functionality, a member of the DnsAdmins group can escalate privileges by executing malicious code on a Domain Controller as SYSTEM. Security teams should monitor the modification of the DnsAdmins group and validate the changes are legitimate.",Windows Security
windows_dotnet_binary_in_non_standard_path:The following analytic identifies native .net binaries within the Windows operating system that may be abused by adversaries by moving it to a new directory. The analytic identifies the .net binary by using a lookup and compares the process name and original file name (internal name). The analytic utilizes a lookup with the is_net_windows_file macro to identify the binary process name and original file name. if one or the other matches an alert will be generated. Adversaries abuse these binaries as they are native to windows and native DotNet. Note that not all SDK (post install of Windows) are captured in the lookup.,Endpoint Detection and Response
"windows_driver_inventory:The following hunting / inventory query assists defenders in identifying Drivers being loaded across the fleet. This query relies upon a PowerShell script input to be deployed to critical systems and beyond. If capturing all via the input, this will provide retrospection into drivers persisting. Note, that this is not perfect across a large fleet. Modify the query as you need to view the data differently.",Windows Security
"windows_drivers_loaded_by_signature:The following analytic assists with viewing all drivers being loaded by using Sysmon EventCode 6 (Driver Load). Sysmon provides some simple fields to assist with identifying suspicious drivers. Use this analytic to look at prevalence of driver (count), path of driver, signature status and hash. Review these fields with scrutiny until the ability to prove the driver is legitimate and has a purpose in the environment.",Microsoft Sysmon Logs
"windows_enable_win32_scheduledjob_via_registry:This analytic searches for a registry modification that enables the use of the at.exe or wmi Win32_ScheduledJob command to add scheduled tasks on a Windows endpoint. Specifically, it looks for the creation of a new DWORD value named ""EnableAt"" in the following registry path: ""HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Schedule\Configuration"". If this value is set to 1, it enables the at.exe and wmi Win32_ScheduledJob commands to schedule tasks on the system. Detecting this registry modification is important because it may indicate that an attacker has enabled the ability to add scheduled tasks to the system, which can be used to execute malicious code at specific times or intervals.",Endpoint Detection and Response
"windows_event_for_service_disabled:This analytic will identify suspicious system event of services that was modified from start to disabled. This technique is seen where the adversary attempts to disable security app services, other malware services to evade the defense systems on the compromised host",Microsoft System EventLog
"windows_event_log_cleared:The following analytic utilizes Windows Security Event ID 1102 or System log event 104 to identify when a Windows event log is cleared. Note that this analytic will require tuning or restricted to specific endpoints based on criticality. During triage, based on time of day and user, determine if this was planned. If not planned, follow through with reviewing parallel alerts and other data sources to determine what else may have occurred.",Windows Security
"windows_event_triggered_image_file_execution_options_injection:The following hunting analytic identifies EventCode 3000 in Application channel indicating a process exit. This behavior is based on process names being added to the Image File Execution Options under HKLM \SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\ and \SOFTWARE\Microsoft\Windows NT\CurrentVersion\SilentProcessExit. Once these are set for a process, an eventcode 3000 will generate. The example used is from Thinkst Canary where a CanaryToken is setup to monitor for a commonly abused living off the land binary (ex. Klist.exe) and generate an event when it occurs. This can be seen as settings traps to monitor for suspicious behavior. Monitor and tune this hunting analytic and setup traps across your organization and begin monitoring.",Application Data
"windows_excessive_disabled_services_event:This analytic will identify suspicious excessive number of system events of services that was modified from start to disabled. This technique is seen where the adversary attempts to disable security app services, other malware services oer serve as an destructive impact to complete the objective on the compromised system. One good example for this scenario is Olympic destroyer where it disable all active services in the compromised host as part of its destructive impact and defense evasion.",Microsoft System EventLog
"windows_exchange_autodiscover_ssrf_abuse:The following analytic utilizes the Web datamodel and identifies the ProxyShell or ProxyNotShell abuse. This vulnerability is a Server Side Request Forgery (SSRF) vulnerability, which is a web vulnerability that allows an adversary to exploit vulnerable functionality to access server side or local network services by affectively traversing the external firewall using vulnerable web functionality. This analytic looks for the URI path and query of autodiscover, powershell and mapi along with a POST occurring. It will tally a simple score and show the output of the events that match. This analytic may be added to by simply creating a new eval statement and modifying the hardcode digit for Score.","Web Server
Web Proxy"
"windows_execute_arbitrary_commands_with_msdt:The following analytic identifies a recently disclosed arbitraty command execution using Windows msdt.exe - a Diagnostics Troubleshooting Wizard. The sample identified will use the ms-msdt:/ protocol handler to load msdt.exe to retrieve a remote payload. During triage, review file modifications for html. Identify parallel process execution that may be related, including an Office Product.",Endpoint Detection and Response
"windows_exfiltration_over_c2_via_invoke_restmethod:The following analytic identifies the potential exfiltration of data using PowerShell's Invoke-RestMethod. This technique was observed in the Winter-Vivern malware, which uploads desktop screenshots and files from compromised or targeted hosts. Detecting this TTP can serve as a valuable indicator that a process is attempting to upload files to an external or internal URI link. We recommend examining the process, the files it is trying to upload, and the URL link or C2 destination where the data is being uploaded.",Windows Security
"windows_exfiltration_over_c2_via_powershell_uploadstring:The following analytic identifies potential data exfiltration using the PowerShell net.webclient command. This technique was observed in the Winter-Vivern malware, which uploads desktop screenshots and files from compromised or targeted hosts. Detecting this TTP can serve as a valuable indicator that a process is attempting to upload files to an external or internal URI link. We recommend examining the process, the files it is trying to upload, and the URL link or C2 destination where the data is being uploaded.",Windows Security
"windows_export_certificate:The following analytic identifies when a certificate is exported from the Windows Certificate Store. This analytic utilizes the Certificates Lifecycle log channel event ID 1007. EventID 1007 is focused on the Export of a certificate from the local certificate store. In addition, review the ProcessName field as it will help to determine automation/Admin or adversary extracting the certificate. Depending on the organization, the certificate may be used for authentication to the VPN or private resources.",None
"windows_file_share_discovery_with_powerview:The following analytic identifies the use of the Invoke-ShareFinder PowerShell commandlet part of PowerView. This module obtains the list of all active domain computers and lists the active shares on each computer. Network file shares in Active Directory environments may contain sensitive information like backups, scripts, credentials, etc. Adversaries who have obtained a foothold in an AD network may leverage PowerView to identify secrets and leverage them for Privilege Escalation or Lateral Movement.",Windows Security
"windows_file_without_extension_in_critical_folder:This analytic is to look for suspicious file creation in the critical folder like ""System32\Drivers"" folder without file extension. This artifacts was seen in latest hermeticwiper where it drops its driver component in Driver Directory both the compressed(without file extension) and the actual driver component (with .sys file extension). This TTP is really a good indication that a host might be compromised by this destructive malware that wipes the boot sector of the system.",Endpoint Detection and Response
"windows_findstr_gpp_discovery:The following analytic identifies the use of the findstr command employed to search for unsecured credentials Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts. These group policies are stored in SYSVOL on a domain controller. This means that any domain user can view the SYSVOL share and decrypt the password (using the AES key that has been made public). While Microsoft released a patch that impedes Administrators to create unsecure credentials, existing Group Policy Preferences files with passwords are not removed from SYSVOL.",Endpoint Detection and Response
"windows_gather_victim_host_information_camera:The following analytic detects a powershell script that enumerate camera mounted to the targeted host. This technique was seen in DCRat malware, where it runs a powershell command to look for camera information that will be pass on to its C2 server. This anomaly detection can be a good pivot to check who and why this enumeration is needed and what parent process execute this powershell script command.",Windows Security
"windows_gather_victim_identity_sam_info:The following analytic identifies a process that loads the samlib.dll module. This module is being abused by adversaries, threat actors and red teamers to access information of SAM objects or access credentials information in DC. This hunting query can be a good indicator that a process is capable of accessing the SAM object.",Microsoft Sysmon Logs
windows_gather_victim_network_info_through_ip_check_web_services:The following analytic identifies process that attempts to connect to a known IP web services. This technique is commonly used by trickbot and other malware to perform reconnaissance against the infected machine and look for its IP address.,Microsoft Sysmon Logs
"windows_group_policy_object_created:The following analytic leverages Event IDs 5136 and 51137 to identify the creation of a new Group Policy Object. With GPOs, system administrators can manage and configure applications, software operations, and user settings throughout an entire organization. GPOs can be abused and leveraged by adversaries to escalate privileges or deploy malware across an Active Directory network. As an example, the Lockbit ransomware malware will create new group policies on the domain controller that are then pushed out to every device on the network. Security teams should monitor the creation of new Group Policy Objects.",Windows Security
"windows_hidden_schedule_task_settings:The following query utilizes Windows Security EventCode 4698, A scheduled task was created, to identify suspicious tasks registered on Windows either via schtasks.exe OR TaskService with a hidden settings that are unique entry of malware like industroyer2 or attack that uses lolbin to download other file or payload to the infected machine.",Windows Security
"windows_hide_notification_features_through_registry:This analytic is to detect a suspicious registry modification to hide common windows notification feature from compromised host. This technique was seen in some ransomware family to add more impact to its payload that are visually seen by user aside from the encrypted files and ransomware notes. Even this a good anomaly detection, administrator may implement this changes for auditing or security reason. In this scenario filter is needed.",Endpoint Detection and Response
windows_high_file_deletion_frequency:This search looks for high frequency of file deletion relative to process name and process id. These events usually happen when the ransomware tries to encrypt the files with the ransomware file extensions and sysmon treat the original files to be deleted as soon it was replace as encrypted data.,Microsoft Sysmon Logs
windows_hijack_execution_flow_version_dll_side_load:This analytic is to detect a process loading version.dll that is not in %windir%\\system32 or %windir%\\syswow64 dir path. This event is seen in ransomware and APT malware that executes malicious version.dll placed in the same folder of onedrive application that will execute that module. This technique is known to be DLL side loading. This technique was used to execute an agent of Brute Ratel C4 red teaming tools to serve as remote admin tool to collect and compromise target host.,Microsoft Sysmon Logs
windows_hosts_file_modification:The search looks for modifications to the hosts file on all Windows endpoints across your environment.,Endpoint Detection and Response
"windows_hunting_system_account_targeting_lsass:The following hunting analytic identifies all processes requesting access into Lsass.exe. his behavior may be related to credential dumping or applications requiring access to credentials. Triaging this event will require understanding the GrantedAccess from the SourceImage. In addition, whether the account is privileged or not. Review the process requesting permissions and review parallel processes.",Microsoft Sysmon Logs
"windows_identify_protocol_handlers:The following hunting analytic will identify any protocol handlers utilized on the command-line. A protocol handler is an application that knows how to handle particular types of links: for example, a mail client is a protocol handler for ""mailto:"" links. When the user clicks a ""mailto:"" link, the browser opens the application selected as the handler for the ""mailto:"" protocol (or offers them a choice of handlers, depending on their settings). To identify protocol handlers we can use NirSoft https://www.nirsoft.net/utils/url_protocol_view.html URLProtocolView or query the registry using PowerShell.",Endpoint Detection and Response
"windows_iis_components_add_new_module:The following analytic identifies the process AppCmd.exe installing a new module into IIS. AppCmd is a utility to manage IIS web sites and App Pools. An adversary may run this command to install a webshell or backdoor. This has been found to be used for credit card scraping, persistence, and further post-exploitation. An administrator may run this to install new modules for a web site or during IIS updates.",Endpoint Detection and Response
windows_iis_components_module_failed_to_load:The following analytic utilizes EventCode 2282 which generates when a Module DLL could not be loaded due to a configuration problem. This typically occurs when a IIS module is installed but is failing to load. This typically results in thousands of events until the issue is resolved. Review the module that is failing and determine if it is legitimate or not.,Application Data
"windows_iis_components_new_module_added:The following analytic uses the Windows Event log - Microsoft-IIS-Configuration/Operational - which must be enabled and logged on Windows IIS servers before it can be Splunked. The following analytic identifies newly installed IIS modules. Per Microsoft, IIS modules are not commonly added to a production IIS server, so alerting on this event ID should be enabled.IIS modules can be installed at a global level or at a site level. In detecting malicious IIS modules, it is important to check both the global and site level for unauthorized modules. Regular monitoring of these locations for such modules and comparing against a known good list can help detect and identify malicious IIS modules.",Web Server
windows_impair_defense_add_xml_applocker_rules:The following analytic is to identify a process that imports applocker xml policy using PowerShell commandlet. This technique was seen in Azorult malware where it drop an xml Applocker policy that will deny several AV products and further executed the PowerShell Applocker commandlet.,Endpoint Detection and Response
"windows_impair_defense_delete_win_defender_context_menu:The search looks for the deletion of Windows Defender context menu within the registry. This is consistent behavior with RAT malware across a fleet of endpoints. This particular behavior is executed when an adversary gains access to an endpoint and begins to perform execution. Usually, a batch (.bat) will be executed and multiple registry and scheduled task modifications will occur. During triage, review parallel processes and identify any further file modifications.",Endpoint Detection and Response
"windows_impair_defense_delete_win_defender_profile_registry:The search looks for the deletion of Windows Defender main profile within the registry. This was used by RAT malware across a fleet of endpoints. This particular behavior is typically executed when an adversary gains access to an endpoint and beings to perform execution. Usually, a batch (.bat) will be executed and multiple registry and scheduled task modifications will occur. During triage, review parallel processes and identify any further file modifications.",Endpoint Detection and Response
windows_impair_defense_deny_security_software_with_applocker:The following analytic identifies a modification in the Windows registry by the Applocker utility that contains details or registry data values related to denying the execution of several security products. This technique was seen in Azorult malware where it drops an xml Applocker policy that will deny several AV products and then loaded by using PowerShell Applocker commandlet.,Endpoint Detection and Response
"windows_impair_defenses_disable_hvci:The following analytic refers to a detection mechanism designed to identify when the Hypervisor-protected Code Integrity (HVCI) feature is disabled within the Windows registry. HVCI is a security feature in Windows 10 and Windows Server 2016 that helps protect the kernel and system processes from being tampered with by malicious code. HVCI relies on hardware-assisted virtualization and Microsoft's Hyper-V hypervisor to ensure that only kernel-mode code that has been signed by Microsoft or the system's hardware manufacturer can be executed. This prevents attackers from exploiting vulnerabilities to run unsigned code, like kernel-mode rootkits or other malicious software, at the kernel level. Disabling HVCI may expose the system to security risks and could be an indicator of a potential compromise or unauthorized activity. The analytic aims to detect and report events or configurations that lead to the disabling of HVCI.",Endpoint Detection and Response
"windows_impair_defenses_disable_win_defender_auto_logging:The search looks for the Registry Key DefenderApiLogger or DefenderAuditLogger set to disable. This is consistent with RAT malware across a fleet of endpoints. This particular behavior is typically executed when an adversary gains access to an endpoint and beings to perform execution. Usually, a batch (.bat) will be executed and multiple registry and scheduled task modifications will occur. During triage, review parallel processes and identify any further file modifications.",Endpoint Detection and Response
"windows_indirect_command_execution_via_forfiles:The following analytic detects programs that have been started by forfiles.exe. According to Microsoft, the 'The forfiles command lets you run a command on or pass arguments to multiple files'. While this tool can be used to start legitimate programs, usually within the context of a batch script, it has been observed being used to evade protections on command line execution.",Endpoint Detection and Response
"windows_indirect_command_execution_via_pcalua:The following analytic detects programs that have been started by pcalua.exe. pcalua.exe is the Microsoft Windows Program Compatability Assistant.  While this tool can be used to start legitimate programs, it has been observed being used to evade protections on command line execution.",Endpoint Detection and Response
windows_indirect_command_execution_via_series_of_forfiles:This analytic is developed to detect suspicious excessive usage of forfiles.exe process. This event was seen in post exploitation tool WINPEAS that was used by Ransomware Prestige. Forfiles command lets you run a command on or pass arguments to multiple files. This Windows OS built-in tool being abused to list all files in specific directory or drive.,Endpoint Detection and Response
"windows_information_discovery_fsutil:The following analytic identifies a process execution of Windows OS built-in tool FSUTIL to discover file system information. This tool is being abused or used by several adversaries or threat actor to query/list all drives, drive type, volume information or volume statistics by using the FSINFO parameter of this tool. This technique was seen in WINPEAS post exploitation tool that is being used by ransomware prestige to gain privilege and persistence to the targeted host.",Endpoint Detection and Response
"windows_ingress_tool_transfer_using_explorer:The following analytic identifies the Windows Explorer process with a URL within the command-line. Explorer.exe is known Windows process that handles start menu, taskbar, desktop and file manager. Many adversaries abuse this process, like DCRat malware, where it attempts to open the URL with the default browser application on the target host by putting the URL as a parameter on explorer.exe process. This anomaly detection might be a good pivot to check which user and how this process was executed, what is the parent process and what is the URL link. This technique is not commonly used to open an URL.",Endpoint Detection and Response
"windows_input_capture_using_credential_ui_dll:The following analytic identifies a process that loads the credui.dll module. This legitimate module is typically abused by adversaries, threat actors and red teamers to create a credential UI prompt dialog box to lure users for possible credential theft or can be used to dump the credentials of a targeted host. This hunting query is a good pivot to check why the process loaded this dll and if it is a legitimate file. This hunting query may hit false positive for a third party application that uses a credential login UI for user login.",Microsoft Sysmon Logs
"windows_installutil_credential_theft:The following analytic identifies the Windows InstallUtil.exe binary loading `vaultcli.dll` and Samlib.dll`. This technique may be used to execute code to bypassing application control and capture credentials by utilizing a tool like MimiKatz. \When `InstallUtil.exe` is used in a malicous manner, the path to an executable on the filesystem is typically specified. Take note of the parent process. In a suspicious instance, this will be spawned from a non-standard process like `Cmd.exe`, `PowerShell.exe` or `Explorer.exe`. \If used by a developer, typically this will be found with multiple command-line switches/arguments and spawn from Visual Studio. \During triage review resulting network connections, file modifications, and parallel processes. Capture any artifacts and review further.",Microsoft Sysmon Logs
windows_installutil_in_non_standard_path:The following analytic identifies the Windows binary InstallUtil.exe running from a non-standard location. The analytic utilizes a macro for InstallUtil and identifies both the process_name and original_file_name.,Endpoint Detection and Response
"windows_installutil_remote_network_connection:The following analytic identifies the Windows InstallUtil.exe binary making a remote network connection. This technique may be used to download and execute code while bypassing application control. \When `InstallUtil.exe` is used in a malicous manner, the path to an executable on the filesystem is typically specified. Take note of the parent process. In a suspicious instance, this will be spawned from a non-standard process like `Cmd.exe`, `PowerShell.exe` or `Explorer.exe`. \If used by a developer, typically this will be found with multiple command-line switches/arguments and spawn from Visual Studio. \During triage review resulting network connections, file modifications, and parallel processes. Capture any artifacts and review further.","DNS Global Load Balancer
Endpoint Detection and Response
Application Load Balancer
Network Communication"
"windows_installutil_uninstall_option:The following analytic identifies the Windows InstallUtil.exe binary. This will execute code while bypassing application control using the `/u` (uninstall) switch. \InstallUtil uses the functions install and uninstall within the System.Configuration.Install namespace to process .net assembly. Install function requires admin privileges, however, uninstall function can be run as an unprivileged user.\When `InstallUtil.exe` is used in a malicous manner, the path to an executable on the filesystem is typically specified. Take note of the parent process. In a suspicious instance, this will be spawned from a non-standard process like `Cmd.exe`, `PowerShell.exe` or `Explorer.exe`. \If used by a developer, typically this will be found with multiple command-line switches/arguments and spawn from Visual Studio. \During triage review resulting network connections, file modifications, and parallel processes. Capture any artifacts and review further.",Endpoint Detection and Response
"windows_installutil_uninstall_option_with_network:The following analytic identifies the Windows InstallUtil.exe binary making a remote network connection. This technique may be used to download and execute code while bypassing application control using the `/u` (uninstall) switch. \InstallUtil uses the functions install and uninstall within the System.Configuration.Install namespace to process .net assembly. Install function requires admin privileges, however, uninstall function can be run as an unprivileged user.\When `InstallUtil.exe` is used in a malicous manner, the path to an executable on the filesystem is typically specified. Take note of the parent process. In a suspicious instance, this will be spawned from a non-standard process like `Cmd.exe`, `PowerShell.exe` or `Explorer.exe`. \If used by a developer, typically this will be found with multiple command-line switches/arguments and spawn from Visual Studio. \During triage review resulting network connections, file modifications, and parallel processes. Capture any artifacts and review further.","DNS Global Load Balancer
Endpoint Detection and Response
Application Load Balancer
Network Communication"
"windows_installutil_url_in_command_line:The following analytic identifies the Windows InstallUtil.exe binary passing a HTTP request on the command-line. This technique may be used to download and execute code while bypassing application control. \When `InstallUtil.exe` is used in a malicous manner, the path to an executable on the filesystem is typically specified. Take note of the parent process. In a suspicious instance, this will be spawned from a non-standard process like `Cmd.exe`, `PowerShell.exe` or `Explorer.exe`. \If used by a developer, typically this will be found with multiple command-line switches/arguments and spawn from Visual Studio. \During triage review resulting network connections, file modifications, and parallel processes. Capture any artifacts and review further.",Endpoint Detection and Response
"windows_iso_lnk_file_creation:The following analytic identifies the use of a delivered ISO file that has been mounted and the afformention lnk or file opened within it. When the ISO file is opened, the files are saved in the %USER%\AppData\Local\Temp\<random folder name>\ path. The analytic identifies .iso.lnk written to the path. The name of the ISO file is prepended.",Endpoint Detection and Response
"windows_java_spawning_shells:The following analytic identifies the process name of java.exe and w3wp.exe spawning a Windows shell. This is potentially indicative of exploitation of the Java application and may be related to current event CVE-2021-44228 (Log4Shell). The shells included in the macro are ""cmd.exe"", ""powershell.exe"". Upon triage, review parallel processes and command-line arguments to determine legitimacy.",Endpoint Detection and Response
"windows_kerberos_local_successful_logon:The following analytic identifies a local successful authentication event on a Windows endpoint using the Kerberos package. The target user security identified will be set to the built-in local Administrator account, along with the remote address as localhost - 127.0.0.1. This may be indicative of a kerberos relay attack. Upon triage, review for recently ran binaries on disk. In addition, look for new computer accounts added to Active Directory and other anomolous AD events.",Windows Security
windows_krbrelayup_service_creation:The following analytic identifies the default service name created by KrbRelayUp. Defenders should be aware that attackers could change the hardcoded service name of the KrbRelayUp tool and bypass this detection.,Microsoft System EventLog
"windows_large_number_of_computer_service_tickets_requested:The following analytic leverages Event ID 4769, `A Kerberos service ticket was requested`, to identify more than 30 computer service ticket requests from one source. When a domain joined endpoint connects to other remote endpoint, it will first request a Kerberos Service Ticket with the computer name as the Service Name. A user requesting a large number of computer service tickets for different endpoints could represent malicious behavior like lateral movement, malware staging, reconnaissance, etc.\Active Directory environments can be very different depending on the organization. Users should test this detection and customize the arbitrary threshold as needed.",Windows Security
windows_lateral_tool_transfer_remcom:This analytic identifies the use of RemCom.exe - The open source psexec. This utility provides the ability to move laterally and run scripts or commands remotely.,Endpoint Detection and Response
"windows_ldifde_directory_object_behavior:The following analytic identifies the use of Ldifde.exe, which provides the ability to create, modify, or delete LDAP directory objects. Natively, the binary is only installed on a domain controller. However, adversaries or administrators may install the Windows Remote Server Admin Tools for ldifde.exe. Ldifde.exe is a Microsoft Windows command-line utility used to import or export LDAP directory entries. LDAP stands for Lightweight Directory Access Protocol, which is a protocol used for accessing and managing directory information services over an IP network. LDIF, on the other hand, stands for LDAP Data Interchange Format, a standard plain-text data interchange format for representing LDAP directory entries. -i This is a flag used with Ldifde.exe to denote import mode. In import mode, Ldifde.exe takes an LDIF file and imports its contents into the LDAP directory. The data in the LDIF file might include new objects to be created, or modifications or deletions to existing objects. -f This flag is used to specify the filename of the LDIF file that Ldifde.exe will import from (in the case of the -i flag) or export to (without the -i flag). For example, if you wanted to import data from a file called data.ldif, you would use the command ldifde -i -f data.ldif. Keep in mind that while the use of Ldifde.exe is legitimate in many contexts, it can also be used maliciously. For instance, an attacker who has gained access to a domain controller could potentially use Ldifde.exe to export sensitive data or make unauthorized changes to the directory. Therefore, it's important to monitor for unusual or unauthorized use of this tool.",Endpoint Detection and Response
windows_linked_policies_in_adsi_discovery:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the `[Adsisearcher]` type accelerator being used to query Active Directory for domain groups. Red Teams and adversaries may leverage `[Adsisearcher]` to enumerate domain organizational unit for situational awareness and Active Directory Discovery.,Windows Security
"windows_local_administrator_credential_stuffing:The following analytic leverages events 4625 and 4624 to identify an endpoint using the builtin local Administrator account to authenticate to a large numbers of endpoints. Specifically, the logic will trigger when an endpoints attempts to authenticate to more than 30 target computers within a 5 minute timespan. This behavior could represent an adversary who has obtained access to local credentials and is trying to validate if these credentials work on other hosts to escalate their privileges. As environments differ across organizations, security teams should customize the thresholds of this detection as needed.",Windows Security
windows_masquerading_explorer_as_child_process:The following analytic identifies a suspicious parent process of explorer.exe. Explorer is usually executed by userinit.exe that will exit after execution that causes the main explorer.exe no parent process. Some malware like qakbot spawn another explorer.exe to inject its code. This TTP detection is a good indicator that a process spawning explorer.exe might inject code or masquerading its parent child process to evade detections.,Endpoint Detection and Response
"windows_mimikatz_binary_execution:As simple as it sounds, this analytic identifies when the native mimikatz.exe binary executes on Windows. It does look for the original file name as well, just in case the binary is renamed. Adversaries sometimes bring in the default binary and run it directly. Benjamin Delpy originally created Mimikatz as a proof of concept to show Microsoft that its authentication protocols were vulnerable to an attack. Instead, he inadvertently created one of the most widely used and downloaded threat actor tools of the past 20 years. Mimikatz is an open-source application that allows users to view and save authentication credentials such as Kerberos tickets.",Endpoint Detection and Response
"windows_mimikatz_crypto_export_file_extensions:The following analytic identifies hardcoded extensions related to the Crypo module within Mimikatz. Moving certificates or downloading them is not malicious, however with Mimikatz having hardcoded names it helps to identify potential usage of certificates being exported.",Endpoint Detection and Response
"windows_modify_registry_auto_minor_updates:The following analytic identifies a suspicious registry modification of Windows auto update configuration. This technique was being abused by several adversaries, malware authors and also red-teamers to bypass detection or to be able to compromise the target host with zero day exploit or as an additional defense evasion technique. RedLine Stealer is one of the malware we've seen that uses this technique to evade detection and add more payload on the target host. This detection looks for registry modification that will ""Treat minor updates like other updates"".",Endpoint Detection and Response
"windows_modify_registry_auto_update_notif:The following analytic identifies a suspicious registry modification of Windows auto update notification. This technique was being abused by several adversaries, malware authors and also red-teamers to bypass detection or to be able to compromise the target host with zero day exploit or as an additional defense evasion technique. RedLine Stealer is one of the malware we've seen that uses this technique to evade detection and add more payload on the target host. This detection looks for registry modification that will switch the automatic windows update to ""Notify before download"".",Endpoint Detection and Response
windows_modify_registry_default_icon_setting:This analytic is developed to detect suspicious registry modification to change the default icon association of windows to ransomware . This technique was seen in Lockbit ransomware where it modified the default icon association of the compromised Windows OS  host with its dropped ransomware icon file as part of its  defacement payload. This registry is not commonly modified by a normal user so having this anomaly detection may help to catch possible lockbit ransomware infection or other malware.,Endpoint Detection and Response
windows_modify_registry_disable_toast_notifications:The following analytic is to identify a modification in the Windows registry to disable toast notifications. This Windows Operating System feature is responsible for alerting or notifying user if application or OS need some updates. Adversaries and malwares like Azorult abuse this technique to disable important update notification in compromised host. This anomaly detection is a good pivot to look for further events related to defense evasion and execution.,Endpoint Detection and Response
windows_modify_registry_disable_win_defender_raw_write_notif:The following analytic identifies a modification in the Windows registry to disable Windows Defender raw write notification feature. This policy controls whether raw volume write notifications are sent to behavior monitoring or not. This registry was recently identified in Azorult malware to bypass Windows Defender detections or behavior monitoring in terms of volume write.,Endpoint Detection and Response
"windows_modify_registry_disable_windefender_notifications:The following analytic identifies a suspicious registry modification to disable Windows Defender notification. This technique was being abused by several adversaries, malware authors and also red-teamers to evade detection on the targeted machine. RedLine Stealer is one of the malware we've seen that uses this technique to bypass Windows defender detection.",Endpoint Detection and Response
windows_modify_registry_disable_windows_security_center_notif:The following analytic is to identify a modification in the Windows registry to disable windows center notifications. This Windows Operating System feature is responsible for alerting or notifying user if application or OS need some updates. Adversaries and malwares like Azorult abuse this technique to disable important update notification in compromised host. This anomaly detection is a good pivot to look for further events related to defense evasion and execution.,Endpoint Detection and Response
"windows_modify_registry_disabling_wer_settings:The following analytic identifies a modification in the Windows registry to disable Windows error reporting settings. This Windows feature allows the user to report bugs, errors, failure or problems encountered in specific application or processes. Adversaries use this technique to hide any error or failure that some of its malicious components trigger.",Endpoint Detection and Response
windows_modify_registry_disallow_windows_app:The following analytic identifies modification in the Windows registry to prevent user running specific computer programs that could aid them in manually removing malware or detecting it using security products. This technique was recently identified in Azorult malware where it uses this registry value to prevent several AV products to execute on the compromised host machine.,Endpoint Detection and Response
"windows_modify_registry_do_not_connect_to_win_update:The following analytic identifies a suspicious registry modification of Windows auto update configuration. This technique was being abused by several adversaries, malware authors and also red-teamers to bypass detection or to be able to compromise the target host with zero day exploit or as an additional defense evasion technique. RedLine Stealer is one of the malware we've seen that uses this technique to evade detection and add more payload on the target host. This detection looks for registry modification that will disable Windos update functionality, and may cause connection to public services such as the Windows Store to stop working. This policy applies only when this PC is configured to connect to an intranet update service using the ""Specify intranet Microsoft update service location"" policy.",Endpoint Detection and Response
"windows_modify_registry_no_auto_reboot_with_logon_user:The following analytic identifies a suspicious registry modification of Windows auto update configuration. This technique was being abused by several adversaries, malware authors and also red-teamers to bypass detection or to be able to compromise the target host with zero day exploit or as an additional defense evasion technique. RedLine Stealer is one of the malware we've seen that uses this technique to evade detection and add more payload on the target host. This detection looks for registry modification that will allow ""Logged-on user gets to choose whether or not to restart his or her compute"".",Endpoint Detection and Response
"windows_modify_registry_no_auto_update:The following analytic identifies a suspicious registry modification of Windows auto update configuration. This technique was being abused by several adversaries, malware authors and also red-teamers to bypass detection or to be able to compromise the target host with zero day exploit or as an additional defense evasion technique. RedLine Stealer is one of the malware we've seen that uses this technique to evade detection and add more payload on the target host. This detection looks for registry modification that will ""Disable Automatic Updates"".",Endpoint Detection and Response
"windows_modify_registry_qakbot_binary_data_registry:The following analytic identifies a suspicious registry entry created by Qakbot malware as part of its malicious execution. This ""Binary Data"" Registry  was created by newly spawn explorer.exe where its malicious code is injected to it. The registry consist of 8 random registry value name with encrypted binary data on its registry value data. This anomaly detections can be a good pivot for possible Qakbot malware infection or other malware that uses registry to save or store there config or malicious code on the registry data stream.",Endpoint Detection and Response
"windows_modify_registry_reg_restore:The following analytic identifies a process execution of reg.exe with ""restore"" parameter. This reg.exe parameter is commonly used to restore registry backup data in a targeted host. This approach or technique was also seen in post-exploitation tool like winpeas where it uses ""reg save"" and ""reg restore"" to check the registry modification restriction in targeted host after gaining access to it.",Endpoint Detection and Response
windows_modify_registry_regedit_silent_reg_import:The following analytic identifies modification of Windows registry using regedit.exe application with silent mode parameter. regedit.exe windows application is commonly used as GUI app to check or modify registry. This application is also has undocumented command-line parameter and one of those are silent mode parameter that performs action without stopping for confirmation with dialog box. Importing registry from .reg files need to monitor in a production environment since it can be used adversaries to import RMS registry in compromised host.,Endpoint Detection and Response
windows_modify_registry_suppress_win_defender_notif:The following analytic is to identify a modification in the Windows registry to suppress windows defender notification. This technique was abuse by adversaries and threat actor to bypassed windows defender on the targeted host. Azorult malware is one of the malware use this technique that also disable toast notification and other windows features as part of its malicious behavior.,Endpoint Detection and Response
"windows_modify_registry_tamper_protection (https://github.com/frorth-aliceb/detection-knowledge-base):The following analytic identifies a suspicious registry modification to tamper Windows Defender protection. This technique was being abused by several adversaries, malware authors and also red-teamers to evade detection on the targeted machine. RedLine Stealer is one of the malware we've seen that uses this technique to bypass Windows defender detection.",Endpoint Detection and Response
"windows_modify_registry_updateserviceurlalternate:The following analytic identifies a suspicious registry modification of Windows auto update configuration. This technique was being abused by several adversaries, malware authors and also red-teamers to bypass detection or to be able to compromise the target host with zero day exploit or as an additional defense evasion technique. RedLine Stealer is one of the malware we've seen that uses this technique to evade detection and add more payload on the target host. This detection looks for registry modification that specifies an intranet server to host updates from Microsoft Update.",Endpoint Detection and Response
"windows_modify_registry_usewuserver:The following analytic identifies a suspicious registry modification of Windows auto update configuration. This technique was being abused by several adversaries, malware authors and also red-teamers to bypass detection or to be able to compromise the target host with zero day exploit or as an additional defense evasion technique. RedLine Stealer is one of the malware we've seen that uses this technique to evade detection and add more payload on the target host. This detection looks for registry modification that will use ""The WUServer value unless this key is set"".",Endpoint Detection and Response
"windows_modify_registry_wuserver:The following analytic identifies a suspicious registry modification of Windows auto update configuration. This technique was being abused by several adversaries, malware authors and also red-teamers to bypass detection or to be able to compromise the target host with zero day exploit or as an additional defense evasion technique. RedLine Stealer is one of the malware we've seen that uses this technique to evade detection and add more payload on the target host. This detection looks for registry modification related to the WSUS server used by Automatic Updates and (by default) API callers. This policy is paired with WUStatusServer; both must be set to the same value in order for them to be valid.",Endpoint Detection and Response
"windows_modify_registry_wustatusserver:The following analytic identifies a suspicious registry modification of Windows auto update configuration. This technique was being abused by several adversaries, malware authors and also red-teamers to bypass detection or to be able to compromise the target host with zero day exploit or as an additional defense evasion technique. RedLine Stealer is one of the malware we've seen that uses this technique to evade detection and add more payload on the target host. This detection looks for registry modification related to the server to which reporting information will be sent for client computers that use the WSUS server configured by the WUServer key. This policy is paired with WUServer; both must be set to the same value in order for them to be valid.",Endpoint Detection and Response
windows_modify_show_compress_color_and_info_tip_registry:This analytic is to look for suspicious registry modification related to file compression color and information tips. This IOC was seen in hermetic wiper where it has a thread that will create this registry entry to change the color of compressed or encrypted files in NTFS file system as well as the pop up information tips. This is a good indicator that a process tries to modified one of the registry GlobalFolderOptions related to file compression attribution in terms of color in NTFS file system.,Endpoint Detection and Response
"windows_mof_event_triggered_execution_via_wmi:The following anaytic identifies MOFComp.exe loading a MOF file. The Managed Object Format (MOF) compiler parses a file containing MOF statements and adds the classes and class instances defined in the file to the WMI repository. Typically, MOFComp.exe does not reach out to the public internet or load a MOF file from User Profile paths. A filter and consumer is typically registered in WMI. Review parallel processes and query WMI subscriptions to gather artifacts. The default path of mofcomp.exe is C:\Windows\System32\wbem.",Endpoint Detection and Response
"windows_moveit_transfer_writing_aspx:This analytic detects the creation of new ASPX files in the MOVEit Transfer application's ""wwwroot"" directory. This activity is indicative of the recent critical vulnerability found in MOVEit Transfer, where threat actors have been observed exploiting a zero-day vulnerability to install a malicious ASPX file (e.g., ""human2.aspx"") in the wwwroot directory. The injected file could then be used to exfiltrate sensitive data, including user credentials and file metadata. The vulnerability affects the MOVEit Transfer managed file transfer software developed by Progress, a subsidiary of US-based Progress Software Corporation. This analytic requires endpoint data reflecting process and filesystem activity. The identified process must be responsible for the creation of new ASPX or ASHX files in the specified directory.",Endpoint Detection and Response
"windows_msexchange_management_mailbox_cmdlet_usage:The following analytic uses the Exchange Management logs, that are enabled by default, to identify suspicious Cmdlet usage related to ProxyShell and ProxyNotShell abuse.",Email
windows_mshta_execution_in_registry:The following analytic identifies the usage of mshta.exe Windows binary in registry to execute malicious script. This technique was seen in kovter malware where it create several registry entry which is a encoded javascript and will be executed by another registry containing mshta and javascript activexobject to execute the encoded script using wscript.shell. This TTP is a good indication of kovter malware or other adversaries or threat actors leveraging fileless detection that survive system reboot.,Endpoint Detection and Response
"windows_msiexec_dllregisterserver:The following analytic identifies the usage of msiexec.exe using the /y switch parameter, which grants the ability for msiexec to load DLLRegisterServer. Upon triage, review parent process and capture any artifacts for further review.",Endpoint Detection and Response
"windows_msiexec_remote_download:The following analytic identifies msiexec.exe with http in the command-line. This procedure will utilize msiexec.exe to download a remote file and load it. During triage, review parallel processes and capture any artifacts on disk for review.",Endpoint Detection and Response
"windows_msiexec_spawn_discovery_command:The following analytic identifies MSIExec spawning multiple discovery commands, including spawning Cmd.exe or PowerShell.exe. Typically, child processes are not common from MSIExec other than MSIExec spawning itself.",Endpoint Detection and Response
"windows_msiexec_unregister_dllregisterserver:The following analytic identifies the usage of msiexec.exe using the /z switch parameter, which grants the ability for msiexec to unload DLLRegisterServer. Upon triage, review parent process and capture any artifacts for further review.",Endpoint Detection and Response
"windows_msiexec_with_network_connections:The following analytic identifies MSIExec with any network connection over port 443 or 80. Typically, MSIExec does not perform network communication to the internet.","DNS Global Load Balancer
Endpoint Detection and Response
Application Load Balancer
Network Communication"
"windows_multi_hop_proxy_tor_website_query:The following analytic identifies a dns query to a known TOR proxy website. This technique was seen in several adversaries, threat actors and malware like AgentTesla to To disguise the source of its malicious traffic. adversaries may chain together multiple proxies. This Anomaly detection might be a good pivot for a process trying to download or use TOR proxies in a compromised host machine.",Microsoft Sysmon Logs
"windows_multiple_disabled_users_failed_to_authenticate_wth_kerberos:The following analytic identifies one source endpoint failing to authenticate with 30 unique disabled domain users using the Kerberos protocol within 5 minutes. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment using Kerberos to obtain initial access or elevate privileges. Active Directory environments can be very different depending on the organization. Users should test this detection and customize the arbitrary threshold when needed. As attackers progress in a breach, mistakes will be made. In certain scenarios, adversaries may execute a password spraying attack against disabled users. Event 4768 is generated every time the Key Distribution Center issues a Kerberos Ticket Granting Ticket (TGT). Failure code `0x12` stands for `clients credentials have been revoked` (account disabled, expired or locked out).\This logic can be used for real time security monitoring as well as threat hunting exercises. This detection will only trigger on domain controllers, not on member servers or workstations.\The analytics returned fields allow analysts to investigate the event further by providing fields like source ip and attempted user accounts.",Windows Security
"windows_multiple_invalid_users_fail_to_authenticate_using_kerberos:The following analytic identifies one source endpoint failing to authenticate with 30 unique invalid domain users using the Kerberos protocol. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment using Kerberos to obtain initial access or elevate privileges. Active Directory environments can be very different depending on the organization. Users should test this detection and customize the arbitrary threshold when needed. As attackers progress in a breach, mistakes will be made. In certain scenarios, adversaries may execute a password spraying attack using an invalid list of users. Event 4768 is generated every time the Key Distribution Center issues a Kerberos Ticket Granting Ticket (TGT). Failure code 0x6 stands for `client not found in Kerberos database` (the attempted user is not a valid domain user).\This logic can be used for real time security monitoring as well as threat hunting exercises. This detection will only trigger on domain controllers, not on member servers or workstations.\The analytics returned fields allow analysts to investigate the event further by providing fields like source ip and attempted user accounts.",Windows Security
"windows_multiple_invalid_users_failed_to_authenticate_using_ntlm:The following analytic identifies one source endpoint failing to authenticate with 30 unique invalid users using the NTLM protocol. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment using NTLM to obtain initial access or elevate privileges. Active Directory environments can be very different depending on the organization. Users should test this detection and customize the arbitrary threshold when needed. As attackers progress in a breach, mistakes will be made. In certain scenarios, adversaries may execute a password spraying attack using an invalid list of users. Event 4776 is generated on the computer that is authoritative for the provided credentials. For domain accounts, the domain controller is authoritative. For local accounts, the local computer is authoritative. Error code 0xC0000064 stands for `The username you typed does not exist` (the attempted user is a legitimate domain user).\This logic can be used for real time security monitoring as well as threat hunting exercises. This detection will only trigger on domain controllers, not on member servers or workstations.\The analytics returned fields allow analysts to investigate the event further by providing fields like source workstation name and attempted user accounts.",Windows Security
"windows_multiple_users_fail_to_authenticate_wth_explicitcredentials:The following analytic identifies a source user failing to authenticate with 30 unique users using explicit credentials on a host. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment to obtain initial access or elevate privileges. Active Directory environments can be very different depending on the organization. Users should test this detection and customize the arbitrary threshold when needed. Event 4648 is generated when a process attempts an account logon by explicitly specifying that accounts credentials. This event generates on domain controllers, member servers, and workstations.\This logic can be used for real time security monitoring as well as threat hunting exercises. This detection will trigger on the potenfially malicious host, perhaps controlled via a trojan or operated by an insider threat, from where a password spraying attack is being executed.\The analytics returned fields allow analysts to investigate the event further by providing fields like source account, attempted user accounts and the endpoint were the behavior was identified.",Windows Security
"windows_multiple_users_failed_to_authenticate_from_host_using_ntlm:The following analytic identifies one source endpoint failing to authenticate with 30 unique valid users using the NTLM protocol. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment using NTLM to obtain initial access or elevate privileges. Active Directory environments can be very different depending on the organization. Users should test this detection and customize the arbitrary threshold when needed. Event 4776 is generated on the computer that is authoritative for the provided credentials. For domain accounts, the domain controller is authoritative. For local accounts, the local computer is authoritative. Error code 0xC000006A means: misspelled or bad password (the attempted user is a legitimate domain user).\This logic can be used for real time security monitoring as well as threat hunting exercises. This detection will only trigger on domain controllers, not on member servers or workstations.\The analytics returned fields allow analysts to investigate the event further by providing fields like source workstation name and attempted user accounts.",Windows Security
"windows_multiple_users_failed_to_authenticate_from_process:The following analytic identifies a source process name failing to authenticate with 30 uniquer users. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment to obtain initial access or elevate privileges. Active Directory environments can be very different depending on the organization. Users should test this detection and customize the arbitrary threshold when needed. Event 4625 generates on domain controllers, member servers, and workstations when an account fails to logon. Logon Type 2 describes an iteractive logon attempt.\This logic can be used for real time security monitoring as well as threat hunting exercises. This detection will trigger on the potenfially malicious host, perhaps controlled via a trojan or operated by an insider threat, from where a password spraying attack is being executed. This could be a domain controller as well as a member server or workstation.\The analytics returned fields allow analysts to investigate the event further by providing fields like source process name, source account and attempted user accounts.",Windows Security
"windows_multiple_users_failed_to_authenticate_using_kerberos:The following analytic identifies one source endpoint failing to authenticate with 30 unique users using the Kerberos protocol. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment using Kerberos to obtain initial access or elevate privileges. Active Directory environments can be very different depending on the organization. Users should test this detection and customize the arbitrary threshold when needed. Event 4771 is generated when the Key Distribution Center fails to issue a Kerberos Ticket Granting Ticket (TGT). Failure code 0x18 stands for `wrong password provided` (the attempted user is a legitimate domain user).\This logic can be used for real time security monitoring as well as threat hunting exercises. This detection will only trigger on domain controllers, not on member servers or workstations.\The analytics returned fields allow analysts to investigate the event further by providing fields like source ip and attempted user accounts.",Windows Security
"windows_multiple_users_remotely_failed_to_authenticate_from_host:The following analytic identifies a source host failing to authenticate against a remote host with 30 unique users. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment to obtain initial access or elevate privileges. Active Directory environments can be very different depending on the organization. Users should test this detection and customize the arbitrary threshold when needed. Event 4625 documents each and every failed attempt to logon to the local computer. This event generates on domain controllers, member servers, and workstations. Logon Type 3 describes an remote authentication attempt.\This logic can be used for real time security monitoring as well as threat hunting exercises. This detection will trigger on the host that is the target of the password spraying attack. This could be a domain controller as well as a member server or workstation.\The analytics returned fields allow analysts to investigate the event further by providing fields like source process name, source account and attempted user accounts.",Windows Security
"windows_ngrok_reverse_proxy_usage:The following analytic identifies the use of ngrok.exe being utilized on the Windows operating system. Unfortunately, there is no original file name for Ngrok, so it may be worth an additional hunt to identify any command-line arguments. The sign of someone using Ngrok is not malicious, however, more recently it has become an adversary tool.",Endpoint Detection and Response
windows_nirsoft_advancedrun:The following analytic identifies the use of AdvancedRun.exe. AdvancedRun.exe has similar capabilities as other remote programs like psexec. AdvancedRun may also ingest a configuration file with all settings defined and perform its activity. The analytic is written in a way to identify a renamed binary and also the common command-line arguments.,Endpoint Detection and Response
"windows_nirsoft_utilities:The following hunting analytic assists with identifying the proces execution of commonly used utilities from NirSoft. Potentially not adversary behavior, but worth identifying to know if the software is present and being used.",Endpoint Detection and Response
windows_odbcconf_hunting:The following analytic identifies Odbcconf.exe running in the environment to assist with identifying tuning higher fidelity analytics related to Odbcconf.exe.,Endpoint Detection and Response
"windows_odbcconf_load_dll:The following analytic identifies odbcconf.exe, Windows Open Database Connectivity utility, utilizing the action function of regsvr to load a DLL. An example will look like - odbcconf.exe /A { REGSVR T1218-2.dll }. During triage, review parent process, parallel procesess and file modifications.",Endpoint Detection and Response
"windows_odbcconf_load_response_file:The following analytic identifies the odbcconf.exe, Windows Open Database Connectivity utility, loading up a resource file. The file extension is arbitrary and may be named anything. The resource file itself may have different commands supported by Odbcconf to load up a DLL (REGSVR) on disk or additional commands. During triage, review file modifications and parallel processes.",Endpoint Detection and Response
"windows_office_product_spawning_msdt:The following analytic identifies a Microsoft Office product spawning the Windows msdt.exe process. MSDT is a Diagnostics Troubleshooting Wizard native to Windows. This behavior is related to a recently identified sample utilizing protocol handlers to evade preventative controls, including if macros are disabled in the document. During triage, review file modifications for html. In addition, parallel processes including PowerShell and CertUtil.",Endpoint Detection and Response
"windows_papercut_ng_spawn_shell:The following analytic is designed to detect instances where the PaperCut NG application (pc-app.exe) spawns a Windows shell, specifically cmd.exe or PowerShell. This behavior may indicate potential malicious activity, such as an attacker attempting to gain unauthorized access or execute harmful commands on the affected system.",Endpoint Detection and Response
"windows_password_managers_discovery:The following analytic identifies a process command line that retrieves information related to password manager software. This technique was seen in several post exploitation tools like winpeas that are being used by Ransomware Prestige to gather this type of information. Password Managers applications are designed to store user credentials, normally in an encrypted database. Credentials are typically accessible after a user provides a master password that unlocks the database. After the database is unlocked, these credentials may be copied to memory. These databases can be stored as files on disk. Due to this password manager software designed adversaries may find or look for keywords related to the Password Manager databases that can be stolen or extracted for further attacks.",Endpoint Detection and Response
"windows_phishing_pdf_file_executes_url_link:This analytic is developed to detect suspicious pdf viewer processes that have a browser application child processes. This event was seen in a pdf spear phishing attachment containing a malicious URL link to download the actual payload. When a user clicks the malicious link the pdf viewer application will execute a process of the host default browser to connect to the malicious site. This anomaly detection can be a good indicator that a possible pdf file has a link executed by a user. The pdf viewer and browser list in this detection is still in progress, add the common browser and pdf viewer you use in opening pdf in your network.",Endpoint Detection and Response
"windows_phishing_recent_iso_exec_registry:The following hunting analytic identifies registry artifacts when an ISO container is opened, clicked or mounted on the Windows operating system. As Microsoft makes changes to macro based document execution, adversaries have begun to utilize container based initial access based phishing campaigns to evade preventative controls. Once the ISO is clicked or mounted it will create a registry artifact related to this event as a recent application executed or opened.",Endpoint Detection and Response
"windows_possible_credential_dumping:The following analytic is an enhanced version of two previous analytics that identifies common GrantedAccess permission requests and CallTrace DLLs in order to detect credential dumping. \GrantedAccess is the requested permissions by the SourceImage into the TargetImage. \CallTrace Stack trace of where open process is called. Included is the DLL and the relative virtual address of the functions in the call stack right before the open process call. \dbgcore.dll or dbghelp.dll  are two core Windows debug DLLs that have minidump functions which provide a way for applications to produce crashdump files that contain a useful subset of the entire process context. \The idea behind using ntdll.dll is to blend in by using native api of ntdll.dll. For example in sekurlsa module there are many ntdll exported api, like RtlCopyMemory, used to execute this module which is related to lsass dumping.",Microsoft Sysmon Logs
"windows_powershell_add_module_to_global_assembly_cache:The following PowerShell Script Block analytic identifies the native ability to add a DLL to the Windows Global Assembly Cache. Each computer where the Common Language Runtime is installed has a machine-wide code cache called the Global Assembly Cache. The Global Assembly Cache stores assemblies specifically designated to be shared by several applications on the computer. By adding a DLL to the GAC, this allows an adversary to call it via any other means across the operating systems. This is native and built into Windows. Per the Microsoft blog, the more high fidelity method may be to look for W3WP.exe spawning PowerShell that includes the same CommandLine as identified in this analytic.",Windows Security
"windows_powershell_cryptography_namespace:The following analytic identifies suspicious PowerShell script execution via EventCode 4104 that is processing cryptography namespace library. This technique was seen in several powershell malware, loader, downloader and stager that will decrypt or decode the next malicious stager or the actual payload. This Anomaly detection can be a good indicator that a powershell process to decrypt code. We recommend to further check the parent_process_name, the file or data it tries to decrypt, network connection and user who execute the script.",Windows Security
windows_powershell_disable_http_logging:The following analtyic identifies the use of get-WebConfigurationProperty and Set-ItemProperty attempting to disable HTTP logging on windows via PowerShell. Adversaries may perform this action to disable HTTP logging to cover tracks and delete logs on disk.,Windows Security
windows_powershell_export_certificate:The following analytic identifies the PowerShell Cmdlet export-certificate utilizing Script Block Logging. This particular behavior is related to an adversary attempting to steal certificates local to the Windows endpoint within the Certificate Store.,Windows Security
windows_powershell_export_pfxcertificate:The following analytic identifies the PowerShell Cmdlet export-pfxcertificate utilizing Script Block Logging. This particular behavior is related to an adversary attempting to steal certificates local to the Windows endpoint within the Certificate Store.,Windows Security
"windows_powershell_get_ciminstance_remote_computer:This analytic identifies the use of Get-CimInstance cmdlet with the -ComputerName parameter, which indicates that the cmdlet is being used to retrieve information from a remote computer. This can be useful for detecting instances of remote access, such as when an attacker uses PowerShell to connect to a remote system and gather information. By monitoring for this cmdlet with the -ComputerName parameter, security analysts can identify potential malicious activity on remote systems and take appropriate action to mitigate any threats.",Windows Security
"windows_powershell_iis_components_webglobalmodule_usage:The following analytic identifies the usage of PowerShell Cmdlets - New-WebGlobalModule, Enable-WebGlobalModule and Set-WebGlobalModule being utilized to create (new), enable (start) or modify a current IIS Module. These commands are equivalent to AppCmd.exe parameters. Adversaries may utilize these cmdlets as they are lesser known and perform the same activity as AppCmd.",Windows Security
windows_powershell_import_applocker_policy:The following analytic is to identify the imports of Windows PowerShell Applocker commandlets. This technique was seen in Azorult malware where it drops an xml Applocker policy that will deny several AV product and then loaded using PowerShell Applocker commandlet.,Windows Security
"windows_powershell_wmi_win32_scheduledjob:The following analytic detects the use of the PowerShell script block logging mechanism to detect the use of the Win32_ScheduledJob WMI class. This class allows the creation and management of scheduled tasks on Windows systems. However, due to security concerns, the class has been disabled by default in Windows systems, and its use must be explicitly enabled by modifying the registry. As a result, the detection of the use of this class may indicate malicious activity, especially if the class was enabled on the system by the attacker. Therefore, it is recommended to monitor the use of Win32_ScheduledJob through PowerShell script block logging and to investigate any suspicious activity.",Windows Security
"windows_powersploit_gpp_discovery:The following analytic identifies the use of the Get-GPPPassword PowerShell commandlet employed to search for unsecured credentials Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts. These group policies are stored in SYSVOL on a domain controller. This means that any domain user can view the SYSVOL share and decrypt the password (using the AES key that has been made public). While Microsoft released a patch that impedes Administrators to create unsecure credentials, existing Group Policy Preferences files with passwords are not removed from SYSVOL.",Windows Security
"windows_powerview_ad_access_control_list_enumeration:The following analytic leverages Event ID 4104 to identify the execution of the PowerView powershell commandlets `Get-ObjectAcl` or `Get-DomainObjectAcl`. This commandlets are used to enumerate Access Control List permissions given to Active Directory objects. In an active directory environment, an object is an entity that represents an available resource within the organizations network, such as domain controllers, users, groups, computers, shares, etc.  Maintaining Active Directory permissions is complicated and hard to manage, especially in complex and large environments with multiple domains. Weak permissions may allow adversaries and red teamers to escalate their privileges in Active Directory. PowerView is a common tool leveraged by attackers to identify and exploit configuration weaknesses.",Windows Security
windows_powerview_constrained_delegation_discovery:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify commandlets used by the PowerView hacking tool leveraged to discover Windows endpoints with Kerberos Constrained Delegation. Red Teams and adversaries alike may leverage use this technique for situational awareness and Active Directory Discovery.,Windows Security
"windows_powerview_kerberos_service_ticket_request:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `Get-DomainSPNTicket` commandlets with specific parameters. This commandlet is a part of PowerView, a PowerShell tool used to perform enumeration and discovery on Windows Active Directory networks. As the name suggests, this commandlet is used to request the kerberos ticket for a specified service principal name (SPN). Once the ticket is received, it may be cracked using password cracking tools like hashcat to extract the password of the SPN account. Red Teams and adversaries alike may leverage PowerView and these commandlets to identify accounts that can be attacked with the Kerberoasting technique.",Windows Security
"windows_powerview_spn_discovery:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `Get-DomainUser` or `Get-NetUSer` commandlets with specific parameters. These commandlets are part of PowerView, a PowerShell tool used to perform enumeration and discovery on Windows Active Directory networks. As the names suggest, these commandlets are used to identify domain users in a network and combining them with the `-SPN` parameter allows adversaries to discover domain accounts associated with a Service Principal Name (SPN). Red Teams and adversaries alike may leverage PowerView and these commandlets to identify accounts that can be attacked with the Kerberoasting technique.",Windows Security
windows_powerview_unconstrained_delegation_discovery:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify commandlets used by the PowerView hacking tool leveraged to discover Windows endpoints with Kerberos Unconstrained Delegation. Red Teams and adversaries alike may leverage use this technique for situational awareness and Active Directory Discovery.,Windows Security
"windows_private_keys_discovery:The following analytic identifies a process command line that retrieves information related to private keys files. This technique was seen in several post exploitation tools like winpeas that are being used by Ransomware Prestige to search for private key certificates on the compromised host for insecurely stored credentials. This files can be used by adversaries to gain privileges, persistence or remote service authentication to collect more sensitive information. Some private keys required password for operation, so in this case adversaries may need to have that passphrase either via keylogging or brute force attack.",Endpoint Detection and Response
"windows_process_injection_into_notepad:The following analytic utilizes Sysmon to identify process injection into Notepad.exe, based on GrantedAccess requests - 0x40 and 0x1fffff. This particular behavior is attributed to the defaults of the SliverC2 framework by BishopFox. By default, the analytic filters out any SourceImage paths of System32, Syswow64 and program files. Add more as needed, or remove and monitor what is consistently injecting into notepad.exe. This particular behavior will occur from a source image that is the initial payload dropped.",Microsoft Sysmon Logs
"windows_process_injection_of_wermgr_to_known_browser:This analytic identifies the suspicious Remote Thread execution of wermgr.exe process to ""firefox.exe"", ""chrome.exe"" and other known browsers. This technique was seen in Qakbot malware that executes its malicious code by injecting its code in legitimate Windows Operating System processes such as wermgr.exe to steal information in the compromised host. This TTP detection can be a good pivot to detect wermgr.exe process injected with qakbot code that tries to remote thread code execution in known browsers like firefox and edge which is not a common behavior of this wermgr.exe application.",Microsoft Sysmon Logs
"windows_process_injection_remote_thread:The following analytic identifies a suspicious remote thread execution in some process being abused by threat actor and malware like qakbot. Qakbot is one of the malware using this technique to load its malicious dll module or malicious code in the targeted host. This TTP can be a good pivot to verify what is the behavior of the targeted Image process after this detection trigger. look for network connection, child process execution, file access and many more that helps to verify the indication of malware infection.",Microsoft Sysmon Logs
"windows_process_injection_wermgr_child_process:The following analytic identifies a suspicious wermgr.exe parent process having a child process not related to error, fault or windows werfault event. This technique was seen in Qakbot malware where it inject its malicious code in wermgr to evade detections and hide from the analyst to execute its recon and its malicious behavior. This Anomaly detection can be a good pivot to start investigating a possible qakbot infection in the network. The Wermgr.exe process is not known to have other child processes aside from itself or werfault.exe",Endpoint Detection and Response
"windows_process_injection_with_public_source_path:The following analytic identifies a process in a non-standard file path on Windows attempting to create a remote thread into a process. This Windows API,CreateRemoteThread, is commonly used by adversaries for process injection to evade detections or gain privilege escalation.",Microsoft Sysmon Logs
"windows_process_with_namedpipe_commandline:This analytic is to look for process commandline that contains named pipe. This technique was seen in some adversaries, threat actor and malware like olympic destroyer to communicate to its other child processes after process injection that serve as defense evasion and privilege escalation. On the other hand this analytic may catch some normal process that using this technique for example browser application. In that scenario we include common process path we've seen during testing that cause false positive which is the program files. False positive may still be arise if the normal application is in other folder path.",Endpoint Detection and Response
windows_processes_killed_by_industroyer2_malware:The following analytic is to look for known processes killed by industroyer2 malware. This technique was seen in the industroyer2 malware attack that tries to kill several processes of windows host machines related to the energy facility network. This anomaly might be a good indicator to check which process kill these processes or why the process was killed.,Microsoft Sysmon Logs
"windows_protocol_tunneling_with_plink:The following analytic identifies the use of Plink being utilized to proxy egress or laterally in an organization. The analytic is limited to specific Plink options on the command-line, including -R -L and -D which will have the remote and local IP address or port and -l for a username. Modify the options as seen fit for your organization.",Endpoint Detection and Response
"windows_proxy_via_netsh:This search looks for processes launching netsh.exe for connection proxy. Netsh is a command-line scripting utility that allows you to, either locally or remotely, display or modify the network configuration of a computer that is currently running. Netsh can be used as a persistence proxy technique to execute a helper DLL when netsh.exe is executed. In this search, we are looking for processes spawned by netsh.exe and executing commands via the command line.",Endpoint Detection and Response
"windows_proxy_via_registry:This search looks for processes launching netsh.exe for connection proxy. Netsh is a command-line scripting utility that allows you to, either locally or remotely, display or modify the network configuration of a computer that is currently running. Netsh can be used as a persistence proxy technique to execute a helper DLL when netsh.exe is executed. In this search, we are looking for processes spawned by netsh.exe and executing commands via the command line.",Endpoint Detection and Response
"windows_query_registry_browser_list_application:The following analytic identifies a suspicious process accessing default internet browsers registry entry. This registry is used by Windows to store information about default internet browsers installed on a system. Malware, adversaries or red-teamers can abuse this registry key to collect data about the installed internet browsers and their associated settings. This information can be used to steal sensitive data such as login credentials, browsing history, and saved passwords. We observed noise that needs to be filter out so we add several known path of Windows Application to make this detection more stable.",Windows Security
"windows_query_registry_reg_save:The following analytic identifies a process execution of reg.exe with ""save"" parameter. This reg.exe parameter is commonly being abused by threat actors, adversaries and red-teamers to dump credentials or to check the registry modification capabilities of certain users or administrators in targeted hosts. This approach was seen in post-exploitation tool like winpeas where it uses ""reg save"" and ""reg restore"" to check registry modification restriction in targeted host after gaining access to it.",Endpoint Detection and Response
"windows_query_registry_uninstall_program_list:The following analytic identifies a suspicious query on uninstall application list in Windows OS registry. This registry  is commonly used by legitimate software to store information about installed applications on a Windows system, such as their name, version, publisher, and installation path. However, malware, adversaries or even red-teamers can abuse this registry key to retrieve information stored in the ""Uninstall"" key to gather data about installed applications in the target host. This Anomaly detection can be a good pivot to detect a possible suspicious process accessing this registry which is not commonly accessed by a normal user.",Windows Security
"windows_raccine_scheduled_task_deletion:The following analytic identifies the Raccine Rules Updater scheduled task being deleted. Adversaries may attempt to remove this task in order to prevent the update of Raccine.  Raccine is a ""ransomware vaccine"" created by security researcher Florian Roth, designed to intercept and prevent precursors and active ransomware behavior.",Endpoint Detection and Response
"windows_rapid_authentication_on_multiple_hosts:The following analytic leverages Event ID 4624 to identify a source computer authenticating to a large number of remote endpoints within an Active Directory network. Specifically, the logic will trigger when a source endpoint authenticates to 30 or more target computers within a 5 minute timespan. This behavior could represent an adversary who is moving laterally across the environment or enumerating network shares in the search for sensitive files. As environments differ across organizations, security teams should customize the thresholds of this detection as needed.",Windows Security
"windows_rasautou_dll_execution:The following analytic identifies the Windows Windows Remote Auto Dialer, rasautou.exe executing an arbitrary DLL. This technique is used to execute arbitrary shellcode or DLLs via the rasautou.exe LOLBin capability. During triage, review parent and child process behavior including file and image loads.",Endpoint Detection and Response
"windows_raw_access_to_disk_volume_partition:This analytic is to look for suspicious raw access read to device disk partition of the host machine. This technique was seen in several attacks by adversaries or threat actor to wipe, encrypt or overwrite the boot sector of each partition as part of their impact payload for example the ""hermeticwiper"" malware. This detection is a good indicator that there is a process try to read or write on boot sector.",Microsoft Sysmon Logs
"windows_raw_access_to_master_boot_record_drive:This analytic is to look for suspicious raw access read to drive where the master boot record is placed. This technique was seen in several attacks by adversaries or threat actor to wipe, encrypt or overwrite the master boot record code as part of their impact payload. This detection is a good indicator that there is a process try to read or write on MBR sector.",Microsoft Sysmon Logs
"windows_rdp_connection_successful:The following analytic identifies successful remote desktop connections. Utilize this analytic to hunt for successful attempts. In addition, the query may be modified for EventCode=1148 to potentially identify failed attempts. In testing, 1148 would not generate based on a failed logon attempt. Note this analytic requires enabling and a stanza in a inputs.conf.",Windows Security
"windows_registry_bootexecute_modification:This analytic monitors the BootExecute registry key for any modifications from its default value, which could indicate potential malicious activity. The BootExecute registry key, located at HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager, manages the list of applications and services that are executed during system boot. By default, the BootExecute value is set to ""autocheck autochk *"". Attackers might attempt to modify this value to achieve persistence, load malicious code, or tamper with the system's boot process.",Endpoint Detection and Response
"windows_registry_certificate_added:The following analytic identifies installation of a root CA certificate by monitoring the registry. The base paths may be found [here](https://gist.github.com/mattifestation/75d6117707bcf8c26845b3cbb6ad2b6b/raw/ae65ef15c706140ffc2e165615204e20f2903028/RootCAInstallationDetection.xml). In short, there are specific certificate registry paths that will be written to (SetValue) when a new certificate is added. The high-fidelity events to pay attention to are SetValue events where the TargetObject property ends with ""<THUMBPRINT_VALUE>\Blob"" as this indicates the direct installation or modification of a root certificate binary blob. The other high fidelity reference will be which process is making the registry modifications. There are very few processes that modify these day to day, therefore monitoring for all to start (hunting) provides a great beginning.",Endpoint Detection and Response
"windows_registry_delete_task_sd:The following analytic identifies a process attempting to delete a scheduled task SD (Security Descriptor) from within the registry path of that task. This may occur from a non-standard process running and may not come from reg.exe. This particular behavior will remove the actual Task Name from the Task Scheduler GUI and from the command-line query - schtasks.exe /query. In addition, in order to perform this action, the user context will need to be SYSTEM.",Endpoint Detection and Response
"windows_registry_modification_for_safe_mode_persistence:The following analytic identifies a modification or registry add to the safeboot registry as an autostart mechanism. This technique is utilized by adversaries to persist a driver or service into Safe Mode. Two keys are monitored in this analytic,  Minimal and Network. adding values to Minimal will load into Safe Mode and by adding into Network it will provide the service or drive the ability to perform network connections in Safe Mode.",Endpoint Detection and Response
"windows_regsvr32_renamed_binary:The following hunting analytic identifies renamed instances of regsv32.exe executing. regsv32.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64. During investigation, validate if it is the legitimate regsv32.exe executing and what dll module content it is loading. This query relies on the original filename or internal name from the PE meta data. Expand the query as needed by looking for specific command line arguments outlined in other analytics.",Endpoint Detection and Response
"windows_remote_access_software_brc4_loaded_dll:The following anomaly detection identifies the behavior related to 4 native Windows DLLs being loaded by a non-standard process. Identified by MDSec during their research into Brute Ratel, MDSec identified a high signal analytic by calling out these 4 DLLs being loaded into a process. LogonCLI.dll is the Net Logon Client DLL and is related to users and other domain services to get authenticated. Credui.dll is Credential Manager User Interface. Credential managers receive notifications when authentication information changes. For example, credential managers are notified when a user logs on or an account password changes. Samcli.dll is the Security Accounts Manager Client DLL. Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. Dbghelp.dll is Windows Image Helper. Windows Image Helper is commonly seen in credential dumping due to native functions. All of these modules are important to monitor and track and combined may lead to credentail access or dumping.",Microsoft Sysmon Logs
"windows_remote_access_software_hunt:The following hunting analytic is meant to help organizations understand what remote access software is being used in the environment. When reviewing this hunt, confirm the software identified is authorized to be utilized. Based on fidelity, create a new analytic for specific utilities banned within the organization. Adversaries use these utilities to retain remote access capabilities to the environment. Utilities in the lookup include AnyDesk, GoToMyPC, LogMeIn, TeamViewer and much more. Review the lookup for the entire list and add any others.",Endpoint Detection and Response
windows_remote_access_software_rms_registry:The following analytic is to identify a modification or creation of Windows registry related to the Remote Manipulator System (RMS) Remote Admin tool. RMS is a legitimate tool developed by russian organization TektonIT and has been observed being abused by adversaries to gain remote access to the targeted host. Azorult malware utilized RMS to gain remote access.,Endpoint Detection and Response
"windows_remote_assistance_spawning_process:The following analytic identifies the use of Microsoft Remote Assistance, msra.exe, spawning PowerShell.exe or cmd.exe as a child process. Msra.exe by default has no command-line arguments and typically spawns itself. It will generate a network connection to the remote system that is connected. This behavior is indicative of another process injected into msra.exe. Review the parent process or cross process events to identify source.",Endpoint Detection and Response
"windows_remote_create_service:This analytic identifies an endpoint that remotely connects to another endpoint to create a new service using sc.exe. On the remote endpoint, the new service will be created and this action will trigger the creation of EventCode 7045 along with all the resulting service information.",Endpoint Detection and Response
"windows_remote_service_rdpwinst_tool_execution:The following analytic identifies RDPWInst.exe tool, which is a RDP wrapper library tool designed to enable remote desktop host support and concurrent RDP session on reduced functionality system. Unfortunately, this open project was abused by adversaries to enable RDP connection to the targeted host for remote access and potentially be for lateral movement.",Endpoint Detection and Response
"windows_remote_services_allow_rdp_in_firewall:The following analytic is to identify a modification in the Windows firewall to enable remote desktop protocol on a targeted machine. This technique was seen in several adversaries, malware or red teamer to remotely access the compromised or targeted host by allowing this protocol in firewall. Even this protocol might be allowed in some production environment, This TTP behavior is a good pivot to check who and why the user want to enable this feature through firewall which is also common traits of attack to start lateral movement.",Endpoint Detection and Response
"windows_remote_services_allow_remote_assistance:The following analytic is to identify a modification in the Windows registry to enable remote desktop assistance on a targeted machine. This technique was seen in several adversaries, malware or red teamer like azorult to remotely access the compromised or targeted host by enabling this protocol in registry. Even this protocol might be allowed in some production environment, This Anomaly behavior is a good pivot to check who and why the user want to enable this feature through registry which is un-common. And as per stated in microsoft documentation the default value of this registry is false that makes this a good indicator of suspicious behavior.",Endpoint Detection and Response
"windows_remote_services_rdp_enable:The following analytic is to identify a modification in the Windows registry to enable remote desktop protocol on a targeted machine. This technique was seen in several adversaries, malware or red teamer to remotely access the compromised or targeted host by enabling this protocol in registry. Even this protocol might be allowed in some production environment, This TTP behavior is a good pivot to check who and why the user want to enable this feature through registry which is un-common.",Endpoint Detection and Response
"windows_replication_through_removable_media:This analytic is developed to detect suspicious executable or script files created or dropped in the root drive of a targeted host. This technique is commonly used by threat actors, adversaries or even red teamers to replicate or spread in possible removable drives. Back then, WORM malware was popular for this technique where it would drop a copy of itself in the root drive to be able to spread or to have a lateral movement in other network machines. Nowadays, Ransomware like CHAOS ransomware also use this technique to spread its malicious code in possible removable drives. This TTP detection can be a good indicator that a process might create a persistence technique or lateral movement of a targeted machine. We suggest checking the process name that creates this event, the file created, user type, and the reason why that executable or scripts are dropped in the root drive.",Endpoint Detection and Response
windows_root_domain_linked_policies_discovery:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the `[Adsisearcher]` type accelerator being used to query Active Directory for domain groups. Red Teams and adversaries may leverage `[Adsisearcher]` to enumerate root domain linked policies for situational awareness and Active Directory Discovery.,Windows Security
windows_rundll32_webdav_request:The following analytic identifies rundll32.exe with the commandline arguments loading davclnt.dll function - davsetcookie - to be used to access a remote WebDav instance. This particular behavior was recently showcased in CVE-2023-23397.,Endpoint Detection and Response
windows_rundll32_webdav_with_network_connection:The following analytic identifies rundll32.exe with the commandline arguments loading davclnt.dll function - davsetcookie - to be used to access a remote WebDav instance. The analytic attempts to use join from Processes and All_Traffic to identify the network connection. This particular behavior was recently showcased in CVE-2023-23397.,"DNS Global Load Balancer
Endpoint Detection and Response
Application Load Balancer
Network Communication"
"windows_scheduled_task_created_via_xml:The following analytic identifies the creation of a scheduled task using schtasks.exe, with the flags -create being passed on the command-line along with an XML parameter. This technique has been associated with threat actors, adversaries, and red teamers seeking to gain persistence or achieve privilege escalation on targeted hosts. Notably, the Trickbot and Winter-Vivern malware have been observed employing this method, utilizing an XML file to create scheduled tasks. It is important to monitor and investigate such activity in order to mitigate potential security risks.",Endpoint Detection and Response
windows_scheduled_task_with_highest_privileges:The following analytic identifies Schtasks.exe creating a new task with highest privilege execution. This techniques was seen in asyncrat where it uses the scheduled task as part of it persistence and privilege escalation. AsyncRAT will setup a scheduled task with parameter '/rl' and 'highest' to trigger this technique. This TTP detection can be a good indicator of malware or adversaries trying to gain persistence and privilege escalation through scheduled task. We recommend to always check and monitoring this type of events even filtering is needed.,Endpoint Detection and Response
windows_schtasks_create_run_as_system:The following analytic identifies Schtasks.exe creating a new task to start and run as an elevated user - SYSTEM. This is commonly used by adversaries to spawn a process in an elevated state.,Endpoint Detection and Response
"windows_screen_capture_via_powershell:The following analytic identifies a potential PowerShell script that captures screen images on compromised or targeted hosts. This technique was observed in the Winter-Vivern malware, which attempts to capture desktop screens using a PowerShell script and send the images to its C2 server as part of its exfiltration strategy. This TTP serves as a useful indicator that a PowerShell process may be gathering desktop screenshots from a host system, potentially signaling malicious activity.",Windows Security
windows_security_account_manager_stopped:The search looks for a Windows Security Account Manager (SAM) was stopped via command-line. This is consistent with Ryuk infections across a fleet of endpoints.,Endpoint Detection and Response
windows_security_support_provider_reg_query:The following analytic identifies a process command line related to the discovery of possible Security Support Providers in the registry. This technique is being abused by adversaries or post exploitation tools like winpeas to gather LSA protection and configuration in the registry in the targeted host. This registry entry can contain several information related to LSA that validates users for local and remote sign-ins and enforces local security policies. Understanding LSA protection may give a good information in accessing LSA content in memory which is commonly attack by adversaries and tool like mimikatz to scrape password hashes or clear plain text passwords.,Endpoint Detection and Response
"windows_server_software_component_gacutil_install_to_gac:The following analytic identifies the Windows SDK utility - GACUtil.exe, being utilized to add a DLL into the Global Assembly Cache (GAC). Each computer where the Common Language Runtime is installed has a machine-wide code cache called the Global Assembly Cache. The Global Assembly Cache stores assemblies specifically designated to be shared by several applications on the computer. By adding a DLL to the GAC, this allows an adversary to call it via any other means across the operating systems. As outlined by Microsoft in their blog, it is not common to see this spawning from W3WP.exe, however, in a non-development environment it may not be common at all. Note that in order to utilize GACutil.exe, The Windows SDK must be installed, this is not a native binary.",Endpoint Detection and Response
windows_service_create_kernel_mode_driver:The following analytic identifes a new kernel driver being added to Windows using sc.exe. Adding a Kernel driver is not common day to day and should be investigated to further understand the source.,Endpoint Detection and Response
windows_service_create_remcomsvc:The following analytic identifies RemComSvc installed on an endpoint. This typically occurs when someone is moving laterally with RemCom.exe.,Microsoft System EventLog
"windows_service_create_sliverc2:When an adversary utilizes SliverC2 to laterally move with the Psexec module, it will create a service with the name and description of ""Sliver"" and ""Sliver Implant"". Note that these may be easily changed and are specific to only SliverC2. We have also created the same regex as Microsoft has outlined to attempt to capture the suspicious service path (regex101 reference).",Microsoft System EventLog
"windows_service_create_with_tscon:The following analytic detects potential RDP Hijacking attempts by monitoring a series of actions taken by an attacker to gain unauthorized access to a remote system. The attacker first runs the quser command to query the remote host for disconnected user sessions. Upon identifying a disconnected session, they use the sc.exe command to create a new Windows service with a binary path that launches tscon.exe. By specifying the disconnected session ID and a destination ID, the attacker can transfer the disconnected session to a new RDP session, effectively hijacking the user's session. This analytic allows security teams to detect and respond to RDP Hijacking attempts, mitigating potential risks and impacts on targeted systems.",Endpoint Detection and Response
"windows_service_created_with_suspicious_service_path:The following analytics uses Windows Event Id 7045, `New Service Was Installed`, to identify the creation of a Windows Service where the service binary path path is located in a non-common Service folder in Windows. Red Teams and adversaries alike may create malicious Services for lateral movement or remote code execution as well as persistence and execution. The Clop ransomware has also been seen in the wild abusing Windows services.",Microsoft System EventLog
"windows_service_created_within_public_path:The following analytc uses Windows Event Id 7045, `New Service Was Installed`, to identify the creation of a Windows Service where the service binary path is located in public paths. This behavior could represent the installation of a malicious service. Red Teams and adversaries alike may create malicious Services for lateral movement or remote code execution",Microsoft System EventLog
windows_service_creation_on_remote_endpoint:This analytic looks for the execution of `sc.exe` with command-line arguments utilized to create a Windows Service on a remote endpoint. Red Teams and adversaries alike may abuse the Service Control Manager for lateral movement and remote code execution.,Endpoint Detection and Response
"windows_service_creation_using_registry_entry:This analytic is to look for suspicious modification or creation of registry to have service entry. This technique is abused by adversaries or threat actor to persist, gain privileges in the machine or even lateral movement. This technique can be executed using reg.exe application or using windows API like for example the CrashOveride malware. This detection is a good indicator that a process is trying to create a service entry using registry ImagePath.",Endpoint Detection and Response
windows_service_deletion_in_registry:The following analytic identifies a service being deleted from the Windows Registry under CurrentControlSet\Services. Adversaries may delete a service as part of defense evasion.,Endpoint Detection and Response
windows_service_initiation_on_remote_endpoint:This analytic looks for the execution of `sc.exe` with command-line arguments utilized to start a Windows Service on a remote endpoint. Red Teams and adversaries alike may abuse the Service Control Manager for lateral movement and remote code execution.,Endpoint Detection and Response
"windows_service_stop_by_deletion:The following analytic identifies Windows Service Control, `sc.exe`, attempting to delete a service. This is typically identified in parallel with other instances of service enumeration of attempts to stop a service and then delete it. Adversaries utilize this technique to terminate security services or other related services to continue there objective and evade detections.",Endpoint Detection and Response
windows_service_stop_via_net__and_sc_application:This analytic identifies suspicious attempts to stop services on a system using either `net.exe` or `sc.exe`. This technique is used by adversaries to terminate security services or other related services to continue their objective and evade detections. This technique is also commonly used by ransomware threat actors to successfully encrypt databases or files being processed or used by Windows OS Services.,Endpoint Detection and Response
windows_service_stop_win_updates:The following analytic identifies a windows update service being disabled in Windows OS. This technique is being abused by adversaries or threat actors to add defense mechanisms to their malware implant in the targeted host. Disabling windows update will put the compromised host vulnerable in some zero day exploit or even some update features against threats. RedLine Stealer kills this service as part of its defense evasion mechanism.,Microsoft System EventLog
"windows_snake_malware_file_modification_crmlog:The following analytic identfies a .crmlog written to windows\registration. Per the report, typically, this file has been found within the %windows%\Registration directory with the format of <RANDOM_GUID>.<RANDOM_GUID>.crmlog and is decrypted by Snake's kernel driver.",Endpoint Detection and Response
"windows_snake_malware_kernel_driver_comadmin:The following analytic identifies the comadmin.dat file written to disk, which is related to Snake Malware. From the report, Snakes installer drops the kernel driver and a custom DLL which is used to load the driver into a single AES encrypted file on disk. Typically, this file is named comadmin.dat and is stored in the %windows%\system32\Com directory.",Endpoint Detection and Response
"windows_snake_malware_registry_modification_wav_openwithprogids:The follow analytic identifies the registry being modified at .wav\\OpenWithProgIds\, which is related to the Snake Malware campaign. Upon execution, Snake's WerFault.exe will attempt to decrypt an encrypted blob within the Windows registry that is typically found at HKLM:\SOFTWARE\Classes\.wav\OpenWithProgIds. The encrypted data includes the AES key, IV, and path that is used to find and decrypt the file containing Snake's kernel driver and kernel driver loader.",Endpoint Detection and Response
"windows_snake_malware_service_create:The following analytic identifies a new service WerFaultSvc being created with a binary path located in the windows winsxs path. Per the report, the Snake version primarily discussed in this advisory registers a service to maintain persistence on a system. Typically this service is named WerFaultSvc which we assess was used to blend in with the legitimate Windows service WerSvc. On boot, this service will execute Snakes WerFault.exe, which Snake developers chose to hide among the numerous valid Windows WerFault.exe files in the windows WinSxS directory. Executing WerFault.exe will start the process of decrypting Snakes components and loading them into memory.",Microsoft System EventLog
"windows_spearphishing_attachment_connect_to_none_ms_office_domain:this detection was designed to identifies suspicious office documents that connect to a website aside from Microsoft Office Domain. This technique was seen in several malicious documents that abuses .rels xml properties of MS office to connect or download malicious files. This hunting query can be a good pivot or guide to check what URL link it tries to connect, what domain, where the documents came from and how the connection happens.",Microsoft Sysmon Logs
"windows_spearphishing_attachment_onenote_spawn_mshta:The following detection identifies the latest behavior utilized by different malware families (including TA551, AsyncRat, Redline and DCRAT). This detection identifies onenote Office Product spawning `mshta.exe`. In malicious instances, the command-line of `mshta.exe` will contain the `hta` file locally, or a URL to the remote destination. In addition, Threat Research has released a detections identifying suspicious use of `mshta.exe`. In this instance, we narrow our detection down to the Office suite as a parent process. During triage, review all file modifications. Capture and analyze any artifacts on disk. The Office Product, or `mshta.exe` will have reached out to a remote destination, capture and block the IPs or domain. Review additional parallel processes for further activity.",Endpoint Detection and Response
"windows_special_privileged_logon_on_multiple_hosts:The following analytic leverages Event ID 4672 to identify a source user authenticating with special privileges across a large number remote endpoints. Specifically, the logic will trigger when a source user obtains special privileges across 30 or more target computers within a 5 minute timespan. Special privileges are assigned to a new logon session when sensitive privileges like SeDebugPrivilege and SeImpersonatePrivilege are assigned. This behavior could represent an adversary who is moving laterally and executing remote code across the network. It can also be triggered by other behavior like an adversary enumerating network shares. As environments differ across organizations, security teams should customize the thresholds of this detection as needed.",Windows Security
"windows_steal_authentication_certificates_certificate_issued:The following analytic identifies when a new certificate is issued against the Certificate Services - AD CS. By its very nature this is not malicious, but should be tracked and correlated with other events related to certificates being issued. When the CA issues the certificate, it creates EID 4887 'Certificate Services approved a certificate request and issued a certificate"". The event supplies the requester user context, the DNS hostname of the machine they requested the certificate from, and the time they requested the certificate. The attributes fields in these event commonly has values for CDC, RMD, and CCM which correspond to Client DC, Request Machine DNS name, and Cert Client Machine, respectively.",Windows Security
"windows_steal_authentication_certificates_certificate_request:The following analytic identifies when a new certificate is requested against the Certificate Services - AD CS. By its very nature this is not malicious, but should be tracked and correlated with other events related to certificate requests. When an account requests a certificate, the CA generates event ID (EID) 4886 ""Certificate Services received a certificate request"".",Windows Security
"windows_steal_authentication_certificates_certutil_backup:The following analytic is focused on CertUtil.exe performing a backup of the Certificate Store. Typically, administrators may perform this task to migrate or perform backups of the store, however it may be found uncommon in most organizations.",Endpoint Detection and Response
"windows_steal_authentication_certificates_cryptoapi:The following analytic utilizes a Windows Event Log - CAPI2 - or CryptoAPI 2, to identify suspicious certificate extraction. Typically, this event log is meant for diagnosing PKI issues, however is a great source to identify certificate exports. Note that this event log is noisy as it captures common PKI requests from many different processes. EventID 70 is generated anytime a certificate is exported. The description for EventID 70 is ""Acquire Certificate Private Key"". STRT tested this analytic using Mimikatz binary and the implementation of Mimikatz in Cobalt Strike.",Windows Security
windows_steal_authentication_certificates_cs_backup:The following analytic identifies when the Active Directory Certificate Services store is backed up utilizing Event ID 4876. This event triggers whenever the backup occurs in the UI of CertSrv.msc or via CertUtil.exe -BackupDB occurs.,Windows Security
"windows_steal_authentication_certificates_export_certificate:The following analytic identifies the use of export-certificate, the PowerShell cmdlet, being utilized on the command-line in an attempt to export the certifcate from the local Windows Certificate Store.",Endpoint Detection and Response
"windows_steal_authentication_certificates_export_pfxcertificate:The following analytic identifies the use of export-pfxcertificate, the PowerShell cmdlet, being utilized on the command-line in an attempt to export the certifcate from the local Windows Certificate Store.",Endpoint Detection and Response
windows_steal_or_forge_kerberos_tickets_klist:The following analytic identifies a process execution of Windows OS klist.exe tool. This tool is being abused or used by several post exploitation tool such as winpeas that being used by ransomware prestige to display or gather list of currently cached kerberos ticket. This cahced data can be used for lateral movement or even privilege escalation on the targeted host. This hunting query can be a good pivot in possible kerberos attack or pass the hash technique.,Endpoint Detection and Response
"windows_system_binary_proxy_execution_compiled_html_file_decompile:The following analytic identifies the decompile parameter with the HTML Help application, HH.exe. This is a uncommon command to see ran and behavior. Most recently this was seen in a APT41 campaign where a CHM file was delivered and a script inside used a technique for running an arbitrary command in a CHM file via an ActiveX object. This unpacks an HTML help file to a specified path for launching the next stage.",Endpoint Detection and Response
"windows_system_discovery_using_ldap_nslookup:The following analytic identifies the execution of nslookup.exe tool to get domain information. Nslookup.exe is a command-line tool that can display information to diagnose domain name systems. This Nslookup feature is being abused by Qakbot malware to gather domain information such as SRV service location records, server name and many more.",Endpoint Detection and Response
"windows_system_discovery_using_qwinsta:The following analytic identifies the execution of qwinsta.exe executable in Windows Operating System. This Windows executable file can display information about sessions on a remote desktop session host server. The information includes servername, sessionname, username and many more. This tool is being abused of Qakbot malware to gather information to the targeted or compromised host that will be send back to its Command And Control server.",Endpoint Detection and Response
"windows_system_file_on_disk:The following hunting analytic will assist with identifying new .sys files introduced in the environment. This query is meant to identify sys file creates on disk. There will be noise, but reducing common process names or applications should help to limit any volume. The idea is to identify new sys files written to disk and identify them before they're added as a new kernel mode driver.",Endpoint Detection and Response
"windows_system_logoff_commandline:The following analytic identifies Windows commandline to logoff a windows host machine. This technique was seen in several APT, RAT like dcrat and other commodity malware to shutdown the machine to add more impact, interrupt access, aid destruction of the system like wiping disk or inhibit system recovery. This TTP is a good pivot to check why application trigger this commandline which is not so common way to logoff a machine.",Endpoint Detection and Response
"windows_system_network_config_discovery_display_dns:The following analytic identifies a process command line that retrieves dns reply information using Windows OS built-in tool IPConfig. This technique is being abused by threat actors, adversaries and post exploitation tools like WINPEAS to retrieve DNS information for the targeted host. This IPConfig parameter (/displaydns) can show dns server resource record, record name, record type, time to live data length and dns reply. This hunting detection can be a good pivot to check which process is executing this command line in specific host system that may lead to malware or adversaries gathering network information.",Endpoint Detection and Response
"windows_system_network_connections_discovery_netsh:The following analytic identifies a process execution of Windows OS built-in tool netsh.exe to show state, configuration and profile of host firewall. This tool is being used or abused by several adversaries or even post exploitation tool to bypass firewall rules or to discover firewall settings. This hunting detection can help to detect a possible suspicious usage of netsh.exe to retrieve firewall settings or even firewall wlan profile. We recommend checking which parent process and process name execute this command. Also check the process file path for verification that may lead to further TTP's threat behavior.",Endpoint Detection and Response
"windows_system_reboot_commandline:The following analytic identifies Windows commandline to reboot a windows host machine. This technique was seen in several APT, RAT like dcrat and other commodity malware to shutdown the machine to add more impact, interrupt access, aid destruction of the system like wiping disk or inhibit system recovery. This TTP is a good pivot to check why application trigger this commandline which is not so common way to reboot a machine. Compare to shutdown and logoff shutdown.exe feature, reboot seen in some automation script like ansible to reboot the machine.",Endpoint Detection and Response
"windows_system_script_proxy_execution_syncappvpublishingserver:The following analytic identifies the abuse of Syncappvpublishingserver.vbs, which is a native script on Windows that may be utilized to download remote files or perform privilege escalation.",Endpoint Detection and Response
"windows_system_shutdown_commandline:The following analytic identifies Windows commandline to shutdown a windows host machine. This technique was seen in several APT, RAT like dcrat and other commodity malware to shutdown the machine to add more impact, interrupt access, aid destruction of the system like wiping disk or inhibit system recovery. This TTP is a good pivot to check why application trigger this commandline which is not so common way to shutdown a machine.",Endpoint Detection and Response
"windows_system_time_discovery_w32tm_delay:The following analytic identifies DCRat delay time tactics using w32tm. This technique was seen in DCRAT malware where it uses stripchart function of w32tm.exe application to delay the execution of its payload like c2 communication , beaconing and execution. This anomaly detection may help the analyst to check other possible event like the process who execute this command that may lead to DCRat attack.",Endpoint Detection and Response
"windows_system_user_discovery_via_quser:The following analytic identifies a process execution of Windows OS quser.exe tool. This tool is being abused or used by several post exploitation tool such as winpeas that being used by ransomware prestige to display or gather information about user sessions on a Remote Desktop Session Host server. This command can find out if a specific user is logged on to a specific Remote Desktop Session Host server. This tool can retrieve some RDP information that can be use by attacker for further attack like Name of the user , Name of the session on the Remote Desktop Session Host server, Session ID, State of the session (active or disconnected), Idle time (the number of minutes since the last keystroke or mouse movement at the session) and Date and time the user logged on.",Endpoint Detection and Response
windows_terminating_lsass_process:This analytic is to detect a suspicious process terminating Lsass process. Lsass process is known to be a critical process that is responsible for enforcing security policy system. This process was commonly targetted by threat actor or red teamer to gain privilege escalation or persistence in the targeted machine because it handles credentials of the logon users. In this analytic we tried to detect a suspicious process having a granted access PROCESS_TERMINATE to lsass process to modify or delete protected registrys. This technique was seen in doublezero malware that tries to wipe files and registry in compromised hosts. This anomaly detection can be a good pivot of incident response for possible credential dumping or evading security policy in a host or network environment.,Microsoft Sysmon Logs
"windows_unusual_count_of_disabled_users_failed_auth_using_kerberos:The following analytic identifies one source endpoint failing to authenticate with multiple disabled domain users using the Kerberos protocol. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment using Kerberos to obtain initial access or elevate privileges. As attackers progress in a breach, mistakes will be made. In certain scenarios, adversaries may execute a password spraying attack against disabled users. Event 4768 is generated every time the Key Distribution Center issues a Kerberos Ticket Granting Ticket (TGT). Failure code `0x12` stands for `clients credentials have been revoked` (account disabled, expired or locked out).\The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual number of users. To customize this analytic, users can try different combinations of the `bucket` span time and the calculation of the `upperBound` field. This logic can be used for real time security monitoring as well as threat hunting exercises.\This detection will only trigger on domain controllers, not on member servers or workstations.\The analytics returned fields allow analysts to investigate the event further by providing fields like source ip and attempted user accounts.",Windows Security
"windows_unusual_count_of_invalid_users_fail_to_auth_using_kerberos:The following analytic identifies one source endpoint failing to authenticate with multiple invalid domain users using the Kerberos protocol. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment using Kerberos to obtain initial access or elevate privileges. As attackers progress in a breach, mistakes will be made. In certain scenarios, adversaries may execute a password spraying attack using an invalid list of users. Event 4768 is generated every time the Key Distribution Center issues a Kerberos Ticket Granting Ticket (TGT). Failure code 0x6 stands for `client not found in Kerberos database` (the attempted user is not a valid domain user).\The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual number of users. To customize this analytic, users can try different combinations of the `bucket` span time and the calculation of the `upperBound` field. This logic can be used for real time security monitoring as well as threat hunting exercises.\This detection will only trigger on domain controllers, not on member servers or workstations.\The analytics returned fields allow analysts to investigate the event further by providing fields like source ip and attempted user accounts.",Windows Security
"windows_unusual_count_of_invalid_users_failed_to_auth_using_ntlm:The following analytic identifies one source endpoint failing to authenticate with multiple invalid users using the NTLM protocol. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment using NTLM to obtain initial access or elevate privileges. As attackers progress in a breach, mistakes will be made. In certain scenarios, adversaries may execute a password spraying attack using an invalid list of users. Event 4776 is generated on the computer that is authoritative for the provided credentials. For domain accounts, the domain controller is authoritative. For local accounts, the local computer is authoritative. Error code 0xC0000064 stands for `The username you typed does not exist` (the attempted user is a legitimate domain user).\The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual number of users. To customize this analytic, users can try different combinations of the `bucket` span time and the calculation of the `upperBound` field. This logic can be used for real time security monitoring as well as threat hunting exercises.\This detection will only trigger on domain controllers, not on member servers or workstations.\The analytics returned fields allow analysts to investigate the event further by providing fields like source workstation name and attempted user accounts.",Windows Security
"windows_unusual_count_of_users_fail_to_auth_wth_explicitcredentials:The following analytic identifies a source user failing to authenticate with multiple users using explicit credentials on a host. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment to obtain initial access or elevate privileges. Event 4648 is generated when a process attempts an account logon by explicitly specifying that accounts credentials. This event generates on domain controllers, member servers, and workstations.\The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual number of users. To customize this analytic, users can try different combinations of the `bucket` span time and the calculation of the `upperBound` field. This logic can be used for real time security monitoring as well as threat hunting exercises.\This detection will trigger on the potenfially malicious host, perhaps controlled via a trojan or operated by an insider threat, from where a password spraying attack is being executed.\The analytics returned fields allow analysts to investigate the event further by providing fields like source account, attempted user accounts and the endpoint were the behavior was identified.",Windows Security
"windows_unusual_count_of_users_failed_to_auth_using_kerberos:The following analytic identifies one source endpoint failing to authenticate with multiple valid users using the Kerberos protocol. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment using Kerberos to obtain initial access or elevate privileges. Event 4771 is generated when the Key Distribution Center fails to issue a Kerberos Ticket Granting Ticket (TGT). Failure code 0x18 stands for `wrong password provided` (the attempted user is a legitimate domain user).\The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual number of users. To customize this analytic, users can try different combinations of the `bucket` span time and the calculation of the `upperBound` field. This logic can be used for real time security monitoring as well as threat hunting exercises.\This detection will only trigger on domain controllers, not on member servers or workstations.\The analytics returned fields allow analysts to investigate the event further by providing fields like source ip and attempted user accounts.",Windows Security
"windows_unusual_count_of_users_failed_to_authenticate_from_process:The following analytic identifies a source process name failing to authenticate with multiple users. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment to obtain initial access or elevate privileges. Event 4625 generates on domain controllers, member servers, and workstations when an account fails to logon. Logon Type 2 describes an iteractive logon attempt.\The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual number of users. To customize this analytic, users can try different combinations of the `bucket` span time and the calculation of the `upperBound` field. This logic can be used for real time security monitoring as well as threat hunting exercises.\This detection will trigger on the potenfially malicious host, perhaps controlled via a trojan or operated by an insider threat, from where a password spraying attack is being executed. This could be a domain controller as well as a member server or workstation.\The analytics returned fields allow analysts to investigate the event further by providing fields like source process name, source account and attempted user accounts.",Windows Security
"windows_unusual_count_of_users_failed_to_authenticate_using_ntlm:The following analytic identifies one source endpoint failing to authenticate with multiple valid users using the NTLM protocol. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment using NTLM to obtain initial access or elevate privileges. Event 4776 is generated on the computer that is authoritative for the provided credentials. For domain accounts, the domain controller is authoritative. For local accounts, the local computer is authoritative. Error code 0xC000006A means: misspelled or bad password (the attempted user is a legitimate domain user).\The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual number of users. To customize this analytic, users can try different combinations of the `bucket` span time and the calculation of the `upperBound` field. This logic can be used for real time security monitoring as well as threat hunting exercises.\This detection will only trigger on domain controllers, not on member servers or workstations.\The analytics returned fields allow analysts to investigate the event further by providing fields like source workstation name and attempted user accounts.",Windows Security
"windows_unusual_count_of_users_remotely_failed_to_auth_from_host:The following analytic identifies a source host failing to authenticate against a remote host with multiple users. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment to obtain initial access or elevate privileges. Event 4625 documents each and every failed attempt to logon to the local computer. This event generates on domain controllers, member servers, and workstations. Logon Type 3 describes an remote authentication attempt.\The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual number of users. To customize this analytic, users can try different combinations of the `bucket` span time and the calculation of the `upperBound` field. This logic can be used for real time security monitoring as well as threat hunting exercises.\This detection will trigger on the host that is the target of the password spraying attack. This could be a domain controller as well as a member server or workstation.\The analytics returned fields allow analysts to investigate the event further by providing fields like source process name, source account and attempted user accounts.",Windows Security
windows_user_execution_malicious_url_shortcut_file:This analytic will identify suspicious creation of URL shortcut link files. This technique was seen in CHAOS ransomware where it will drop this .url link file in %startup% folder that contains the path of its malicious dropped file to execute upon the reboot of the targeted host. The creation of this file can be created by a normal application or software but it is a good practice to verify this type of file specially the resource it tries to execute which is commonly a website.,Endpoint Detection and Response
"windows_valid_account_with_never_expires_password:The following analytic identifies net.exe updating user account policies for password requirement with non-expiring password. This technique was seen in several adversaries and malware like Azorult to maintain the foothold (persistence), gaining privilege escalation, defense evasion and possible for lateral movement for specific users or created user account on the targeted host. This TTP detections is a good pivot to see further what other events that users executes on the machines.",Endpoint Detection and Response
"windows_vulnerable_3cx_software:The following analytic leverages Sysmon, a powerful system monitoring and logging tool, to pinpoint instances of the 3CXDesktopApp.exe with a FileVersion of 18.12.x.Recently, 3CX has discovered a vulnerability specifically in versions 18.12.407 and 18.12.416 of the desktop app.",Microsoft Sysmon Logs
"windows_vulnerable_driver_loaded:The following analytic utilizes a known list of vulnerable Windows drivers to help defenders find potential persistence or privelege escalation via a vulnerable driver. This analytic uses Sysmon EventCode 6, driver loading. A known gap with this lookup is that it does not use the hash or known signer of the vulnerable driver therefore it is up to the defender to identify version and signing info and confirm it is a vulnerable driver.",Microsoft Sysmon Logs
"windows_winlogon_with_public_network_connection:The following analytic is designed to detect anomalous behavior associated with the BlackLotus Campaign, a sophisticated bootkit attack reported by ESET and further investigated in a blog by Microsoft, which provided hunting queries for security analysts. The primary focus of this analytic is to identify instances of Winlogon.exe, a critical Windows process, connecting to public IP space, which is indicative of potential malicious activity.\ The BlackLotus Campaign is a bootkit-based attack that compromises system integrity by infecting the Master Boot Record (MBR) and Volume Boot Record (VBR). This malware variant can bypass traditional security measures, load before the operating system, and maintain persistence on the target system.\Winlogon.exe is a critical Windows process responsible for managing user logon and logoff processes. Under normal circumstances, Winlogon.exe should not be connecting to public IP addresses. However, if it does, it may indicate that the process has been compromised as part of the BlackLotus Campaign or another malicious operation.\This analytic monitors network connections made by Winlogon.exe and triggers an alert if it detects connections to public IP space. By identifying such anomalous behavior, security analysts can investigate further and respond swiftly to potential threats.","DNS Global Load Balancer
Endpoint Detection and Response
Application Load Balancer
Network Communication"
windows_wmi_impersonate_token:The following analytic identifies a possible wmi token impersonation activities in a process or command. This technique was seen in Qakbot malware where it will execute a vbscript code contains wmi impersonation object to gain privilege escalation or as defense evasion. This Anomaly detection looks for wmiprvse.exe SourceImage having a duplicate handle or full granted access in a target process.,Microsoft Sysmon Logs
"windows_wmi_process_and_service_list:The following analytic identifies suspicious process command line, where WMI is performing an event query looking for running processes or running services. This technique is commonly found where the adversary will identify services and system information on the compromised machine. During triage, review parallel processes within the same timeframe. Review the full script block to identify other related artifacts.",Endpoint Detection and Response
windows_wmi_process_call_create:This analytic is to look for wmi commandlines to execute or create process. This technique was used by adversaries or threat actor to execute their malicious payload in local or remote host. This hunting query is a good pivot to start to look further which process trigger the wmi or what process it execute locally or remotely.,Endpoint Detection and Response
"winevent_scheduled_task_created_to_spawn_shell:The following query utilizes Windows Security EventCode 4698, `A scheduled task was created`, to identify suspicious tasks registered on Windows either via schtasks.exe OR TaskService with a command to be executed with a native Windows shell (PowerShell, Cmd, Wscript, Cscript).\ The search will return the first time and last time the task was registered, as well as the `Command` to be executed, `Task Name`, `Author`, `Enabled`, and whether it is `Hidden` or not.\ schtasks.exe is natively found in `C:\Windows\system32` and `C:\Windows\syswow64`.\ The following DLL(s) are loaded when schtasks.exe or TaskService is launched -`taskschd.dll`. If found loaded by another process, it is possible a scheduled task is being registered within that process context in memory.\ Upon triage, identify the task scheduled source. Was it schtasks.exe or via TaskService? Review the job created and the Command to be executed. Capture any artifacts on disk and review. Identify any parallel processes within the same timeframe to identify source.",Windows Security
"winevent_scheduled_task_created_within_public_path:The following query utilizes Windows Security EventCode 4698, `A scheduled task was created`, to identify suspicious tasks registered on Windows either via schtasks.exe OR TaskService with a command to be executed from a user writeable file path.\ The search will return the first time and last time the task was registered, as well as the `Command` to be executed, `Task Name`, `Author`, `Enabled`, and whether it is `Hidden` or not.\ schtasks.exe is natively found in `C:\Windows\system32` and `C:\Windows\syswow64`.\ The following DLL(s) are loaded when schtasks.exe or TaskService is launched -`taskschd.dll`. If found loaded by another process, it is possible a scheduled task is being registered within that process context in memory.\ Upon triage, identify the task scheduled source. Was it schtasks.exe or was it via TaskService. Review the job created and the Command to be executed. Capture any artifacts on disk and review. Identify any parallel processes within the same timeframe to identify source.",Windows Security
"winevent_windows_task_scheduler_event_action_started:The following hunting analytic assists with identifying suspicious tasks that have been registered and ran in Windows using EventID 200 (action run) and 201 (action completed). It is recommended to filter based on ActionName by specifying specific paths not used in your environment. After some basic tuning, this may be effective in capturing evasive ways to register tasks on Windows. Review parallel events related to tasks being scheduled. EventID 106 will generate when a new task is generated, however, that does not mean it ran. Capture any files on disk and analyze.",Microsoft Windows Task Scheduler
"winhlp32_spawning_a_process:The following analytic identifies winhlp32.exe, found natively in `c:\windows\`, spawning a child process that loads a file out of appdata, programdata, or temp. Winhlp32.exe has a rocky past in that multiple vulnerabilities were found and added to MetaSploit. WinHlp32.exe is required to display 32-bit Help files that have the "".hlp"" file name extension. This particular instance is related to a Remcos sample where dynwrapx.dll is added to the registry under inprocserver32, and later module loaded by winhlp32.exe to spawn wscript.exe and load a vbs or file from disk. During triage, review parallel processes to identify further suspicious behavior. Review module loads for unsuspecting unsigned modules. Capture any file modifications and analyze.",Endpoint Detection and Response
"winrm_spawning_a_process:The following analytic identifies suspicious processes spawning from WinRM (wsmprovhost.exe). This analytic is related to potential exploitation of CVE-2021-31166. which is a kernel-mode device driver http.sys vulnerability. Current proof of concept code will blue-screen the operating system. However, http.sys used by many different Windows processes, including WinRM. In this case, identifying suspicious process create (child processes) from `wsmprovhost.exe` is what this analytic is identifying.",Endpoint Detection and Response
"winword_spawning_cmd:The following detection identifies Microsoft Word spawning `cmd.exe`. Typically, this is not common behavior and not default with winword.exe. Winword.exe will generally be found in the following path `C:\Program Files\Microsoft Office\root\Office16` (version will vary). Cmd.exe spawning from winword.exe is common for a spearphishing attachment and is actively used. Albeit, the command-line will indicate what is being executed. During triage, review parallel processes and identify any files that may have been written. It is possible that COM is utilized to trampoline the child process to `explorer.exe` or `wmiprvse.exe`.",Endpoint Detection and Response
"winword_spawning_powershell:The following detection identifies Microsoft Word spawning PowerShell. Typically, this is not common behavior and not default with winword.exe. Winword.exe will generally be found in the following path `C:\Program Files\Microsoft Office\root\Office16` (version will vary). PowerShell spawning from winword.exe is common for a spearphishing attachment and is actively used. Albeit, the command executed will most likely be encoded and captured via another detection. During triage, review parallel processes and identify any files that may have been written.",Endpoint Detection and Response
"winword_spawning_windows_script_host:The following detection identifies Microsoft Winword.exe spawning Windows Script Host - `cscript.exe` or `wscript.exe`. Typically, this is not common behavior and not default with Winword.exe. Winword.exe will generally be found in the following path `C:\Program Files\Microsoft Office\root\Office16` (version will vary). `cscript.exe` or `wscript.exe` default location is `c:\windows\system32\` or c:windows\syswow64\`. `cscript.exe` or `wscript.exe` spawning from Winword.exe is common for a spearphishing attachment and is actively used. Albeit, the command-line executed will most likely be obfuscated and captured via another detection. During triage, review parallel processes and identify any files that may have been written. Review the reputation of the remote destination and block accordingly.",Endpoint Detection and Response
wmi_permanent_event_subscription:This search looks for the creation of WMI permanent event subscriptions.,Windows Security
"wmi_recon_running_process_or_services:The following analytic identifies suspicious PowerShell script execution via EventCode 4104, where WMI is performing an event query looking for running processes or running services. This technique is commonly found in malware and APT events where the adversary will map all running security applications or services on the compromised machine. During triage, review parallel processes within the same timeframe. Review the full script block to identify other related artifacts.",Windows Security
wmi_temporary_event_subscription:This search looks for the creation of WMI temporary event subscriptions.,Windows Security
"wmic_group_discovery:The following hunting analytic identifies the use of `wmic.exe` enumerating local groups on the endpoint. \Typically, by itself, is not malicious but may raise suspicion based on time of day, endpoint and username. \During triage, review parallel processes and identify any further suspicious behavior.",Endpoint Detection and Response
wmic_noninteractive_app_uninstallation:This analytic indentifies WMIC command-line attempting to uninstall application non-interactively. This technique was seen in IcedID to uninstall AV products on the compromised host to evade detection. This Hunting query maybe a good indicator that some process tries to uninstall application using wmic which is not a common behavior. This approach may seen in some script or third part appication to uninstall their application but it is a good thing to check what it uninstall and why.,Endpoint Detection and Response
"wmic_xsl_execution_via_url:The following analytic identifies `wmic.exe` loading a remote XSL (eXtensible Stylesheet Language) script. This originally was identified by Casey Smith, dubbed Squiblytwo, as an application control bypass. Many adversaries will utilize this technique to invoke JScript or VBScript within an XSL file. This technique can also execute local/remote scripts and, similar to its Regsvr32 ""Squiblydoo"" counterpart, leverages a trusted, built-in Windows tool. Adversaries may abuse any alias in Windows Management Instrumentation provided they utilize the /FORMAT switch. Upon identifying a suspicious execution, review for confirmed network connnection and script download.",Endpoint Detection and Response
"wmiprsve_lolbas_execution_process_spawn:The following analytic identifies `wmiprsve.exe` spawning a LOLBAS execution process. When adversaries execute code on remote endpoints abusing Windows Management Instrumentation (WMI), the executed command is spawned as a child process of `wmiprvse.exe`. The LOLBAS project documents Windows native binaries that can be abused by threat actors to perform tasks like executing malicious code. Looking for child processes of wmiprvse.exe that are part of the LOLBAS project can help defenders identify lateral movement activity.",Endpoint Detection and Response
"wscript_or_cscript_suspicious_child_process:This analytic identifies a suspicious spawned process by WScript or CScript process. This technique was a common technique used by adversaries and malware to execute different LOLBIN, other scripts like PowerShell or spawn a suspended process to inject its code as a defense evasion. This TTP may detect some normal script that using several application tool that are in the list of the child process it detects but a good pivot and indicator that a script is may execute suspicious code.",Endpoint Detection and Response
"wsmprovhost_lolbas_execution_process_spawn:The following analytic identifies `Wsmprovhost.exe` spawning a LOLBAS execution process. When adversaries execute code on remote endpoints abusing the Windows Remote Management (WinRm) protocol, the executed command is spawned as a child processs of `Wsmprovhost.exe`. The LOLBAS project documents Windows native binaries that can be abused by threat actors to perform tasks like executing malicious code. Looking for child processes of Wsmprovhost.exe that are part of the LOLBAS project can help defenders identify lateral movement activity.",Endpoint Detection and Response
"wsreset_uac_bypass:This search is to detect a suspicious modification of registry related to UAC bypass. This technique is to modify the registry in this detection, create a registry value with the path of the payload and run WSreset.exe to bypass User account Control.",Endpoint Detection and Response
xmrig_driver_loaded:This analytic identifies XMRIG coinminer driver installation on the system. The XMRIG driver name by default is `WinRing0x64.sys`. This cpu miner is an open source project that is commonly abused by adversaries to infect and mine bitcoin.,Microsoft Sysmon Logs
xsl_script_execution_with_wmic:This search is to detect a suspicious wmic.exe process or renamed wmic process to execute malicious xsl file. This technique was seen in FIN7 to execute its malicous jscript using the .xsl as the loader with the help of wmic.exe process. This TTP is really a good indicator for you to hunt further for FIN7 or other attacker that known to used this technique.,Endpoint Detection and Response
"zeek_x509_certificate_with_punycode:The following analytic utilizes the Zeek x509 log. Modify the zeek_x509 macro with your index and sourcetype as needed. You will need to ensure the full x509 is logged as the potentially malicious punycode is nested under subject alternative names. In this particular analytic, it will identify punycode within the subject alternative name email and other fields. Note, that OtherFields is meant to be BOOL (true,false), therefore we may never see xn-- in that field. Upon identifying punycode, manually copy and paste, or add CyberChef recipe to query, and decode the punycode manually.",Zeek
abnormally_high_aws_instances_launched_by_user_-_mltk:This search looks for AWS CloudTrail events where a user successfully launches an abnormally high number of instances. This search is deprecated and have been translated to use the latest Change Datamodel.,AWS
abnormally_high_aws_instances_terminated_by_user_-_mltk:This search looks for AWS CloudTrail events where a user successfully terminates an abnormally high number of instances. This search is deprecated and have been translated to use the latest Change Datamodel.,AWS
asl_aws_multi-factor_authentication_disabled:The following analytic identifies an attempt to disable multi-factor authentication for an AWS IAM user. An adversary who has obtained access to an AWS tenant may disable multi-factor authentication as a way to plant a backdoor and maintain persistence using a valid account. This way the attackers can keep persistance in the environment without adding new users.,AWS
aws_multi-factor_authentication_disabled:The following analytic identifies an attempt to disable multi-factor authentication for an AWS IAM user. An adversary who has obtained access to an AWS tenant may disable multi-factor authentication as a way to plant a backdoor and maintain persistence using a valid account. This way the attackers can keep persistance in the environment without adding new users.,AWS
"aws_successful_single-factor_authentication:The following analytic identifies a successful Console Login authentication event against an AWS IAM user for an account without Multi-Factor Authentication enabled. This could be evidence of a misconfiguration, a policy violation or an account take over attempt that should be investigated",AWS
"azure_active_directory_high_risk_sign-in:The following analytic triggers on a high risk sign-in against Azure Active Directory identified by Azure Identity Protection. Identity Protection monitors sign-in events using heuristics and machine learning to identify potentially malicious events and categorizes them in three categories high, medium and low.",IDS or IPS
azure_ad_multi-factor_authentication_disabled:The following analytic identifies an attempt to disable multi-factor authentication for an Azure AD user. An adversary who has obtained access to an Azure AD tenant may disable multi-factor authentication as a way to plant a backdoor and maintain persistence using a valid account. This way the attackers can keep persistance in the environment without adding new users.,IDS or IPS
"azure_ad_successful_single-factor_authentication:The following analytic identifies a successful authentication event against Azure Active Directory for an account without Multi-Factor Authentication enabled. This could be evidence of a missconfiguration, a policy violation or an account take over attempt that should be investigated",IDS or IPS
"cmd_echo_pipe_-_escalation:This analytic identifies a common behavior by Cobalt Strike and other frameworks where the adversary will escalate privileges, either via `jump` (Cobalt Strike PTH) or `getsystem`, using named-pipe impersonation. A suspicious event will look like `cmd.exe /c echo 4sgryt3436 > \\.\Pipe\5erg53`.",Endpoint Detection and Response
"confluence_unauthenticated_remote_code_execution_cve-2022-26134:The following analytic assists with identifying CVE-2022-26134 based exploitation utilizing the Web datamodel to cover network and CIM compliant web logs. The parameters were captured from live scanning and the POC provided by Rapid7. This analytic is written against multiple proof of concept codes released and seen in the wild (scanning). During triage, review any endpoint based logs for further activity including writing a jsp file to disk and commands/processes spawning running as root from the Confluence process.","Web Server
Web Proxy"
"detect_azurehound_command-line_arguments:The following analytic identifies the common command-line argument used by AzureHound `Invoke-AzureHound`. Being the script is FOSS, function names may be modified, but these changes are dependent upon the operator. In most instances the defaults are used. This analytic works to identify the common command-line attributes used. It does not cover the entirety of every argument in order to avoid false positives.",Endpoint Detection and Response
detect_baron_samedit_cve-2021-3156:This search detects the heap-based buffer overflow of sudoedit,None
detect_baron_samedit_cve-2021-3156_segfault:This search detects the heap-based buffer overflow of sudoedit,None
detect_baron_samedit_cve-2021-3156_via_osquery:This search detects the heap-based buffer overflow of sudoedit,OSQuery
"detect_f5_tmui_rce_cve-2020-5902:This search detects remote code exploit attempts on F5 BIG-IP, BIG-IQ, and Traffix SDC devices",F5 Big-Ip
"detect_rclone_command-line_usage:This analytic identifies commonly used command-line arguments used by `rclone.exe` to initiate a file transfer. Some arguments were negated as they are specific to the configuration used by adversaries. In particular, an adversary may list the files or directories of the remote file share using `ls` or `lsd`, which is not indicative of malicious behavior. During triage, at this stage of a ransomware event, exfiltration is about to occur or has already. Isolate the endpoint and continue investigating by review file modifications and parallel processes.",Endpoint Detection and Response
"detect_renamed_7-zip:The following analytic identifies renamed 7-Zip usage using Sysmon. At this stage of an attack, review parallel processes and file modifications for data that is staged or potentially have been exfiltrated. This analytic utilizes the OriginalFileName to capture the renamed process. During triage, validate this is the legitimate version of `7zip` by reviewing the PE metadata. In addition, review parallel processes for further suspicious behavior.",Endpoint Detection and Response
"detect_rundll32_application_control_bypass_-_advpack:The following analytic identifies rundll32.exe loading advpack.dll and ieadvpack.dll by calling the LaunchINFSection function on the command line. This particular technique will load script code from a file. Upon a successful execution, the following module loads may occur - clr.dll, jscript.dll and scrobj.dll. During investigation, identify script content origination. Generally, a child process will spawn from rundll32.exe, but that may be bypassed based on script code contents. Rundll32.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64. During investigation, review any network connections and obtain the script content executed. It's possible other files are on disk.",Endpoint Detection and Response
"detect_rundll32_application_control_bypass_-_setupapi:The following analytic identifies rundll32.exe loading setupapi.dll and iesetupapi.dll by calling the LaunchINFSection function on the command line. This particular technique will load script code from a file. Upon a successful execution, the following module loads may occur - clr.dll, jscript.dll and scrobj.dll. During investigation, identify script content origination. Generally, a child process will spawn from rundll32.exe, but that may be bypassed based on script code contents. Rundll32.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64. During investigation, review any network connections and obtain the script content executed. It's possible other files are on disk.",Endpoint Detection and Response
"detect_rundll32_application_control_bypass_-_syssetup:The following analytic identifies rundll32.exe loading syssetup.dll by calling the LaunchINFSection function on the command line. This particular technique will load script code from a file. Upon a successful execution, the following module loads may occur - clr.dll, jscript.dll and scrobj.dll. During investigation, identify script content origination. Generally, a child process will spawn from rundll32.exe, but that may be bypassed based on script code contents. Rundll32.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64. During investigation, review any network connections and obtain the script content executed. It's possible other files are on disk.",Endpoint Detection and Response
"detect_sharphound_command-line_arguments:The following analytic identifies common command-line arguments used by SharpHound `-collectionMethod` and `invoke-bloodhound`. Being the script is FOSS, function names may be modified, but these changes are dependent upon the operator. In most instances the defaults are used. This analytic works to identify the common command-line attributes used. It does not cover the entirety of every argument in order to avoid false positives.",Endpoint Detection and Response
"disabled_kerberos_pre-authentication_discovery_with_get-aduser:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `Get-ADUser` commandlet with specific parameters. `Get-ADUser` is part of the Active Directory PowerShell module used to manage Windows Active Directory networks. As the name suggests, `Get-ADUser` is used to query for domain users. With the appropiate parameters, Get-ADUser allows adversaries to discover domain accounts with Kerberos Pre Authentication disabled.\ Red Teams and adversaries alike use may abuse Get-ADUSer to enumerate these accounts and attempt to crack their passwords offline.",Windows Security
"disabled_kerberos_pre-authentication_discovery_with_powerview:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `Get-DomainUser` commandlet with specific parameters. `Get-DomainUser` is part of PowerView, a PowerShell tool used to perform enumeration on Windows Active Directory networks. As the name suggests, `Get-DomainUser` is used to identify domain users and combining it with `-PreauthNotRequired` allows adversaries to discover domain accounts with Kerberos Pre Authentication disabled.\ Red Teams and adversaries alike use may leverage PowerView to enumerate these accounts and attempt to crack their passwords offline.",Windows Security
dns_query_length_outliers_-_mltk:This search allows you to identify DNS requests that are unusually large for the record type being requested in your environment.,DNS
"exploit_public-facing_fortinet_fortinac_cve-2022-39952:The following analytic identifies a recent CVE-2022-39952 released publicly where the URI configWizard/keyUpload.jsp recieves a POST with the payload.zip, from there the POC script will schedule a cron to run the payload and contact the remote C2.","Web Server
Web Proxy"
"f5_big-ip_icontrol_rest_vulnerability_cve-2022-1388:The following analytic identifies a recent unauthenticated remote code execution vulnerablity against the F5 BIG-IP iControl REST API. The analytic identifies the URI path found in the POCs and the HTTP Method of POST. In addition, the request header will have the commands that may be executed in fields utilcmdargs and the auth field of X-F5-Auth-Token, which may have a random base64 encoded value.","Web Server
Web Proxy"
gcp_multi-factor_authentication_disabled:The following analytic identifies an attempt to disable multi-factor authentication for a GCP user. An adversary who has obtained access to an GCP tenant may disable multi-factor authentication as a way to plant a backdoor and maintain persistence using a valid account. This way the attackers can keep persistance in the environment without adding new users.,GCP
"gcp_successful_single-factor_authentication:The following analytic identifies a successful authentication event against Google Cloud Platform for an account without Multi-Factor Authentication enabled. This could be evidence of a missconfiguration, a policy violation or an account take over attempt that should be investigated",GCP
"get-domaintrust_with_powershell:This analytic identifies Get-DomainTrust from PowerView in order to gather domain trust information. Typically, this is utilized within a script being executed and used to enumerate the domain trust information. This grants the adversary an understanding of how large or small the domain is. During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity.",Endpoint Detection and Response
"get-domaintrust_with_powershell_script_block:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable on critical endpoints or all. \This analytic identifies Get-DomainTrust from PowerView in order to gather domain trust information. \During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",Windows Security
"get-foresttrust_with_powershell:This analytic identifies Get-ForestTrust from PowerSploit in order to gather domain trust information. Typically, this is utilized within a script being executed and used to enumerate the domain trust information. This grants the adversary an understanding of how large or small the domain is. During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity.",Endpoint Detection and Response
"get-foresttrust_with_powershell_script_block:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable on critical endpoints or all. \This analytic identifies Get-ForestTrust from PowerSploit in order to gather domain trust information. \During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",Windows Security
hide_user_account_from_sign-in_screen:This analytic identifies a suspicious registry modification to hide a user account on the Windows Login screen. This technique was seen in some tradecraft where the adversary will create a hidden user account with Admin privileges in login screen to avoid noticing by the user that they already compromise and to persist on that said machine.,Endpoint Detection and Response
"kerberos_pre-authentication_flag_disabled_in_useraccountcontrol:The following analytic leverages Windows Security Event 4738, `A user account was changed`, to identify a change performed on a domain user object that disables Kerberos Pre-Authentication. Disabling the Pre Authentication flag in the UserAccountControl property allows an adversary to easily perform a brute force attack against the user's password offline leveraging the ASP REP Roasting technique. Red Teams and adversaries alike who have obtained privileges in an Active Directory network may use this technique as a backdoor or a way to escalate privileges.",Windows Security
"kerberos_pre-authentication_flag_disabled_with_powershell:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the `Set-ADAccountControl` commandlet with specific parameters. `Set-ADAccountControl` is part of the Active Directory PowerShell module used to manage Windows Active Directory networks. As the name suggests, `Set-ADAccountControl` is used to modify User Account Control values for an Active Directory domain account. With the appropiate parameters, Set-ADAccountControl allows adversaries to disable Kerberos Pre-Authentication for an account to to easily perform a brute force attack against the user's password offline leveraging the ASP REP Roasting technique. Red Teams and adversaries alike who have obtained privileges in an Active Directory network may use this technique as a backdoor or a way to escalate privileges.",Windows Security
"linux_apt-get_privilege_escalation:The apt-get is a command line tool for interacting with the Advanced Package Tool (APT) library (a package management system for Linux distributions). It allows you to search for, install, manage, update, and remove software. The tool does not build software from the source code. If sudo right is given to the tool for user, then the user can run system commands as root and possibly get a root shell.",Endpoint Detection and Response
"log4shell_cve-2021-44228_exploitation:This correlation find exploitation of Log4Shell CVE-2021-44228 against systems using detections from Splunk Security Content Analytic Story. It does this by calculating the distinct count of MITRE ATT&CK tactics from Log4Shell detections fired. If the count is larger than 2 or more distinct MITRE ATT&CK tactics we assume high problability of exploitation. The Analytic story breaks down into 3 major phases of a Log4Shell exploitation, specifically> Initial Payload delivery eg. `${jndi:ldap://PAYLOAD_INJECTED}` Call back to malicious LDAP server eg. Exploit.class Post Exploitation Activity/Lateral Movement using Powershell or similar T1562.001 Each of these phases fall into different MITRE ATT&CK Tactics (Initial Access, Execution, Command And Control), by looking into 2 or more phases showing up in detections triggerd is how this correlation search finds exploitation. If we get a notable from this correlation search the best way to triage it is by investigating the affected systems against Log4Shell exploitation using Splunk SOAR playbooks.",Risk Modifiers
macos_-_re-opened_applications:This search looks for processes referencing the plist files that determine which applications are re-opened when a user reboots their machine.,Endpoint Detection and Response
"malicious_powershell_process_-_encoded_command:The following analytic identifies the use of the EncodedCommand PowerShell parameter. This is typically used by Administrators to run complex scripts, but commonly used by adversaries to hide their code. \The analytic identifies all variations of EncodedCommand, as PowerShell allows the ability to shorten the parameter. For example enc, enco, encod and so forth. In addition, through our research it was identified that PowerShell will interpret different command switch types beyond the hyphen. We have added endash, emdash, horizontal bar, and forward slash. \During triage, review parallel events to determine legitimacy. Tune as needed based on admin scripts in use. \Alternatively, may use regex per matching here https://regexr.com/662ov.",Endpoint Detection and Response
malicious_powershell_process_-_execution_policy_bypass:This search looks for PowerShell processes started with parameters used to bypass the local execution policy for scripts. These parameters are often observed in attacks leveraging PowerShell scripts as they override the default PowerShell execution policy.,Endpoint Detection and Response
"msi_module_loaded_by_non-system_binary:The following hunting analytic identifies `msi.dll` being loaded by a binary not located in `system32`, `syswow64`, `winsxs` or `windows` paths. This behavior is most recently related to InstallerFileTakeOver, or CVE-2021-41379, and DLL side-loading. CVE-2021-41379 requires a binary to be dropped and `msi.dll` to be loaded by it. To Successful exploitation of this issue happens in four parts \1. Generation of an MSI that will trigger bad behavior. \1. Preparing a directory for MSI installation. \1. Inducing an error state. \1. Racing to introduce a junction and a symlink to trick msiexec.exe to modify the attacker specified file. \In addition, `msi.dll` has been abused in DLL side-loading attacks by being loaded by non-system binaries.",Microsoft Sysmon Logs
osquery_pack_-_coldroot_detection:This search looks for ColdRoot events from the osx-attacks osquery pack.,Host-based IDS
"powershell_-_connect_to_internet_with_hidden_window:The following hunting analytic identifies PowerShell commands utilizing the WindowStyle parameter to hide the window on the compromised endpoint. This combination of command-line options is suspicious because it is overriding the default PowerShell execution policy, attempts to hide its activity from the user, and connects to the Internet. Removed in this version of the query is New-Object. The analytic identifies all variations of WindowStyle, as PowerShell allows the ability to shorten the parameter. For example w, win, windowsty and so forth. In addition, through our research it was identified that PowerShell will interpret different command switch types beyond the hyphen. We have added endash, emdash, horizontal bar, and forward slash.",Endpoint Detection and Response
"powershell_start-bitstransfer:Start-BitsTransfer is the PowerShell ""version"" of BitsAdmin.exe. Similar functionality is present. This technique variation is not as commonly used by adversaries, but has been abused in the past. Lesser known uses include the ability to set the `-TransferType` to `Upload` for exfiltration of files. In an instance where `Upload` is used, it is highly possible files will be archived. During triage, review parallel processes and process lineage. Capture any files on disk and review. For the remote domain or IP, what is the reputation?",Endpoint Detection and Response
"print_spooler_failed_to_load_a_plug-in:The following analytic identifies driver load errors utilizing the Windows PrintService Admin logs. This was identified during our testing of CVE-2021-34527 previously (CVE-2021-1675) or PrintNightmare. \Within the proof of concept code, the following error will occur - ""The print spooler failed to load a plug-in module C:\Windows\system32\spool\DRIVERS\x64\3\meterpreter.dll, error code 0x45A. See the event user data for context information."" \The analytic is based on file path and failure to load the plug-in. \During triage, isolate the endpoint and review for source of exploitation. Capture any additional file modification events.",None
smb_traffic_spike_-_mltk:This search uses the Machine Learning Toolkit (MLTK) to identify spikes in the number of Server Message Block (SMB) connections.,Network Communication
"spoolsv_writing_a_dll_-_sysmon:The following analytic identifies a `.dll` being written by `spoolsv.exe`. This was identified during our testing of CVE-2021-34527 previously(CVE-2021-1675) or PrintNightmare. Typically, this is not normal behavior for `spoolsv.exe` to write a `.dll`. Current POC code used will write the suspicious DLL to disk within a path of `\spool\drivers\x64\`. During triage, isolate the endpoint and review for source of exploitation. Capture any additional file modification events.",Microsoft Sysmon Logs
"suspicious_email_-_uba_anomaly:This detection looks for emails that are suspicious because of their sender, domain rareness, or behavior differences. This is an anomaly generated by Splunk User Behavior Analytics (UBA).",None
"suspicious_powershell_command-line_arguments:This search looks for PowerShell processes started with a base64 encoded command-line passed to it, with parameters to modify the execution policy for the process, and those that prevent the display of an interactive prompt to the user. This combination of command-line options is suspicious because it overrides the default PowerShell execution policy, attempts to hide itself from the user, and passes an encoded script to be run on the command-line. Deprecated because almost the same as Malicious PowerShell Process - Encoded Command",Endpoint Detection and Response
unusually_long_command_line_-_mltk:Command lines that are extremely long may be indicative of malicious activity on your hosts. This search leverages the Machine Learning Toolkit (MLTK) to help identify command lines with lengths that are unusual for a given user.,Endpoint Detection and Response
unusually_long_content-type_length:This search looks for unusually long strings in the Content-Type http header that the client sends the server.,Web Server
"vmware_workspace_one_freemarker_server-side_template_injection:The following analytic identifies the server side template injection related to CVE-2022-22954. Based on the scanning activity across the internet and proof of concept code available the template injection occurs at catalog-portal/ui/oauth/verify?error=&deviceudid=. Upon triage, review parallel processes and VMware logs. Following the deviceudid= may be a command to be executed. Capture any file creates and review modified files on disk.","Web Server
Web Proxy"
web_fraud_-_account_harvesting:This search is used to identify the creation of multiple user accounts using the same email domain name.,Web Server
"web_fraud_-_anomalous_user_clickspeed:This search is used to examine web sessions to identify those where the clicks are occurring too quickly for a human or are occurring with a near-perfect cadence (high periodicity or low standard deviation), resembling a script driven session.",Web Server
web_fraud_-_password_sharing_across_accounts:This search is used to identify user accounts that share a common password.,Web Server
"windows_clipboard_data_via_get-clipboard:The following analytic identifies a powershell script command to retrieve clipboard data. This technique was seen in several post exploitation tools like WINPEAS to steal sensitive information that was saved in clipboard. Using the Get-Clipboard powershell commandlet, adversaries can be able collect data stored in clipboard that might be a copied user name, password or other sensitive information.",Windows Security
windows_dll_side-loading_in_calc:The following analytic identifies suspicious DLL modules loaded by calc.exe that are not in windows %systemroot%\system32 or %systemroot%\sysWoW64 folder. This technique is well used by Qakbot malware to execute its malicious DLL file via dll side loading technique in calc process execution. This TTP detection is a good indicator that a suspicious dll was loaded in a public or non-common installation folder of Windows Operating System that needs further investigation.,Microsoft Sysmon Logs
windows_dll_side-loading_process_child_of_calc:The following analytic identifies the suspicious child process of calc.exe due to dll side loading technique to execute another executable. This technique was seen in qakbot malware that uses dll side loading technique to calc applications to load its malicious dll code. The malicious dll that abuses dll side loading technique will load the actual qakbot loader dll using regsvr32.exe application. This TTP is a good indicator of qakbot since the calc.exe will not load other child processes aside from win32calc.exe.,Endpoint Detection and Response
"windows_driver_load_non-standard_path:The following analytic uses Windows EventCode 7045 to identify new Kernel Mode Drivers being loaded in Windows from a non-standard path. Note that, adversaries may move malicious or vulnerable drivers into these paths and load up. The idea is that this analytic provides visibility into drivers loading in non-standard file paths.",Microsoft System EventLog
"windows_file_transfer_protocol_in_non-common_process_path:The following analytic identifies a possible windows application having a FTP connection in a non common installation path in windows operating system.This network protocol is being used by adversaries, threat actors and malware like AgentTesla as a Command And Control communication to transfer its collected stolen information like the desktop screenshots, browser information and system information of a targeted or compromised host.",Microsoft Sysmon Logs
windows_get-adcomputer_unconstrained_delegation_discovery:The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the Get-ADComputer commandlet used with specific parameters to discover Windows endpoints with Kerberos Unconstrained Delegation. Red Teams and adversaries alike may leverage use this technique for situational awareness and Active Directory Discovery.,Windows Security
windows_iis_components_get-webglobalmodule_module_query:The following analytic requires the use of PowerShell inputs to run Get-WebGlobalModule to list out all the IIS Modules installed. The output is a list of Module names and the Image path of the DLL.,Web Server
"windows_mail_protocol_in_non-common_process_path:The following analytic identifies a possible windows application having a SMTP connection in a non common installation path in windows operating system.This network protocol is being used by adversaries, threat actors and malware like AgentTesla as a Command And Control communication to transfer its collected stolen information like the desktop screenshots, browser information and system information of a targeted or compromised host.",Microsoft Sysmon Logs
"windows_non-system_account_targeting_lsass:The following analytic identifies non SYSTEM accounts requesting access to lsass.exe. This behavior may be related to credential dumping or applications requiring access to credentials. Triaging this event will require understanding the GrantedAccess from the SourceImage. In addition, whether the account is privileged or not. Review the process requesting permissions and review parallel processes.",Microsoft Sysmon Logs
"wmi_permanent_event_subscription_-_sysmon:This analytic looks for the creation of WMI permanent event subscriptions. The following analytic identifies the use of WMI Event Subscription to establish persistence or perform privilege escalation.  WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. WMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges. This analytic is restricted by commonly added process execution and a path. If the volume is low enough, remove the values and flag on any new subscriptions.\All event subscriptions have three components \1. Filter - WQL Query for the events we want. EventID = 19 \1. Consumer - An action to take upon triggering the filter. EventID = 20 \1. Binding - Registers a filter to a consumer. EventID = 21 \Monitor for the creation of new WMI EventFilter, EventConsumer, and FilterToConsumerBinding. It may be pertinent to review all 3 to identify the flow of execution. In addition, EventCode 4104 may assist with any other PowerShell script usage that registered the subscription.",Microsoft Sysmon Logs